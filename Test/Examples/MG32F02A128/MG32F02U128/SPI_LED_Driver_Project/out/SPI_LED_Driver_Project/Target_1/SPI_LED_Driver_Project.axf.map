Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    startup_MG32x02z.o(RESET) refers to startup_MG32x02z.o(STACK) for __initial_sp
    startup_MG32x02z.o(RESET) refers to startup_MG32x02z.o(.text) for MG32x02z_IEC60730_MANAGER
    startup_MG32x02z.o(RESET) refers to MG32x02z_RGB_API.o(.text.TM10_IRQHandler) for TM10_IRQHandler
    startup_MG32x02z.o(RESET) refers to MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) for URT123_IRQHandler
    startup_MG32x02z.o(RESET) refers to MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler) for SPI0_IRQHandler
    startup_MG32x02z.o(.text) refers to system_MG32x02z.o(.text.SystemInit) for SystemInit
    startup_MG32x02z.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_MG32x02z.o(.text) refers to system_MG32x02z.o(.text.HardFault_Handler_C) for HardFault_Handler_C
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DeInit) refers to MG32x02z_ADC_DRV.o(.text.ADC_DeInit) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_BaseStructure_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_BaseStructure_Init) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClockSource_Select) for ADC_ClockSource_Select
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetInternalClockDivider) for ADC_SetInternalClockDivider
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetPLLClockDivider) for ADC_SetPLLClockDivider
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataAlignment_Select) for ADC_DataAlignment_Select
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataResolution_Select) for ADC_DataResolution_Select
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataOverrunMode_Select) for ADC_DataOverrunMode_Select
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetConversionTime) for ADC_SetConversionTime
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetOperationCurrent) for ADC_SetOperationCurrent
    MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_SampleClockPhase_Select) for ADC_SampleClockPhase_Select
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_Base_Init) refers to MG32x02z_ADC_DRV.o(.text.ADC_Base_Init) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClockSource_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClockSource_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetInternalClockDivider) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetInternalClockDivider) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetPLLClockDivider) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetPLLClockDivider) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DataAlignment_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataAlignment_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DataResolution_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataResolution_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DataOverrunMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataOverrunMode_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetConversionTime) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetConversionTime) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetOperationCurrent) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetOperationCurrent) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SampleClockPhase_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_SampleClockPhase_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetLowerThreshold) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetLowerThreshold) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetHigherThreshold) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetHigherThreshold) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_WindowDetectRange_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_WindowDetectRange_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_WindowDetect_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_WindowDetect_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_Output_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_Output_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_PGA_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_PGA_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetPGAGain) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetPGAGain) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetPGAOffset) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetPGAOffset) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to memcpya.o(.text) for __aeabi_memcpy8
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_PW_DRV.o(.text.PW_VoltageBuffer) for PW_VoltageBuffer
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSumNumber) for ADC_SetSumNumber
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_WindowDetect_Cmd) for ADC_WindowDetect_Cmd
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_ConversionMode_Select) for ADC_ConversionMode_Select
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_TriggerSource_Select) for ADC_TriggerSource_Select
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetOutputCodeFormat) for ADC_SetOutputCodeFormat
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataResolution_Select) for ADC_DataResolution_Select
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_PGA_Cmd) for ADC_PGA_Cmd
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_InternalChannel_Select) for ADC_InternalChannel_Select
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetExtendSampling) for ADC_SetExtendSampling
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_SoftwareConversion_Cmd) for ADC_SoftwareConversion_Cmd
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSingleFlagStatus) for ADC_GetSingleFlagStatus
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClearFlag) for ADC_ClearFlag
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Data) for ADC_GetDAT0Data
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dfltui.o(.text) for __aeabi_ui2d
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dmul.o(.text) for __aeabi_dmul
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetPGAOffset) for ADC_SetPGAOffset
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dflti.o(.text) for __aeabi_i2d
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dcmpeq.o(.text) for __aeabi_dcmpeq
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dcmplt.o(.text) for __aeabi_dcmplt
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dadd.o(.text) for __aeabi_dsub
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dcmpge.o(.text) for __aeabi_dcmpge
    MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.rodata..L__const.ADC_PGAOffsetCalibration_Cmd.PGA_Gain_V) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_PGAOffsetCalibration_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSumNumber) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSumNumber) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.text.ADC_ConversionMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_MainConversionMode_Select) for ADC_MainConversionMode_Select
    MG32x02z_ADC_DRV.o(.text.ADC_ConversionMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_ContinueMode_Cmd) for ADC_ContinueMode_Cmd
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ConversionMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_ConversionMode_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TriggerSource_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_TriggerSource_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetOutputCodeFormat) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetOutputCodeFormat) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_InternalChannel_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_InternalChannel_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetExtendSampling) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetExtendSampling) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SoftwareConversion_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_SoftwareConversion_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSingleFlagStatus) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearFlag) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetDAT0Data) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Data) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_ConversionMode_Select) for ADC_ConversionMode_Select
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_TriggerSource_Select) for ADC_TriggerSource_Select
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_SingleDifferentMode_Select) for ADC_SingleDifferentMode_Select
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetOutputCodeFormat) for ADC_SetOutputCodeFormat
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_DataResolution_Select) for ADC_DataResolution_Select
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_InternalChannel_Select) for ADC_InternalChannel_Select
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_SoftwareConversion_Cmd) for ADC_SoftwareConversion_Cmd
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSingleFlagStatus) for ADC_GetSingleFlagStatus
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClearFlag) for ADC_ClearFlag
    MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Data) for ADC_GetDAT0Data
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_StartCalibration) refers to MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SingleDifferentMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_SingleDifferentMode_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DMA_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_DMA_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DMADataSize_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_DMADataSize_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DMAMaskFlag_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_DMAMaskFlag_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetNextConversionChannel) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetNextConversionChannel) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_AutoOff_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_AutoOff_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetStartupTime) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetStartupTime) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetStartupDivider) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetStartupDivider) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_WaitDataReadOut) refers to MG32x02z_ADC_DRV.o(.text.ADC_WaitDataReadOut) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_MainConversionMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_MainConversionMode_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ContinueMode_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_ContinueMode_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_HoldConversion_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_HoldConversion_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TriggerEdge_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_TriggerEdge_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ChannelMUX_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_ChannelMUX_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ExternalChannel_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_ExternalChannel_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ScanLoopChannel_Enable) refers to MG32x02z_ADC_DRV.o(.text.ADC_ScanLoopChannel_Enable) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ChangeMUXTiming_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_ChangeMUXTiming_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetLimitFunction) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetLimitFunction) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum0Channel) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSum0Channel) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum1Channel) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSum1Channel) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum2Channel) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSum2Channel) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SumChannelMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_SumChannelMode_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SumOverrunMode_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_SumOverrunMode_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum0Flags) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSum0Flags) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum1Flags) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSum1Flags) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum2Flags) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSum2Flags) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearSum0Flags) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClearSum0Flags) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearSum1Flags) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClearSum1Flags) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearSum2Flags) refers to MG32x02z_ADC_DRV.o(.text.ADC_ClearSum2Flags) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum0Data) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSum0Data) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum1Data) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSum1Data) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum2Data) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetSum2Data) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum0Data) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSum0Data) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum1Data) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSum1Data) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum2Data) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetSum2Data) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetDAT0Flags) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Flags) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetDAT0Channel) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Channel) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetDigitalOffset) refers to MG32x02z_ADC_DRV.o(.text.ADC_SetDigitalOffset) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TSO_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_TSO_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TSOVref_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_TSOVref_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_IVR24_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_IVR24_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TopRefernce_Select) refers to MG32x02z_ADC_DRV.o(.text.ADC_TopRefernce_Select) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_IT_Config) refers to MG32x02z_ADC_DRV.o(.text.ADC_IT_Config) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ITEA_Cmd) refers to MG32x02z_ADC_DRV.o(.text.ADC_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetAllFlagStatus) refers to MG32x02z_ADC_DRV.o(.text.ADC_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_TimerX_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_TimerX_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ITR6_Select) refers to MG32x02z_APB_DRV.o(.text.APB_ITR6_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ITR7_Select) refers to MG32x02z_APB_DRV.o(.text.APB_ITR7_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_BreakSourceChannel0_Select) refers to MG32x02z_APB_DRV.o(.text.APB_BreakSourceChannel0_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_BreakSourceChannel1_Select) refers to MG32x02z_APB_DRV.o(.text.APB_BreakSourceChannel1_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_BreakSourceChannel2_Select) refers to MG32x02z_APB_DRV.o(.text.APB_BreakSourceChannel2_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseBKS0_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseBKS0_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseBKS1_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseBKS1_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseBKS2_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseBKS2_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OBMxOpMode_Select) refers to MG32x02z_APB_DRV.o(.text.APB_OBMxOpMode_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetOBMxOutputState) refers to MG32x02z_APB_DRV.o(.text.APB_GetOBMxOutputState) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseOBMxOutput_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseOBMxOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OutputFilter_Select) refers to MG32x02z_APB_DRV.o(.text.APB_OutputFilter_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetOBMxSwitchState) refers to MG32x02z_APB_DRV.o(.text.APB_GetOBMxSwitchState) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_SetOBMxInitState) refers to MG32x02z_APB_DRV.o(.text.APB_SetOBMxInitState) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetOBMxInitState) refers to MG32x02z_APB_DRV.o(.text.APB_GetOBMxInitState) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OutputChannel0Source_Select) refers to MG32x02z_APB_DRV.o(.text.APB_OutputChannel0Source_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OutputChannel1Source_Select) refers to MG32x02z_APB_DRV.o(.text.APB_OutputChannel1Source_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseOutputChannel0_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseOutputChannel0_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseOutputChannel1_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseOutputChannel1_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_IRCLK_Select) refers to MG32x02z_APB_DRV.o(.text.APB_IRCLK_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_IRDAT_Select) refers to MG32x02z_APB_DRV.o(.text.APB_IRDAT_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseIRCLK_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseIRCLK_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseIRDAT_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_InverseIRDAT_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOClockSource_Select) refers to MG32x02z_APB_DRV.o(.text.APB_NCOClockSource_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOOutputMode_Select) refers to MG32x02z_APB_DRV.o(.text.APB_NCOOutputMode_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOInverseOutput_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_NCOInverseOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCO_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_NCO_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOPFMWidth_Select) refers to MG32x02z_APB_DRV.o(.text.APB_NCOPFMWidth_Select) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOSetINC) refers to MG32x02z_APB_DRV.o(.text.APB_NCOSetINC) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOSetACC) refers to MG32x02z_APB_DRV.o(.text.APB_NCOSetACC) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOGetOutputState) refers to MG32x02z_APB_DRV.o(.text.APB_NCOGetOutputState) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_IT_Config) refers to MG32x02z_APB_DRV.o(.text.APB_IT_Config) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ITEA_Cmd) refers to MG32x02z_APB_DRV.o(.text.APB_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetSingleFlagStatus) refers to MG32x02z_APB_DRV.o(.text.APB_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetAllFlagStatus) refers to MG32x02z_APB_DRV.o(.text.APB_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ClearFlag) refers to MG32x02z_APB_DRV.o(.text.APB_ClearFlag) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLTruthTable_Select) refers to MG32x02z_APX_DRV.o(.text.APX_CCLTruthTable_Select) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLTruthTable_Cmd) refers to MG32x02z_APX_DRV.o(.text.APX_CCLTruthTable_Cmd) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_GetCCLxOutputState) refers to MG32x02z_APX_DRV.o(.text.APX_GetCCLxOutputState) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SetCCLSnState) refers to MG32x02z_APX_DRV.o(.text.APX_SetCCLSnState) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_InverseCCLOutput_Cmd) refers to MG32x02z_APX_DRV.o(.text.APX_InverseCCLOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SetCCLIntClockDivider) refers to MG32x02z_APX_DRV.o(.text.APX_SetCCLIntClockDivider) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SQSEL_Select) refers to MG32x02z_APX_DRV.o(.text.APX_SQSEL_Select) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_EDSEL_Select) refers to MG32x02z_APX_DRV.o(.text.APX_EDSEL_Select) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SetFilterFunction) refers to MG32x02z_APX_DRV.o(.text.APX_SetFilterFunction) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCL_Cmd) refers to MG32x02z_APX_DRV.o(.text.APX_CCL_Cmd) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLMUX2_Select) refers to MG32x02z_APX_DRV.o(.text.APX_CCLMUX2_Select) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLMUX1_Select) refers to MG32x02z_APX_DRV.o(.text.APX_CCLMUX1_Select) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLMUX0_Select) refers to MG32x02z_APX_DRV.o(.text.APX_CCLMUX0_Select) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_IT_Config) refers to MG32x02z_APX_DRV.o(.text.APX_IT_Config) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_ITEA_Cmd) refers to MG32x02z_APX_DRV.o(.text.APX_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_GetSingleFlagStatus) refers to MG32x02z_APX_DRV.o(.text.APX_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_GetAllFlagStatus) refers to MG32x02z_APX_DRV.o(.text.APX_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_ClearFlag) refers to MG32x02z_APX_DRV.o(.text.APX_ClearFlag) for [Anonymous Symbol]
    MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_SysTick_Cmd) refers to MG32x02z_CM0_DRV.o(.text.CM0_SysTick_Cmd) for [Anonymous Symbol]
    MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_SysTickIT_Cmd) refers to MG32x02z_CM0_DRV.o(.text.CM0_SysTickIT_Cmd) for [Anonymous Symbol]
    MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_SysTickClockSource_Select) refers to MG32x02z_CM0_DRV.o(.text.CM0_SysTickClockSource_Select) for [Anonymous Symbol]
    MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_GetSysTickCurrentValue) refers to MG32x02z_CM0_DRV.o(.text.CM0_GetSysTickCurrentValue) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_DeInit) refers to MG32x02z_CMP_DRV.o(.text.CMP_DeInit) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_Cmd) refers to MG32x02z_CMP_DRV.o(.text.CMP_Cmd) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_Power_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_Power_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_FilterClock_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_FilterClock_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_FilterClockDivider_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_FilterClockDivider_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_InverseOutputPin) refers to MG32x02z_CMP_DRV.o(.text.CMP_InverseOutputPin) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_OutputPolarity_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_OutputPolarity_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF_Cmd) refers to MG32x02z_CMP_DRV.o(.text.CMP_IVREF_Cmd) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF2_Cmd) refers to MG32x02z_CMP_DRV.o(.text.CMP_IVREF2_Cmd) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_IVREF_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF2_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_IVREF2_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREFTopSource_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_IVREFTopSource_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF2TopSource_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_IVREF2TopSource_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_AC0IVREFOuput_Cmd) refers to MG32x02z_CMP_DRV.o(.text.CMP_AC0IVREFOuput_Cmd) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_AC1IVREFOuput_Cmd) refers to MG32x02z_CMP_DRV.o(.text.CMP_AC1IVREFOuput_Cmd) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_PositivePin_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_PositivePin_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_NegativePin_Select) refers to MG32x02z_CMP_DRV.o(.text.CMP_NegativePin_Select) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_SetHysteresisWindow) refers to MG32x02z_CMP_DRV.o(.text.CMP_SetHysteresisWindow) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IT_Config) refers to MG32x02z_CMP_DRV.o(.text.CMP_IT_Config) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_ITEA_Cmd) refers to MG32x02z_CMP_DRV.o(.text.CMP_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_GetSingleFlagStatus) refers to MG32x02z_CMP_DRV.o(.text.CMP_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_GetAllFlagStatus) refers to MG32x02z_CMP_DRV.o(.text.CMP_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_ClearFlag) refers to MG32x02z_CMP_DRV.o(.text.CMP_ClearFlag) for [Anonymous Symbol]
    MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_GetOutput) refers to MG32x02z_CMP_DRV.o(.text.CMP_GetOutput) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_IHRCO_Cmd) refers to MG32x02z_CSC_DRV.o(.text.CSC_IHRCO_Cmd) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_IHRCO_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_IHRCO_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_XOSC_Cmd) refers to MG32x02z_CSC_DRV.o(.text.CSC_XOSC_Cmd) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_XOSCGain_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_XOSCGain_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_EXTCK_Cmd) refers to MG32x02z_CSC_DRV.o(.text.CSC_EXTCK_Cmd) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_ST_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_ST_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_MAIN_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_MAIN_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_HS_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_HS_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_LS_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_LS_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_HS2_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_HS2_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PLL_Config) refers to MG32x02z_CSC_DRV.o(.text.CSC_PLL_Config) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PLL_Cmd) refers to MG32x02z_CSC_DRV.o(.text.CSC_PLL_Cmd) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_APB_Divider_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_APB_Divider_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_UT_Divider_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_UT_Divider_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_AHB_Divider_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_AHB_Divider_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ICKO_ClockSource_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_ICKO_ClockSource_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ICKO_Divider_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_ICKO_Divider_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ICKO_Cmd) refers to MG32x02z_CSC_DRV.o(.text.CSC_ICKO_Cmd) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_MissingClockDetectionDuration_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_MissingClockDetectionDuration_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_MissingClockDetection_Cmd) refers to MG32x02z_CSC_DRV.o(.text.CSC_MissingClockDetection_Cmd) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphProcessClockSource_Config) refers to MG32x02z_CSC_DRV.o(.text.CSC_PeriphProcessClockSource_Config) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphONModeClock_Config) refers to MG32x02z_CSC_DRV.o(.text.CSC_PeriphONModeClock_Config) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphSLEEPModeClock_Config) refers to MG32x02z_CSC_DRV.o(.text.CSC_PeriphSLEEPModeClock_Config) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphSTOPModeClock_Config) refers to MG32x02z_CSC_DRV.o(.text.CSC_PeriphSTOPModeClock_Config) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetAllFlagStatus) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetClockSourceState) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetClockSourceState) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetMainSwitchState) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetMainSwitchState) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetHsSwitchState) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetHsSwitchState) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetLsSwitchState) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetLsSwitchState) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetHS2SwitchState) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetHS2SwitchState) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetPLLISwitchState) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetPLLISwitchState) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetSingleFlagStatus) refers to MG32x02z_CSC_DRV.o(.text.CSC_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ClearFlag) refers to MG32x02z_CSC_DRV.o(.text.CSC_ClearFlag) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_IT_Config) refers to MG32x02z_CSC_DRV.o(.text.CSC_IT_Config) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ITEA_Cmd) refers to MG32x02z_CSC_DRV.o(.text.CSC_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_USB_Divider_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_USB_Divider_Select) for [Anonymous Symbol]
    MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_USB_ClockSource_Select) refers to MG32x02z_CSC_DRV.o(.text.CSC_CK_USB_ClockSource_Select) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DeInit) refers to MG32x02z_DAC_DRV.o(.text.DAC_DeInit) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_Cmd) refers to MG32x02z_DAC_DRV.o(.text.DAC_Cmd) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetDACState) refers to MG32x02z_DAC_DRV.o(.text.DAC_GetDACState) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_OutputBuffer_Cmd) refers to MG32x02z_DAC_DRV.o(.text.DAC_OutputBuffer_Cmd) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetDAT0) refers to MG32x02z_DAC_DRV.o(.text.DAC_GetDAT0) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_SetDAT0) refers to MG32x02z_DAC_DRV.o(.text.DAC_SetDAT0) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetOutput) refers to MG32x02z_DAC_DRV.o(.text.DAC_GetOutput) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_TriggerSource_Select) refers to MG32x02z_DAC_DRV.o(.text.DAC_TriggerSource_Select) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_TriggerEdge_Select) refers to MG32x02z_DAC_DRV.o(.text.DAC_TriggerEdge_Select) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DataAlignment_Select) refers to MG32x02z_DAC_DRV.o(.text.DAC_DataAlignment_Select) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DataResolution_Select) refers to MG32x02z_DAC_DRV.o(.text.DAC_DataResolution_Select) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_IT_Config) refers to MG32x02z_DAC_DRV.o(.text.DAC_IT_Config) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_ITEA_Cmd) refers to MG32x02z_DAC_DRV.o(.text.DAC_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetSingleFlagStatus) refers to MG32x02z_DAC_DRV.o(.text.DAC_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetAllFlagStatus) refers to MG32x02z_DAC_DRV.o(.text.DAC_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_ClearFlag) refers to MG32x02z_DAC_DRV.o(.text.DAC_ClearFlag) for [Anonymous Symbol]
    MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DMA_Cmd) refers to MG32x02z_DAC_DRV.o(.text.DAC_DMA_Cmd) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_DeInit) refers to MG32x02z_DMA_DRV.o(.text.DMA_DeInit) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_BaseInitStructure_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_BaseInitStructure_Init) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerPin) for DMA_SetExtTriggerPin
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerMode) for DMA_SetExtTriggerMode
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_LoopMode_Cmd) for DMA_LoopMode_Cmd
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseSourceAddress) for DMA_AutoIncreaseSourceAddress
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseDestinationAddress) for DMA_AutoIncreaseDestinationAddress
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_Source_Select) for DMA_Source_Select
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_Destination_Select) for DMA_Destination_Select
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetBurstSize) for DMA_SetBurstSize
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetTransferDataNumber) for DMA_SetTransferDataNumber
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetSourceAddress) for DMA_SetSourceAddress
    MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetDestinationAddress) for DMA_SetDestinationAddress
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Base_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetExtTriggerPin) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerPin) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetExtTriggerMode) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerMode) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_LoopMode_Cmd) refers to MG32x02z_DMA_DRV.o(.text.DMA_LoopMode_Cmd) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_AutoIncreaseSourceAddress) refers to MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseSourceAddress) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_AutoIncreaseDestinationAddress) refers to MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseDestinationAddress) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Source_Select) refers to MG32x02z_DMA_DRV.o(.text.DMA_Source_Select) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Destination_Select) refers to MG32x02z_DMA_DRV.o(.text.DMA_Destination_Select) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetBurstSize) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetBurstSize) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetTransferDataNumber) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetTransferDataNumber) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetSourceAddress) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetSourceAddress) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetDestinationAddress) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetDestinationAddress) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Cmd) refers to MG32x02z_DMA_DRV.o(.text.DMA_Cmd) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetExtraGPLChannel) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetExtraGPLChannel) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetCHxUseGPL) refers to MG32x02z_DMA_DRV.o(.text.DMA_GetCHxUseGPL) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_PriorityMode_Select) refers to MG32x02z_DMA_DRV.o(.text.DMA_PriorityMode_Select) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_FlashMode_Select) refers to MG32x02z_DMA_DRV.o(.text.DMA_FlashMode_Select) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_StartRequest) refers to MG32x02z_DMA_DRV.o(.text.DMA_StartRequest) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Channel_Cmd) refers to MG32x02z_DMA_DRV.o(.text.DMA_Channel_Cmd) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_LastCycle_Cmd) refers to MG32x02z_DMA_DRV.o(.text.DMA_LastCycle_Cmd) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Hold_Cmd) refers to MG32x02z_DMA_DRV.o(.text.DMA_Hold_Cmd) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetCurrentSourceAddress) refers to MG32x02z_DMA_DRV.o(.text.DMA_GetCurrentSourceAddress) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetCurrentDestinationAddress) refers to MG32x02z_DMA_DRV.o(.text.DMA_GetCurrentDestinationAddress) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetRemainDataCount) refers to MG32x02z_DMA_DRV.o(.text.DMA_GetRemainDataCount) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetPriority) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetPriority) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetChxSKIP3Mode) refers to MG32x02z_DMA_DRV.o(.text.DMA_SetChxSKIP3Mode) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_IT_Config) refers to MG32x02z_DMA_DRV.o(.text.DMA_IT_Config) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_ITEA_Cmd) refers to MG32x02z_DMA_DRV.o(.text.DMA_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetSingleFlagStatus) refers to MG32x02z_DMA_DRV.o(.text.DMA_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetAllFlagStatus) refers to MG32x02z_DMA_DRV.o(.text.DMA_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_ClearFlag) refers to MG32x02z_DMA_DRV.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetChannelFlag) refers to MG32x02z_DMA_DRV.o(.text.DMA_GetChannelFlag) for [Anonymous Symbol]
    MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_ClearChannelFlag) refers to MG32x02z_DMA_DRV.o(.text.DMA_ClearChannelFlag) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_Cmd) refers to MG32x02z_EMB_DRV.o(.text.EMB_Cmd) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_AddressDataBusMode_Config) refers to MG32x02z_EMB_DRV.o(.text.EMB_AddressDataBusMode_Config) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_WriteMode_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_WriteMode_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_AccessTime_Config) refers to MG32x02z_EMB_DRV.o(.text.EMB_AccessTime_Config) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_IT_Cmd) refers to MG32x02z_EMB_DRV.o(.text.EMB_IT_Cmd) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_ITEA_Cmd) refers to MG32x02z_EMB_DRV.o(.text.EMB_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_GetSingleFlagStatus) refers to MG32x02z_EMB_DRV.o(.text.EMB_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_GetAllFlagStatus) refers to MG32x02z_EMB_DRV.o(.text.EMB_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_ClearFlag) refers to MG32x02z_EMB_DRV.o(.text.EMB_ClearFlag) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SignalSWAP_Cmd) refers to MG32x02z_EMB_DRV.o(.text.EMB_SignalSWAP_Cmd) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SignalInverse_Cmd) refers to MG32x02z_EMB_DRV.o(.text.EMB_SignalInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SignalSW_Cmd) refers to MG32x02z_EMB_DRV.o(.text.EMB_SignalSW_Cmd) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SendSignalStatus_SW) refers to MG32x02z_EMB_DRV.o(.text.EMB_SendSignalStatus_SW) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MWESignal_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_MWESignal_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MOESignal_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_MOESignal_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MCLKPreescaler_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_MCLKPreescaler_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_WESignalMode_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_WESignalMode_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_OESignalMode_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_OESignalMode_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_CEMode_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_CEMode_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MA1SignalOutputPin_Select) refers to MG32x02z_EMB_DRV.o(.text.EMB_MA1SignalOutputPin_Select) for [Anonymous Symbol]
    MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_DMA_Cmd) refers to MG32x02z_EMB_DRV.o(.text.EMB_DMA_Cmd) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerMode_Select) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerMode_Select) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerAndMask_Select) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerAndMask_Select) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerOrMask_Select) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerOrMask_Select) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerAndUnmatch_Cmd) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerAndUnmatch_Cmd) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerITEA_Cmd) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxAllTriggerEventFlagStatus) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxAllTriggerEventFlagStatus) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxAllTriggerITFlagStatus) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxAllTriggerITFlagStatus) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPinxTriggerEventSingleFlagStatus) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_GetPinxTriggerEventSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxTriggerAndITFlagStatus) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxTriggerAndITFlagStatus) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxTriggerOrITFlagStatus) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxTriggerOrITFlagStatus) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_ClearPxTriggerEventFlag) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_ClearPxTriggerEventFlag) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_ClearPxTriggerITFlag) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_ClearPxTriggerITFlag) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetITSourceID) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_GetITSourceID) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_RXEV_Cmd) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_RXEV_Cmd) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_NMI_Cmd) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_NMI_Cmd) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_NMITrigger_SW) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_NMITrigger_SW) for [Anonymous Symbol]
    MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_NMI_Select) refers to MG32x02z_EXIC_DRV.o(.text.EXIC_NMI_Select) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinMode_Config) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinMode_Config) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PortMode_Config) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PortMode_Config) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinMode_Select) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinMode_Select) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinHighSpeedMode_Cmd) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinHighSpeedMode_Cmd) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinPUResister_Cmd) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinPUResister_Cmd) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinInverse_Cmd) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinOutputDrive_Select) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinOutputDrive_Select) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinInFilterDivider_Select) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinInFilterDivider_Select) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinFunction_Select) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PinFunction_Select) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PortFilterClockSource_Select) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PortFilterClockSource_Select) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_WritePort) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_WritePort) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_ReadPort) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_ReadPort) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_SetPortBit) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_SetPortBit) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_ClearPortBit) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_ClearPortBit) for [Anonymous Symbol]
    MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_SetClearPortBit) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_SetClearPortBit) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_ParityCheck_Select) refers to MG32x02z_GPL_DRV.o(.text.GPL_ParityCheck_Select) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckWord) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckWord) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckHalfWord) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_Low) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckHalfWord_Low) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_High) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckHalfWord_High) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_0) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_0) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_1) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_1) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_2) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_2) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_3) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_3) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_Inverse_Cmd) refers to MG32x02z_GPL_DRV.o(.text.GPL_Inverse_Cmd) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_ByteOrderChange_Cmd) refers to MG32x02z_GPL_DRV.o(.text.GPL_ByteOrderChange_Cmd) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_16BitsByteOrderChange_Cmd) refers to MG32x02z_GPL_DRV.o(.text.GPL_16BitsByteOrderChange_Cmd) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_BeforeBitOrderChange_Select) refers to MG32x02z_GPL_DRV.o(.text.GPL_BeforeBitOrderChange_Select) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_AfterBitOrderChange_Select) refers to MG32x02z_GPL_DRV.o(.text.GPL_AfterBitOrderChange_Select) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_Mode_Select) refers to MG32x02z_GPL_DRV.o(.text.GPL_CRC_Mode_Select) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_Data_Size_Select) refers to MG32x02z_GPL_DRV.o(.text.GPL_CRC_Data_Size_Select) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_SetInitValue) refers to MG32x02z_GPL_DRV.o(.text.GPL_CRC_SetInitValue) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_Cmd) refers to MG32x02z_GPL_DRV.o(.text.GPL_CRC_Cmd) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_DMA_Cmd) refers to MG32x02z_GPL_DRV.o(.text.GPL_DMA_Cmd) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_DataInput) refers to MG32x02z_GPL_DRV.o(.text.GPL_DataInput) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetOutputData) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetOutputData) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetAllFlagStatus) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetFlagStatus) refers to MG32x02z_GPL_DRV.o(.text.GPL_GetFlagStatus) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetClockSource) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetClockSource) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetClockPrescaler) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetClockPrescaler) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetClockDivider) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetClockDivider) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSCLHighTime) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetSCLHighTime) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSCLLowTime) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetSCLLowTime) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetPreDriveTime) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetPreDriveTime) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GeneralCallAddress_Cmd) refers to MG32x02z_I2C_DRV.o(.text.I2C_GeneralCallAddress_Cmd) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SlaveAddressDetect_Cmd) refers to MG32x02z_I2C_DRV.o(.text.I2C_SlaveAddressDetect_Cmd) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSlaveAddress) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetSlaveAddress) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSlaveAddress1Mask) refers to MG32x02z_I2C_DRV.o(.text.I2C_SetSlaveAddress1Mask) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetSlaveAddress) refers to MG32x02z_I2C_DRV.o(.text.I2C_GetSlaveAddress) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_Cmd) refers to MG32x02z_I2C_DRV.o(.text.I2C_Cmd) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_TXDMA_Cmd) refers to MG32x02z_I2C_DRV.o(.text.I2C_TXDMA_Cmd) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_RXDMA_Cmd) refers to MG32x02z_I2C_DRV.o(.text.I2C_RXDMA_Cmd) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_IT_Config) refers to MG32x02z_I2C_DRV.o(.text.I2C_IT_Config) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ITEA_Cmd) refers to MG32x02z_I2C_DRV.o(.text.I2C_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetITSource) refers to MG32x02z_I2C_DRV.o(.text.I2C_GetITSource) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetAllFlagStatus) refers to MG32x02z_I2C_DRV.o(.text.I2C_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to MG32x02z_I2C_DRV.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ClearFlag) refers to MG32x02z_I2C_DRV.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetEventCode) refers to MG32x02z_I2C_DRV.o(.text.I2C_GetEventCode) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetEventFlag) refers to MG32x02z_I2C_DRV.o(.text.I2C_GetEventFlag) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ClearEventFlag) refers to MG32x02z_I2C_DRV.o(.text.I2C_ClearEventFlag) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetSlaveMatchAddress) refers to MG32x02z_I2C_DRV.o(.text.I2C_GetSlaveMatchAddress) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SendSBUF) refers to MG32x02z_I2C_DRV.o(.text.I2C_SendSBUF) for [Anonymous Symbol]
    MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ReceiveSBUF) refers to MG32x02z_I2C_DRV.o(.text.I2C_ReceiveSBUF) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_Divider_Select) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_Divider_Select) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_GetCounter) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_GetCounter) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_RefreshCounter) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_RefreshCounter) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_StopModeWakeUpEvent_Config) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_StopModeWakeUpEvent_Config) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_Cmd) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_Cmd) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_GetAllFlagStatus) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_GetSingleFlagStatus) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_ClearFlag) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_ClearFlag) for [Anonymous Symbol]
    MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_IT_Config) refers to MG32x02z_IWDT_DRV.o(.text.IWDT_IT_Config) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetAllFlagStatus) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetFlagStatus) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetFlagStatus) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ClearFlag) refers to MG32x02z_MEM_DRV.o(.text.MEM_ClearFlag) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_HSP_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_HSP_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_HSP_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_HSP_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_SetFlashWaitState) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_SetFlashWaitState) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetFlashWaitState) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetFlashWaitState) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_IT_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_IT_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_IT_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_IT_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_ITEA_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_ITEA_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ITEA_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_ErrorReset_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_ErrorReset_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ErrorReset_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_ErrorReset_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_ErrorHardFault_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_ErrorHardFault_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ErrorHardFault_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_ErrorHardFault_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_WriteFlashHold_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_WriteFlashHold_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_WriteFlashHold_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_WriteFlashHold_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetAllAccessState) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetAllAccessState) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetAccessState) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetAccessState) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_Access_Cmd) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_Access_Cmd) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_Access_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_Access_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_SetWriteMode) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_SetWriteMode) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetWriteMode) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetWriteMode) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetWriteUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetWriteUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetSinglePageEraseUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetSinglePageEraseUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetMultiplePageEraseUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetMultiplePageEraseUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetSingleProgramUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetSingleProgramUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetMultipleProgramUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetMultipleProgramUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetMultipleWriteProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetMultipleWriteProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_APWrite_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_APWrite_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetIAPSize) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetIAPSize) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSize) refers to MG32x02z_MEM_DRV.o(.text.MEM_ClearFlag) for MEM_ClearFlag
    MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSize) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSize) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSize) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetFlagStatus) for MEM_GetFlagStatus
    MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSize) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetIAPSize) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSize) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSizeLock) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSizeLock) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for ProtectModuleReg
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetIAPSizeLock) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSizeLock) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_IAPExecuteCode_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_IAPExecuteCode_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_IAPWrite_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_IAPWrite_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPDRead_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_ISPDRead_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPDWrite_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_ISPDWrite_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetISPSize) refers to MG32x02z_MEM_DRV.o(.text.MEM_GetISPSize) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPRead_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_ISPRead_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPWrite_Cmd) refers to MG32x02z_MEM_DRV.o(.text.MEM_ISPWrite_Cmd) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPSinglePageEraseUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetISPSinglePageEraseUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPMultiplePageEraseUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetISPMultiplePageEraseUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPSingleProgramUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetISPSingleProgramUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPMultipleProgramUnProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetISPMultipleProgramUnProtect) for [Anonymous Symbol]
    MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPMultipleWriteProtect) refers to MG32x02z_MEM_DRV.o(.text.MEM_SetISPMultipleWriteProtect) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_STOPModeLDO_Select) refers to MG32x02z_PW_DRV.o(.text.PW_STOPModeLDO_Select) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_ONModeLDO_Select) refers to MG32x02z_PW_DRV.o(.text.PW_ONModeLDO_Select) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD2Trigger_Select) refers to MG32x02z_PW_DRV.o(.text.PW_BOD2Trigger_Select) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD2_Cmd) refers to MG32x02z_PW_DRV.o(.text.PW_BOD2_Cmd) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetBod2Status) refers to MG32x02z_PW_DRV.o(.text.PW_GetBod2Status) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD1Threshold_Select) refers to MG32x02z_PW_DRV.o(.text.PW_BOD1Threshold_Select) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD1Trigger_Select) refers to MG32x02z_PW_DRV.o(.text.PW_BOD1Trigger_Select) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD1_Cmd) refers to MG32x02z_PW_DRV.o(.text.PW_BOD1_Cmd) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_VoltageBuffer) refers to MG32x02z_PW_DRV.o(.text.PW_VoltageBuffer) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD0_Cmd) refers to MG32x02z_PW_DRV.o(.text.PW_BOD0_Cmd) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetBod1Status) refers to MG32x02z_PW_DRV.o(.text.PW_GetBod1Status) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_PeriphSLEEPModeContinuous_Config) refers to MG32x02z_PW_DRV.o(.text.PW_PeriphSLEEPModeContinuous_Config) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_PeriphSTOPModeContinuous_Config) refers to MG32x02z_PW_DRV.o(.text.PW_PeriphSTOPModeContinuous_Config) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_PeriphSTOPModeWakeUp_Config) refers to MG32x02z_PW_DRV.o(.text.PW_PeriphSTOPModeWakeUp_Config) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_WakeUpDelay_Select) refers to MG32x02z_PW_DRV.o(.text.PW_WakeUpDelay_Select) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetWakeUpMode) refers to MG32x02z_PW_DRV.o(.text.PW_GetWakeUpMode) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_WakeUpMode_Select) refers to MG32x02z_PW_DRV.o(.text.PW_WakeUpMode_Select) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetAllFlagStatus) refers to MG32x02z_PW_DRV.o(.text.PW_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetSingleFlagStatus) refers to MG32x02z_PW_DRV.o(.text.PW_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_ClearFlag) refers to MG32x02z_PW_DRV.o(.text.PW_ClearFlag) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_IT_Config) refers to MG32x02z_PW_DRV.o(.text.PW_IT_Config) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetITStatus) refers to MG32x02z_PW_DRV.o(.text.PW_GetITStatus) for [Anonymous Symbol]
    MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_ITEA_Cmd) refers to MG32x02z_PW_DRV.o(.text.PW_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_GetAllFlagStatus) refers to MG32x02z_RST_DRV.o(.text.RST_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_GetSingleFlagStatus) refers to MG32x02z_RST_DRV.o(.text.RST_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_ClearFlag) refers to MG32x02z_RST_DRV.o(.text.RST_ClearFlag) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_CRstSource_Config) refers to MG32x02z_RST_DRV.o(.text.RST_CRstSource_Config) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_WRstSource_Config) refers to MG32x02z_RST_DRV.o(.text.RST_WRstSource_Config) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_WRstGPIOLock_Config) refers to MG32x02z_RST_DRV.o(.text.RST_WRstGPIOLock_Config) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_ForceRstPeriph_SW) refers to MG32x02z_RST_DRV.o(.text.RST_ForceRstPeriph_SW) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_TriggerSystemRst_SW) refers to MG32x02z_RST_DRV.o(.text.RST_TriggerSystemRst_SW) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_WWDTWRstMask_Cmd) refers to MG32x02z_RST_DRV.o(.text.RST_WWDTWRstMask_Cmd) for [Anonymous Symbol]
    MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_USBRstMode_Select) refers to MG32x02z_RST_DRV.o(.text.RST_USBRstMode_Select) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_CLK_Select) refers to MG32x02z_RTC_DRV.o(.text.RTC_CLK_Select) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_PreDivider_Select) refers to MG32x02z_RTC_DRV.o(.text.RTC_PreDivider_Select) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_Divider_Select) refers to MG32x02z_RTC_DRV.o(.text.RTC_Divider_Select) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetAlarmCompareValue) refers to MG32x02z_RTC_DRV.o(.text.RTC_GetAlarmCompareValue) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_SetAlarmCompareValue) refers to MG32x02z_RTC_DRV.o(.text.RTC_SetAlarmCompareValue) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetAlarmState) refers to MG32x02z_RTC_DRV.o(.text.RTC_GetAlarmState) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_Alarm_Cmd) refers to MG32x02z_RTC_DRV.o(.text.RTC_Alarm_Cmd) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetReloadReg) refers to MG32x02z_RTC_DRV.o(.text.RTC_GetReloadReg) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetCaptureReg) refers to MG32x02z_RTC_DRV.o(.text.RTC_GetCaptureReg) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_SetReloadReg) refers to MG32x02z_RTC_DRV.o(.text.RTC_SetReloadReg) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_Cmd) refers to MG32x02z_RTC_DRV.o(.text.RTC_Cmd) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_RCR_Mode_Select) refers to MG32x02z_RTC_DRV.o(.text.RTC_RCR_Mode_Select) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_StopModeWakeUpEvent_Config) refers to MG32x02z_RTC_DRV.o(.text.RTC_StopModeWakeUpEvent_Config) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_OutputSignal_Select) refers to MG32x02z_RTC_DRV.o(.text.RTC_OutputSignal_Select) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_InitOutputSignalState_Cmd) refers to MG32x02z_RTC_DRV.o(.text.RTC_InitOutputSignalState_Cmd) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_TriggerStamp_Select) refers to MG32x02z_RTC_DRV.o(.text.RTC_TriggerStamp_Select) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_TriggerStamp_SW) refers to MG32x02z_RTC_DRV.o(.text.RTC_TriggerStamp_SW) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetAllFlagStatus) refers to MG32x02z_RTC_DRV.o(.text.RTC_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetSingleFlagStatus) refers to MG32x02z_RTC_DRV.o(.text.RTC_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_ClearFlag) refers to MG32x02z_RTC_DRV.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_IT_Config) refers to MG32x02z_RTC_DRV.o(.text.RTC_IT_Config) for [Anonymous Symbol]
    MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_ITEA_Cmd) refers to MG32x02z_RTC_DRV.o(.text.RTC_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DeInit) refers to MG32x02z_SPI_DRV.o(.text.SPI_DeInit) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Clock_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_Clock_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_PreDivider_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_PreDivider_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Prescaler_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_Prescaler_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Divider_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_Divider_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_TriggerClockToggle) refers to MG32x02z_SPI_DRV.o(.text.SPI_TriggerClockToggle) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DualTransferRate_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_DualTransferRate_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveHighSpeed_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveHighSpeed_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ModeAndNss_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_ModeAndNss_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ModfHappenedAction_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_ModfHappenedAction_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NSSInputSignal_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_NSSInputSignal_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SingleMasterModeNssPulse_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_SingleMasterModeNssPulse_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssInputInverse_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_NssInputInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssOutputInverse_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_NssOutputInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssInputOutputSoftwareControl_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_NssInputOutputSoftwareControl_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssInputSoftwareControl_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_NssInputSoftwareControl_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssOutputSoftwareControl_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_NssOutputSoftwareControl_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetNSSInputStatust) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetNSSInputStatust) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NSSInputStatusControl_SW) refers to MG32x02z_SPI_DRV.o(.text.SPI_NSSInputStatusControl_SW) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NSSOutputStatusControl_SW) refers to MG32x02z_SPI_DRV.o(.text.SPI_NSSOutputStatusControl_SW) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssIdleTime_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_NssIdleTime_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClockPhase_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClockPhase_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClockPolarity_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClockPolarity_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_FirstBit_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_FirstBit_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetRxShadowBufferLevel) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetRxShadowBufferLevel) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClearRxData) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClearRxData) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetDataBufferReceivedBytes) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetDataBufferReceivedBytes) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SetDataBufferReceivedBytes) refers to MG32x02z_SPI_DRV.o(.text.SPI_SetDataBufferReceivedBytes) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClearTxData) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClearTxData) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetTxShadowBufferLevel) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetTxShadowBufferLevel) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetRxData) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetRxData) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SetTxData) refers to MG32x02z_SPI_DRV.o(.text.SPI_SetTxData) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetTxData) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetTxData) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveModeReceivedThreshold_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveModeReceivedThreshold_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DataSize_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_DataSize_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DataLine_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_DataLine_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DataLineOutput_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_DataLineOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SendCopyMode_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_SendCopyMode_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_BidirectionalOutput_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_BidirectionalOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_TransferBidirection_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_TransferBidirection_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_MosiMisoSignalSwap_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_MosiMisoSignalSwap_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_D03D47SignalSwap_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_D03D47SignalSwap_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_LoopBackMode_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_LoopBackMode_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClockOutputSignal_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClockOutputSignal_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_IdleStateDataMode_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_IdleStateDataMode_Select) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveAutoFullDuplex_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveAutoFullDuplex_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveSendDataDirectUpdate_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveSendDataDirectUpdate_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_TXDMA_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_TXDMA_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_RXDMA_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_RXDMA_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_RXDMAPreCatch_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_RXDMAPreCatch_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetAllFlagStatus) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetSingleFlagStatus) refers to MG32x02z_SPI_DRV.o(.text.SPI_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClearFlag) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClearFlag) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_IT_Config) refers to MG32x02z_SPI_DRV.o(.text.SPI_IT_Config) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ITEA_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveAsynchronous_Cmd) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveAsynchronous_Cmd) for [Anonymous Symbol]
    MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_MasterDataOutIdleState_Select) refers to MG32x02z_SPI_DRV.o(.text.SPI_MasterDataOutIdleState_Select) for [Anonymous Symbol]
    MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_ITEA_Cmd) refers to MG32x02z_SYS_DRV.o(.text.SYS_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_GetChipMID) refers to MG32x02z_SYS_DRV.o(.text.SYS_GetChipMID) for [Anonymous Symbol]
    MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_ReadGeneralReg) refers to MG32x02z_SYS_DRV.o(.text.SYS_ReadGeneralReg) for [Anonymous Symbol]
    MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_WriteGeneralReg) refers to MG32x02z_SYS_DRV.o(.text.SYS_WriteGeneralReg) for [Anonymous Symbol]
    MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_ReadBackupReg) refers to MG32x02z_SYS_DRV.o(.text.SYS_ReadBackupReg) for [Anonymous Symbol]
    MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_WriteBackupReg) refers to MG32x02z_SYS_DRV.o(.text.SYS_WriteBackupReg) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_DeInit) refers to MG32x02z_TM_DRV.o(.text.TM_DeInit) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TimeBaseStruct_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TimeBaseStruct_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_Prescaler_Config) for TM_Prescaler_Config
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_Counter_Config) for TM_Counter_Config
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TimerMode_Select) for TM_TimerMode_Select
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_CounterClock_Select) for TM_CounterClock_Select
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_PrescalerClock_Select) for TM_PrescalerClock_Select
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_SetInternalClockDivider) for TM_SetInternalClockDivider
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_SetCounterDirection) for TM_SetCounterDirection
    MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_SetPrescalerDirection) for TM_SetPrescalerDirection
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TimeBase_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Prescaler_Config) refers to MG32x02z_TM_DRV.o(.text.TM_Prescaler_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Counter_Config) refers to MG32x02z_TM_DRV.o(.text.TM_Counter_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TimerMode_Select) refers to MG32x02z_TM_DRV.o(.text.TM_TimerMode_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CounterClock_Select) refers to MG32x02z_TM_DRV.o(.text.TM_CounterClock_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PrescalerClock_Select) refers to MG32x02z_TM_DRV.o(.text.TM_PrescalerClock_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetInternalClockDivider) refers to MG32x02z_TM_DRV.o(.text.TM_SetInternalClockDivider) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCounterDirection) refers to MG32x02z_TM_DRV.o(.text.TM_SetCounterDirection) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetPrescalerDirection) refers to MG32x02z_TM_DRV.o(.text.TM_SetPrescalerDirection) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InternalClockSource_Select) refers to MG32x02z_TM_DRV.o(.text.TM_InternalClockSource_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExternalClock_Select) refers to MG32x02z_TM_DRV.o(.text.TM_ExternalClock_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ITRx_Select) refers to MG32x02z_TM_DRV.o(.text.TM_ITRx_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCounter) refers to MG32x02z_TM_DRV.o(.text.TM_GetCounter) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Counter_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_Counter_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Counter_SW) refers to MG32x02z_TM_DRV.o(.text.TM_Counter_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetPrescaler) refers to MG32x02z_TM_DRV.o(.text.TM_GetPrescaler) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Prescaler_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_Prescaler_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Prescaler_SW) refers to MG32x02z_TM_DRV.o(.text.TM_Prescaler_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Timer_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_Timer_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GatePrescaler_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GatePrescaler_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GateCounter_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GateCounter_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ResetPrescaler_SW) refers to MG32x02z_TM_DRV.o(.text.TM_ResetPrescaler_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ResetCounter_SW) refers to MG32x02z_TM_DRV.o(.text.TM_ResetCounter_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TriggerSource_Select) refers to MG32x02z_TM_DRV.o(.text.TM_TriggerSource_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGICounter_Select) refers to MG32x02z_TM_DRV.o(.text.TM_TRGICounter_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGIPrescaler_Select) refers to MG32x02z_TM_DRV.o(.text.TM_TRGIPrescaler_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_UEV_Config) refers to MG32x02z_TM_DRV.o(.text.TM_UEV_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGOOut_SW) refers to MG32x02z_TM_DRV.o(.text.TM_TRGOOut_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGO_Select) refers to MG32x02z_TM_DRV.o(.text.TM_TRGO_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseTRGO_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseTRGO_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN0Source_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN0Source_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN0TriggerEvent_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN0TriggerEvent_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN1Source_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN1Source_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN1TriggerEvent_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN1TriggerEvent_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN2Source_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN2Source_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN2TriggerEvent_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN2TriggerEvent_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN3Source_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN3Source_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN3TriggerEvent_Select) refers to MG32x02z_TM_DRV.o(.text.TM_IN3TriggerEvent_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ClockOutSource_Select) refers to MG32x02z_TM_DRV.o(.text.TM_ClockOutSource_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ClockOut_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_ClockOut_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CKOOutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_CKOOutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC0z_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC0z_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0zOutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC0zOutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0zBreakStopState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC0zBreakStopState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0zOutput_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC0zOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC00Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC00Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC01Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC01Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC02Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC02Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC0N_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC0N_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0NOutput_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC0NOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0NBreakStopState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC0NBreakStopState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC0H_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC0H_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0HOutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC0HOutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC1z_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC1z_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1zOutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC1zOutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1zBreakStopState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC1zBreakStopState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1zOutput_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC1zOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC10Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC10Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC11Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC11Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC12Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC12Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC1N_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC1N_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1NOutput_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC1NOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1NBreakStopState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC1NBreakStopState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC1H_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC1H_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1HOutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC1HOutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC2_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC2_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2OutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC2OutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2BreakStopState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC2BreakStopState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC2Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC2N_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC2N_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2NOutput_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC2NOutput_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2NBreakStopState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC2NBreakStopState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC2H_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC2H_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2HOutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC2HOutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC3_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC3_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3OutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC3OutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3BreakStopState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC3BreakStopState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3Output_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OC3Output_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC3H_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC3H_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3HOutputState_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC3HOutputState_Init) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExternalBreakEvent_Config) refers to MG32x02z_TM_DRV.o(.text.TM_ExternalBreakEvent_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InternalBreakEvent_Config) refers to MG32x02z_TM_DRV.o(.text.TM_InternalBreakEvent_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakTrigger_SW) refers to MG32x02z_TM_DRV.o(.text.TM_BreakTrigger_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakCH3_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_BreakCH3_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakCH012_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_BreakCH012_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakMode_Select) refers to MG32x02z_TM_DRV.o(.text.TM_BreakMode_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0BreakControl_Select) refers to MG32x02z_TM_DRV.o(.text.TM_OC0BreakControl_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1BreakControl_Select) refers to MG32x02z_TM_DRV.o(.text.TM_OC1BreakControl_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2BreakControl_Select) refers to MG32x02z_TM_DRV.o(.text.TM_OC2BreakControl_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3BreakControl_Select) refers to MG32x02z_TM_DRV.o(.text.TM_OC3BreakControl_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadEventSource_Config) refers to MG32x02z_TM_DRV.o(.text.TM_PreloadEventSource_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadActive_SW) refers to MG32x02z_TM_DRV.o(.text.TM_PreloadActive_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadOC0z_Config) refers to MG32x02z_TM_DRV.o(.text.TM_PreloadOC0z_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadOC1z_Config) refers to MG32x02z_TM_DRV.o(.text.TM_PreloadOC1z_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH0Function_Config) refers to MG32x02z_TM_DRV.o(.text.TM_CH0Function_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH1Function_Config) refers to MG32x02z_TM_DRV.o(.text.TM_CH1Function_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH2Function_Config) refers to MG32x02z_TM_DRV.o(.text.TM_CH2Function_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH3Function_Config) refers to MG32x02z_TM_DRV.o(.text.TM_CH3Function_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OutputDelayMode_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_OutputDelayMode_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC0Value) refers to MG32x02z_TM_DRV.o(.text.TM_GetIC0Value) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC1Value) refers to MG32x02z_TM_DRV.o(.text.TM_GetIC1Value) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC2Value) refers to MG32x02z_TM_DRV.o(.text.TM_GetIC2Value) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC3Value) refers to MG32x02z_TM_DRV.o(.text.TM_GetIC3Value) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC0OverWritten_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_IC0OverWritten_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC1OverWritten_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_IC1OverWritten_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC2OverWritten_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_IC2OverWritten_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC3OverWritten_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_IC3OverWritten_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC0_SW) refers to MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC0_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC1_SW) refers to MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC1_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC2_SW) refers to MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC2_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC3_SW) refers to MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC3_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC0_SW) refers to MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC0_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC1_SW) refers to MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC1_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC2_SW) refers to MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC2_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC3_SW) refers to MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC3_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC0A) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC0A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC1A) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC1A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC2A) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC2A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC3A) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC3A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC0B) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC0B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC1B) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC1B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC2B) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC2B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC3B) refers to MG32x02z_TM_DRV.o(.text.TM_GetCC3B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC0A) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC0A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC1A) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC1A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC2A) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC2A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC3A) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC3A) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC0B) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC0B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC1B) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC1B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC2B) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC2B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC3B) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC3B) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF0A_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF0A_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF1A_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF1A_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF2A_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF2A_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF3A_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF3A_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF0B_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF0B_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF1B_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF1B_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF2B_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF2B_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF3B_SW) refers to MG32x02z_TM_DRV.o(.text.TM_GenerateCF3B_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ReloadFromCCxB_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_ReloadFromCCxB_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_AlignmentMode_Select) refers to MG32x02z_TM_DRV.o(.text.TM_AlignmentMode_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_QEI_Select) refers to MG32x02z_TM_DRV.o(.text.TM_QEI_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_QEIReset_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_QEIReset_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_QEIResetIDX_Select) refers to MG32x02z_TM_DRV.o(.text.TM_QEIResetIDX_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseQEIDirection) refers to MG32x02z_TM_DRV.o(.text.TM_InverseQEIDirection) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_AutoStop_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_AutoStop_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepeatAutoStopMode_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_RepeatAutoStopMode_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepetitionCounter_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ControlPWM_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_ControlPWM_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepetitionCounter_Config) refers to MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepetitionCounterClock_Select) refers to MG32x02z_TM_DRV.o(.text.TM_RepetitionCounterClock_Select) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetDeadZoneClockDivider) refers to MG32x02z_TM_DRV.o(.text.TM_SetDeadZoneClockDivider) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetDeadTime) refers to MG32x02z_TM_DRV.o(.text.TM_SetDeadTime) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IT_Config) refers to MG32x02z_TM_DRV.o(.text.TM_IT_Config) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ITEA_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetSingleFlagStatus) refers to MG32x02z_TM_DRV.o(.text.TM_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetAllFlagStatus) refers to MG32x02z_TM_DRV.o(.text.TM_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ClearFlag) refers to MG32x02z_TM_DRV.o(.text.TM_ClearFlag) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExtTRGI_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_ExtTRGI_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseExtTRGI_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_InverseExtTRGI_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExtTRGI2UEV_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_ExtTRGI2UEV_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ForceUpdate_SW) refers to MG32x02z_TM_DRV.o(.text.TM_ForceUpdate_SW) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_UEV_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_UEV_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_DMAChannel_Cmd) refers to MG32x02z_TM_DRV.o(.text.TM_DMAChannel_Cmd) for [Anonymous Symbol]
    MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_DMAUpdateMode_Select) refers to MG32x02z_TM_DRV.o(.text.TM_DMAUpdateMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IT_Config) refers to MG32x02z_URT_DRV.o(.text.URT_IT_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetITStatus) refers to MG32x02z_URT_DRV.o(.text.URT_GetITStatus) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ITEA_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetITAllFlagStatus) refers to MG32x02z_URT_DRV.o(.text.URT_GetITAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetITSingleFlagStatus) refers to MG32x02z_URT_DRV.o(.text.URT_GetITSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearITFlag) refers to MG32x02z_URT_DRV.o(.text.URT_ClearITFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxDifferentFlag) refers to MG32x02z_URT_DRV.o(.text.URT_GetRxDifferentFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxHoldFlag) refers to MG32x02z_URT_DRV.o(.text.URT_GetRxHoldFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearRxHoldFlag) refers to MG32x02z_URT_DRV.o(.text.URT_ClearRxHoldFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetIrDaBusyFlag) refers to MG32x02z_URT_DRV.o(.text.URT_GetIrDaBusyFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBreakBusyFlag) refers to MG32x02z_URT_DRV.o(.text.URT_GetBreakBusyFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxBusyFlag) refers to MG32x02z_URT_DRV.o(.text.URT_GetRxBusyFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxNoiseFlag) refers to MG32x02z_URT_DRV.o(.text.URT_GetRxNoiseFlag) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DataCharacter_Config) refers to MG32x02z_URT_DRV.o(.text.URT_DataCharacter_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Mode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_Mode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DataLine_Select) refers to MG32x02z_URT_DRV.o(.text.URT_DataLine_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_HalfDuplexMode_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_HalfDuplexMode_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_LoopBackMode_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_LoopBackMode_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TX_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_TX_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RX_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_RX_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXInverse_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_RXInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXInverse_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_TXInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NoiseDataSkip_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_NoiseDataSkip_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGenerator_Config) refers to MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGeneratorMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_BaudRateGeneratorMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGeneratorClock_Select) refers to MG32x02z_URT_DRV.o(.text.URT_BaudRateGeneratorClock_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateCounterClockSource_Select) refers to MG32x02z_URT_DRV.o(.text.URT_BaudRateCounterClockSource_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPreReload) refers to MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorPreReload) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCountReload) refers to MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorCountReload) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPre) refers to MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorPre) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCount) refers to MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorCount) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGenerator_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CLKSignalSource_Select) refers to MG32x02z_URT_DRV.o(.text.URT_CLKSignalSource_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CLKSignal_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_CLKSignal_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlBROSignalStatus_SW) refers to MG32x02z_URT_DRV.o(.text.URT_CtrlBROSignalStatus_SW) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlCLKSignalStatus_SW) refers to MG32x02z_URT_DRV.o(.text.URT_CtrlCLKSignalStatus_SW) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXClockSource_Select) refers to MG32x02z_URT_DRV.o(.text.URT_TXClockSource_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXClockSource_Select) refers to MG32x02z_URT_DRV.o(.text.URT_RXClockSource_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXOverSamplingSampleNumber_Select) refers to MG32x02z_URT_DRV.o(.text.URT_TXOverSamplingSampleNumber_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXOverSamplingSampleNumber_Select) refers to MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingSampleNumber_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXOverSamplingMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TimeroutTimer_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_TimeroutTimer_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TriggerTimeoutTimerRst_SW) refers to MG32x02z_URT_DRV.o(.text.URT_TriggerTimeoutTimerRst_SW) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TimeoutMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_TimeoutMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TimeoutTimerClockSource_Select) refers to MG32x02z_URT_DRV.o(.text.URT_TimeoutTimerClockSource_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IdleDetect_Select) refers to MG32x02z_URT_DRV.o(.text.URT_IdleDetect_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IdleTimeoutDetect_Config) refers to MG32x02z_URT_DRV.o(.text.URT_IdleTimeoutDetect_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXTimeoutDetect_Config) refers to MG32x02z_URT_DRV.o(.text.URT_RXTimeoutDetect_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BreakTimeoutDetect_Config) refers to MG32x02z_URT_DRV.o(.text.URT_BreakTimeoutDetect_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CalibrationTimeoutDetect_Config) refers to MG32x02z_URT_DRV.o(.text.URT_CalibrationTimeoutDetect_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlTMOSignalStatus_SW) refers to MG32x02z_URT_DRV.o(.text.URT_CtrlTMOSignalStatus_SW) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTimeoutTimerCounter) refers to MG32x02z_URT_DRV.o(.text.URT_GetTimeoutTimerCounter) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetTimeoutTimerCounter) refers to MG32x02z_URT_DRV.o(.text.URT_SetTimeoutTimerCounter) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTimeoutTimerReload) refers to MG32x02z_URT_DRV.o(.text.URT_GetTimeoutTimerReload) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetTimeoutTimerCompare) refers to MG32x02z_URT_DRV.o(.text.URT_SetTimeoutTimerCompare) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTXShadowBufferLevel) refers to MG32x02z_URT_DRV.o(.text.URT_GetTXShadowBufferLevel) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXShadowBufferLevel) refers to MG32x02z_URT_DRV.o(.text.URT_GetRXShadowBufferLevel) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearTXData) refers to MG32x02z_URT_DRV.o(.text.URT_ClearTXData) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearRXData) refers to MG32x02z_URT_DRV.o(.text.URT_ClearRXData) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTXDataRegLevel) refers to MG32x02z_URT_DRV.o(.text.URT_GetTXDataRegLevel) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXShadowBufferThreshold_Select) refers to MG32x02z_URT_DRV.o(.text.URT_RXShadowBufferThreshold_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXDataRegLevel) refers to MG32x02z_URT_DRV.o(.text.URT_GetRXDataRegLevel) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXData) refers to MG32x02z_URT_DRV.o(.text.URT_GetRXData) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCaptureData) refers to MG32x02z_URT_DRV.o(.text.URT_GetCaptureData) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCaptureStatusBit) refers to MG32x02z_URT_DRV.o(.text.URT_GetCaptureStatusBit) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXShiftBufferStatusBit) refers to MG32x02z_URT_DRV.o(.text.URT_GetRXShiftBufferStatusBit) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTXShiftBufferData) refers to MG32x02z_URT_DRV.o(.text.URT_GetTXShiftBufferData) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXShiftBufferData) refers to MG32x02z_URT_DRV.o(.text.URT_GetRXShiftBufferData) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RTS_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_RTS_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RTSInverse_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_RTSInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlRTS_SW) refers to MG32x02z_URT_DRV.o(.text.URT_CtrlRTS_SW) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CTS_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_CTS_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCTSLineStatus) refers to MG32x02z_URT_DRV.o(.text.URT_GetCTSLineStatus) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CTSInverse_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_CTSInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DE_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_DE_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DEInverse_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_DEInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DEGuardTime_Select) refers to MG32x02z_URT_DRV.o(.text.URT_DEGuardTime_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IdlehandleMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_IdlehandleMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXHalt_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_TXHalt_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXGuardTime_Select) refers to MG32x02z_URT_DRV.o(.text.URT_TXGuardTime_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetTXData) refers to MG32x02z_URT_DRV.o(.text.URT_SetTXData) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CPHAMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_CPHAMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CPOLMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_CPOLMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NssInverse_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_NssInverse_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NssSW_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_NssSW_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlNSS_SW) refers to MG32x02z_URT_DRV.o(.text.URT_CtrlNSS_SW) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NssInput_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_NssInput_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SPIMasterDataOutputIdleStatus_Select) refers to MG32x02z_URT_DRV.o(.text.URT_SPIMasterDataOutputIdleStatus_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SYNCMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_SYNCMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetSlaveAddressMask) refers to MG32x02z_URT_DRV.o(.text.URT_SetSlaveAddressMask) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetSlaveAddress) refers to MG32x02z_URT_DRV.o(.text.URT_SetSlaveAddress) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GlobalAddress_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_GlobalAddress_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SendAddress) refers to MG32x02z_URT_DRV.o(.text.URT_SendAddress) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CalibrationMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_CalibrationMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_AutoCalibration_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_AutoCalibration_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Calibration_SW) refers to MG32x02z_URT_DRV.o(.text.URT_Calibration_SW) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CalibrationCompleteDataHold_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_CalibrationCompleteDataHold_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ExtraBreakBit_Select) refers to MG32x02z_URT_DRV.o(.text.URT_ExtraBreakBit_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SendBreak) refers to MG32x02z_URT_DRV.o(.text.URT_SendBreak) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCalibrationResult) refers to MG32x02z_URT_DRV.o(.text.URT_GetCalibrationResult) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXDMA_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_TXDMA_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXDMA_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_RXDMA_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BreakDisableDMA_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_BreakDisableDMA_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IrDA_Config) refers to MG32x02z_URT_DRV.o(.text.URT_IrDA_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IrDA_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_IrDA_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_AutoExitMuteMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_AutoExitMuteMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_AutoEnterMuteMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_AutoEnterMuteMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Mute_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_Mute_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXParityError_Config) refers to MG32x02z_URT_DRV.o(.text.URT_RXParityError_Config) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXErrorDetectMode_Select) refers to MG32x02z_URT_DRV.o(.text.URT_TXErrorDetectMode_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXErrorResendTime_Select) refers to MG32x02z_URT_DRV.o(.text.URT_TXErrorResendTime_Select) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RxTxSwap_Cmd) refers to MG32x02z_URT_DRV.o(.text.URT_RxTxSwap_Cmd) for [Anonymous Symbol]
    MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ExternalClockMux_Select) refers to MG32x02z_URT_DRV.o(.text.URT_ExternalClockMux_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Transceiver_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_Transceiver_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_V33_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_V33_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_V33toVDD_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_V33toVDD_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Function_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_Function_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_DriveStrength_Select) refers to MG32x02z_USB_DRV.o(.text.USB_DriveStrength_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_PDResistorMode_Select) refers to MG32x02z_USB_DRV.o(.text.USB_PDResistorMode_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_PUResistorMode_Select) refers to MG32x02z_USB_DRV.o(.text.USB_PUResistorMode_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_LVRModeInSTOP_Select) refers to MG32x02z_USB_DRV.o(.text.USB_LVRModeInSTOP_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetBusStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetBusStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetBusEventStatus2) refers to MG32x02z_USB_DRV.o(.text.USB_GetBusEventStatus2) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetDPDMStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetDPDMStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Connect_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_Connect_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetAddress) refers to MG32x02z_USB_DRV.o(.text.USB_SetAddress) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetRemoteWakeupTime) refers to MG32x02z_USB_DRV.o(.text.USB_SetRemoteWakeupTime) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_TriggerRemoteWakeup) refers to MG32x02z_USB_DRV.o(.text.USB_TriggerRemoteWakeup) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SoftwareControlRemoteWakeup_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_SoftwareControlRemoteWakeup_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetRemoteWakeup_SW) refers to MG32x02z_USB_DRV.o(.text.USB_SetRemoteWakeup_SW) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SuspendSignalMode_Select) refers to MG32x02z_USB_DRV.o(.text.USB_SuspendSignalMode_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_NoResponse_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_NoResponse_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetFrameNumber) refers to MG32x02z_USB_DRV.o(.text.USB_GetFrameNumber) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointStatus) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetDoubleBufferEndpointStatus) refers to MG32x02z_USB_DRV.o(.text.USB_SetDoubleBufferEndpointStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointOUTSequenceBit) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointOUTSequenceBit) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointINSequenceBit) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointINSequenceBit) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointOUTSequenceBit) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointOUTSequenceBit) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointINSequenceBit) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointINSequenceBit) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointAddress) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointAddress) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointFlagStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointFlagStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointITFlagStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointITFlagStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ClearEndpointFlag) refers to MG32x02z_USB_DRV.o(.text.USB_ClearEndpointFlag) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetSETUPStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetSETUPStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ClearSETUPStatus) refers to MG32x02z_USB_DRV.o(.text.USB_ClearSETUPStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_EndpintIT_Config) refers to MG32x02z_USB_DRV.o(.text.USB_EndpintIT_Config) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointRXSize) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointRXSize) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointTXSize) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointTXSize) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1TXSize) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer1TXSize) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0TXSize) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer0TXSize) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointRXData) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointRXData) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointDoubleBufferRXData) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointDoubleBufferRXData) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointTXData) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointTXData) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBufferTXData) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBufferTXData) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.text.USB_SetEndpointRXBlock) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointBlockOf32Byte) for USB_SetEndpointBlockOf32Byte
    MG32x02z_USB_DRV.o(.text.USB_SetEndpointRXBlock) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointBlockOf2Byte) for USB_SetEndpointBlockOf2Byte
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointRXBlock) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointRXBlock) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointBlockOf32Byte) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointBlockOf32Byte) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointBlockOf2Byte) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointBlockOf2Byte) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointTXDataAddress) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointTXDataAddress) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointRXDataAddress) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointRXDataAddress) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0Address) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer0Address) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1Address) refers to MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer1Address) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointTXDataAddress) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointTXDataAddress) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointRXDataAddress) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointRXDataAddress) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer0Address) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointDoubleBuffer0Address) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer1Address) refers to MG32x02z_USB_DRV.o(.text.USB_GetEndpointDoubleBuffer1Address) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_EndpointMode_Select) refers to MG32x02z_USB_DRV.o(.text.USB_EndpointMode_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_EndpointDoubleBufferMode_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_EndpointDoubleBufferMode_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_TriggerEndpointRst) refers to MG32x02z_USB_DRV.o(.text.USB_TriggerEndpointRst) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ITEA_Cmd) refers to MG32x02z_USB_DRV.o(.text.USB_ITEA_Cmd) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_IT_Config) refers to MG32x02z_USB_DRV.o(.text.USB_IT_Config) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetITAllFlagStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetITAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetITIEAllStatus) refers to MG32x02z_USB_DRV.o(.text.USB_GetITIEAllStatus) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ClearITFlag) refers to MG32x02z_USB_DRV.o(.text.USB_ClearITFlag) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_LPMhandshakeMode_Select) refers to MG32x02z_USB_DRV.o(.text.USB_LPMhandshakeMode_Select) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetLPMBESL) refers to MG32x02z_USB_DRV.o(.text.USB_GetLPMBESL) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetLPMbRemoteWake) refers to MG32x02z_USB_DRV.o(.text.USB_GetLPMbRemoteWake) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_DMARXSEL_Config) refers to MG32x02z_USB_DRV.o(.text.USB_DMARXSEL_Config) for [Anonymous Symbol]
    MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_DMATXSEL_Config) refers to MG32x02z_USB_DRV.o(.text.USB_DMATXSEL_Config) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_CLK_Select) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_CLK_Select) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_DIV_Select) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_DIV_Select) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_PDIV_Select) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_PDIV_Select) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_Cmd) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_Cmd) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetCounter) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_GetCounter) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_RefreshCounter) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_RefreshCounter) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetReloadReg) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_GetReloadReg) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_SetReloadReg) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_SetReloadReg) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetWindowThreshold) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_GetWindowThreshold) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_SetWindowThreshold) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_SetWindowThreshold) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetWarningThreshold) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_GetWarningThreshold) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_SetWarningThreshold) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_SetWarningThreshold) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_RstEvent_Config) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_RstEvent_Config) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetAllFlagStatus) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_GetAllFlagStatus) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetSingleFlagStatus) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_GetSingleFlagStatus) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_ClearFlag) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_ClearFlag) for [Anonymous Symbol]
    MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_IT_Config) refers to MG32x02z_WWDT_DRV.o(.text.WWDT_IT_Config) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.text.InitTick) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    MG32x02z__Common_DRV.o(.text.InitTick) refers to MG32x02z__Common_DRV.o(.text.SysTick_Config) for SysTick_Config
    MG32x02z__Common_DRV.o(.text.InitTick) refers to MG32x02z__Common_DRV.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    MG32x02z__Common_DRV.o(.ARM.exidx.text.InitTick) refers to MG32x02z__Common_DRV.o(.text.InitTick) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.text.SysTick_Config) refers to MG32x02z__Common_DRV.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    MG32x02z__Common_DRV.o(.ARM.exidx.text.SysTick_Config) refers to MG32x02z__Common_DRV.o(.text.SysTick_Config) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.__NVIC_SetPriority) refers to MG32x02z__Common_DRV.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.text.IncTick) refers to MG32x02z__Common_DRV.o(.bss.uwTick) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.IncTick) refers to MG32x02z__Common_DRV.o(.text.IncTick) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.text.GetTick) refers to MG32x02z__Common_DRV.o(.bss.uwTick) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.GetTick) refers to MG32x02z__Common_DRV.o(.text.GetTick) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.text.Delay) refers to MG32x02z__Common_DRV.o(.text.GetTick) for GetTick
    MG32x02z__Common_DRV.o(.ARM.exidx.text.Delay) refers to MG32x02z__Common_DRV.o(.text.Delay) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.SuspendTick) refers to MG32x02z__Common_DRV.o(.text.SuspendTick) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.ResumeTick) refers to MG32x02z__Common_DRV.o(.text.ResumeTick) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.ProtectModuleReg) refers to MG32x02z__Common_DRV.o(.text.ProtectModuleReg) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.UnProtectModuleReg) refers to MG32x02z__Common_DRV.o(.text.UnProtectModuleReg) for [Anonymous Symbol]
    MG32x02z__Common_DRV.o(.ARM.exidx.text.LockModuleReg) refers to MG32x02z__Common_DRV.o(.text.LockModuleReg) for [Anonymous Symbol]
    MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_IHRCO_Enable) refers to MG32x02z_CSC_Init.o(.text.CSC_IHRCO_Enable) for [Anonymous Symbol]
    MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_XOSC_Enable) refers to MG32x02z_CSC_Init.o(.text.CSC_XOSC_Enable) for [Anonymous Symbol]
    MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_EXTCK_Enable) refers to MG32x02z_CSC_Init.o(.text.CSC_EXTCK_Enable) for [Anonymous Symbol]
    MG32x02z_CSC_Init.o(.text.CSC_Init) refers to memseta.o(.text) for __aeabi_memclr4
    MG32x02z_CSC_Init.o(.text.CSC_Init) refers to MG32x02z_CSC_Init.o(.text.CSC_IHRCO_Enable) for CSC_IHRCO_Enable
    MG32x02z_CSC_Init.o(.text.CSC_Init) refers to MG32x02z_CSC_Init.o(.rodata.CSC_InitConfig) for [Anonymous Symbol]
    MG32x02z_CSC_Init.o(.text.CSC_Init) refers to system_MG32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_Init) refers to MG32x02z_CSC_Init.o(.text.CSC_Init) for [Anonymous Symbol]
    MG32x02z_ChipInit.o(.text.ChipInit) refers to MG32x02z_CSC_Init.o(.text.CSC_Init) for CSC_Init
    MG32x02z_ChipInit.o(.text.ChipInit) refers to MG32x02z_GPIO_Init.o(.text.GPIO_Init) for GPIO_Init
    MG32x02z_ChipInit.o(.ARM.exidx.text.ChipInit) refers to MG32x02z_ChipInit.o(.text.ChipInit) for [Anonymous Symbol]
    MG32x02z_GPIO_Init.o(.text.GPIO_Init) refers to MG32x02z_GPIO_Init.o(.rodata.GPIO_CFG) for [Anonymous Symbol]
    MG32x02z_GPIO_Init.o(.ARM.exidx.text.GPIO_Init) refers to MG32x02z_GPIO_Init.o(.text.GPIO_Init) for [Anonymous Symbol]
    system_MG32x02z.o(.text.SystemCoreClockUpdate) refers to system_MG32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    system_MG32x02z.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_MG32x02z.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_MG32x02z.o(.text.SystemInit) refers to system_MG32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    system_MG32x02z.o(.ARM.exidx.text.SystemInit) refers to system_MG32x02z.o(.text.SystemInit) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to printfa.o(i.__0printf) for printf
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r0) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r1) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r2) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r3) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r12) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_lr) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_pc) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_psr) for [Anonymous Symbol]
    system_MG32x02z.o(.text.HardFault_Handler_C) refers to system_MG32x02z.o(.rodata.str1.1) for [Anonymous Symbol]
    system_MG32x02z.o(.ARM.exidx.text.HardFault_Handler_C) refers to system_MG32x02z.o(.text.HardFault_Handler_C) for [Anonymous Symbol]
    system_MG32x02z.o(.ARM.exidx.text.div) refers to system_MG32x02z.o(.text.div) for [Anonymous Symbol]
    system_MG32x02z.o(.ARM.exidx.text.ldiv) refers to system_MG32x02z.o(.text.ldiv) for [Anonymous Symbol]
    system_MG32x02z.o(.ARM.exidx.text.__rt_sdiv32by16) refers to system_MG32x02z.o(.text.__rt_sdiv32by16) for [Anonymous Symbol]
    system_MG32x02z.o(.ARM.exidx.text.__rt_udiv32by16) refers to system_MG32x02z.o(.text.__rt_udiv32by16) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_AllRGB_OFF) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_SetPortBit) for GPIO_SetPortBit
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_AllRGB_OFF) refers to MG32x02z_RGB_API.o(.text.API_AllRGB_OFF) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedDriverData_DeInit) for API_RGBLedDriverData_DeInit
    MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit) refers to MG32x02z_RGB_API.o(.bss.API_KB_ActDrama) for API_KB_ActDrama
    MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Data_DeInit) refers to MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init) for API_RGBLedControlParameter_Init
    MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init) refers to MG32x02z_RGBTable_API.o(.data.API_RGB_DOT_TABLE) for API_RGB_DOT_TABLE
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_ControlParameter_Init) refers to MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.text.API_AllRGB_OFF) for API_AllRGB_OFF
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_PortMode_Config) for GPIO_PortMode_Config
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_DeInit) for SPI_DeInit
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_ModeAndNss_Select) for SPI_ModeAndNss_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_NssInputOutputSoftwareControl_Cmd) for SPI_NssInputOutputSoftwareControl_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveAsynchronous_Cmd) for SPI_SlaveAsynchronous_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClockPhase_Select) for SPI_ClockPhase_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClockPolarity_Select) for SPI_ClockPolarity_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_FirstBit_Select) for SPI_FirstBit_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_DataSize_Select) for SPI_DataSize_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_DataLine_Select) for SPI_DataLine_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_LoopBackMode_Cmd) for SPI_LoopBackMode_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_DataLineOutput_Cmd) for SPI_DataLineOutput_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_SlaveModeReceivedThreshold_Select) for SPI_SlaveModeReceivedThreshold_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_IdleStateDataMode_Select) for SPI_IdleStateDataMode_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_MasterDataOutIdleState_Select) for SPI_MasterDataOutIdleState_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_PreDivider_Select) for SPI_PreDivider_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_Prescaler_Select) for SPI_Prescaler_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_Divider_Select) for SPI_Divider_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClearRxData) for SPI_ClearRxData
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClearTxData) for SPI_ClearTxData
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_ClearFlag) for SPI_ClearFlag
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_Cmd) for SPI_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_IT_Config) for SPI_IT_Config
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_SPI_DRV.o(.text.SPI_ITEA_Cmd) for SPI_ITEA_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_DeInit) for TM_DeInit
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TimeBaseStruct_Init) for TM_TimeBaseStruct_Init
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init) for TM_TimeBase_Init
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TriggerSource_Select) for TM_TriggerSource_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TRGICounter_Select) for TM_TRGICounter_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_TRGIPrescaler_Select) for TM_TRGIPrescaler_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_CH1Function_Config) for TM_CH1Function_Config
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_CH2Function_Config) for TM_CH2Function_Config
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC1zOutputState_Init) for TM_OC1zOutputState_Init
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC2OutputState_Init) for TM_OC2OutputState_Init
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_InverseOC2N_Cmd) for TM_InverseOC2N_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC1B) for TM_SetCC1B
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_SetCC2B) for TM_SetCC2B
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC10Output_Cmd) for TM_OC10Output_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_OC2NOutput_Cmd) for TM_OC2NOutput_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_RepetitionCounterClock_Select) for TM_RepetitionCounterClock_Select
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Config) for TM_RepetitionCounter_Config
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Cmd) for TM_RepetitionCounter_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_ControlPWM_Cmd) for TM_ControlPWM_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit) for API_RGB_Data_DeInit
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init) for API_RGB_ControlParameter_Init
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) for API_RGB_Mode_Config
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) for API_RGBLed_Init
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_ClearFlag) for TM_ClearFlag
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_IT_Config) for TM_IT_Config
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_TM_DRV.o(.text.TM_ITEA_Cmd) for TM_ITEA_Cmd
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.bss.API_KB_ActDrama) for API_KB_ActDrama
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Init) refers to MG32x02z_RGB_API.o(.text.API_RGB_Init) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to MG32x02z_RGB_API.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDefault_RColorTable) for API_KBRGBDefault_RColorTable
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDefault_GColorTable) for API_KBRGBDefault_GColorTable
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDefault_BColorTable) for API_KBRGBDefault_BColorTable
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDemo_RColorTable) for API_KBRGBDemo_RColorTable
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDemo_GColorTable) for API_KBRGBDemo_GColorTable
    MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) refers to MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDemo_BColorTable) for API_KBRGBDemo_BColorTable
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Mode_Config) refers to MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.TM10_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) for API_RGB_UpdateDataTrigger
    MG32x02z_RGB_API.o(.text.TM10_IRQHandler) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.ARM.exidx.text.TM10_IRQHandler) refers to MG32x02z_RGB_API.o(.text.TM10_IRQHandler) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_KBMain) refers to MG32x02z_RGB_API.o(.text.API_RGB_KBMain) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) for API_RGB_StaticDrama
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama) for API_RGB_BreathDrama
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0) for API_RGB_RainDrama0
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1) for API_RGB_RainDrama1
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2) for API_RGB_RainDrama2
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama) for API_RGB_MarphingDrama
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) for API_RGB_KBIterlockDrama1
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) for API_RGB_KBIterlockDrama0
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) for API_RGB_StaticUserDrama
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDateDramaTmp) for API_RGB_UpdateDateDramaTmp
    MG32x02z_RGB_API.o(.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Main) refers to MG32x02z_RGB_API.o(.text.API_RGB_Main) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_StaticDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) for API_RGB_BreathDramaAct
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama) for API_RGB_SetNextDrama
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama) refers to MG32x02z_RGB_API.o(.bss.API_RGB_Numerator) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama) refers to MG32x02z_RGB_API.o(.bss.API_RGB_Denominator) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_BreathDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0) refers to MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama) for API_RGB_SetNextDrama
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_RainDrama0) refers to MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1) refers to MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama) for API_RGB_SetNextDrama
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_RainDrama1) refers to MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2) refers to MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama) for API_RGB_SetNextDrama
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_RainDrama2) refers to MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama) for API_RGB_SetNextDrama
    MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_MarphingDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KB_ActDrama) for API_KB_ActDrama
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_KBIterlockDrama1) refers to MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KB_ActDrama) for API_KB_ActDrama
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_KBIterlockDrama0) refers to MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_StaticUserDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_SetNextDrama) refers to MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_RGB_Numerator) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_RGB_Denominator) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery) for API_KBRGB_RColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery) for API_KBRGB_GColorScenery
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable) for [Anonymous Symbol]
    MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery) for API_KBRGB_BColorScenery
    MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_BreathDramaAct) refers to MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedDriverData_DeInit) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_UpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGBLedDriverData_DeInit) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedDriverData_DeInit) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_pUpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_Tmp) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_LastBit) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGBLedControlParameter_Init) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Config) for URT_BaudRateGenerator_Config
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Cmd) for URT_BaudRateGenerator_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_TXClockSource_Select) for URT_TXClockSource_Select
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_RXClockSource_Select) for URT_RXClockSource_Select
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_TXOverSamplingSampleNumber_Select) for URT_TXOverSamplingSampleNumber_Select
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingSampleNumber_Select) for URT_RXOverSamplingSampleNumber_Select
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingMode_Select) for URT_RXOverSamplingMode_Select
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_TX_Cmd) for URT_TX_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_RX_Cmd) for URT_RX_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_DataCharacter_Config) for URT_DataCharacter_Config
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_TXInverse_Cmd) for URT_TXInverse_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_IT_Config) for URT_IT_Config
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_ITEA_Cmd) for URT_ITEA_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_RGB_MBIA045_API.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_URT_DRV.o(.text.URT_Cmd) for URT_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_Cmd) for DMA_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_Channel_Cmd) for DMA_Channel_Cmd
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_BaseInitStructure_Init) for DMA_BaseInitStructure_Init
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_DMA_DRV.o(.text.DMA_Base_Init) for DMA_Base_Init
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_EnableWriteConfiguration_Trigger) for API_MBIA045_EnableWriteConfiguration_Trigger
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_WriteConfiguration_Trigger) for API_MBIA045_WriteConfiguration_Trigger
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGBLed_Init) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to MG32x02z_RGB_MBIA045_API.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_MBIA045_EnableWriteConfiguration_Trigger) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_EnableWriteConfiguration_Trigger) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_MBIA045_WriteConfiguration_Trigger) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_WriteConfiguration_Trigger) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainDelay) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainUpdateEvent) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainCNT) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.data.LED_RainTable) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_UpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_pUpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_Tmp) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_LastBit) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGB_UpdateDataTrigger) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_pUpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_Tmp) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_LastBit) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.SPI0_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger) for API_MBIA045_GlobalLatch_Trigger
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_RGB_API.o(.text.API_AllRGB_OFF) for API_AllRGB_OFF
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_GPIO_DRV.o(.text.GPIO_ClearPortBit) for GPIO_ClearPortBit
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_pUpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_UpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_Tmp) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_LastBit) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.URT123_IRQHandler) refers to MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger) refers to MG32x02z_URT_DRV.o(.text.URT_ITEA_Cmd) for URT_ITEA_Cmd
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_MBIA045_GlobalLatch_Trigger) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateNextLineData) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateNextLineData) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_RGB_Scenery) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateNextLineData) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_UpdateDataBuf) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateNextLineData) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_RGB_SceneryTmp) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGB_UpdateNextLineData) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateNextLineData) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDateDramaTmp) refers to MG32x02z_RGB_API.o(.bss.API_RGB_CTR) for API_RGB_CTR
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDateDramaTmp) refers to MG32x02z_RGBTable_API.o(.rodata.API_RGB_PWMData_Table) for API_RGB_PWMData_Table
    MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDateDramaTmp) refers to MG32x02z_RGB_MBIA045_API.o(.bss.API_RGB_SceneryTmp) for [Anonymous Symbol]
    MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGB_UpdateDateDramaTmp) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDateDramaTmp) for [Anonymous Symbol]
    main.o(.text.main) refers to MG32x02z_ChipInit.o(.text.ChipInit) for ChipInit
    main.o(.text.main) refers to MG32x02z_RGB_API.o(.text.API_RGB_Init) for API_RGB_Init
    main.o(.text.main) refers to MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger) for API_RGB_UpdateDataTrigger
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dcmplt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpeq.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_MG32x02z.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_MG32x02z.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing startup_MG32x02z.o(HEAP), (512 bytes).
    Removing MG32x02z_ADC_DRV.o(.text), (0 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_DeInit), (88 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_BaseStructure_Init), (36 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_BaseStructure_Init), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_Base_Init), (98 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_Base_Init), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ClockSource_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClockSource_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetInternalClockDivider), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetInternalClockDivider), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetPLLClockDivider), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetPLLClockDivider), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_DataAlignment_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DataAlignment_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_DataResolution_Select), (28 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DataResolution_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_DataOverrunMode_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DataOverrunMode_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetConversionTime), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetConversionTime), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetOperationCurrent), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetOperationCurrent), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SampleClockPhase_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SampleClockPhase_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetLowerThreshold), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetLowerThreshold), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetHigherThreshold), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetHigherThreshold), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_WindowDetectRange_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_WindowDetectRange_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_WindowDetect_Cmd), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_WindowDetect_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_Output_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_Output_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_PGA_Cmd), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_PGA_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetPGAGain), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetPGAGain), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetPGAOffset), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetPGAOffset), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_PGAOffsetCalibration_Cmd), (932 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_PGAOffsetCalibration_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetSumNumber), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSumNumber), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ConversionMode_Select), (146 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ConversionMode_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_TriggerSource_Select), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TriggerSource_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetOutputCodeFormat), (28 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetOutputCodeFormat), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_InternalChannel_Select), (20 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_InternalChannel_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetExtendSampling), (20 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetExtendSampling), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SoftwareConversion_Cmd), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SoftwareConversion_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ClearFlag), (16 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Data), (14 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetDAT0Data), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_StartCalibration), (516 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_StartCalibration), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SingleDifferentMode_Select), (28 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SingleDifferentMode_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_Cmd), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_DMA_Cmd), (28 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DMA_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_DMADataSize_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DMADataSize_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_DMAMaskFlag_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_DMAMaskFlag_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetNextConversionChannel), (14 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetNextConversionChannel), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_AutoOff_Cmd), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_AutoOff_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetStartupTime), (28 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetStartupTime), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetStartupDivider), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetStartupDivider), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_WaitDataReadOut), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_WaitDataReadOut), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_MainConversionMode_Select), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_MainConversionMode_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ContinueMode_Cmd), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ContinueMode_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_HoldConversion_Cmd), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_HoldConversion_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_TriggerEdge_Select), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TriggerEdge_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ChannelMUX_Select), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ChannelMUX_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ExternalChannel_Select), (20 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ExternalChannel_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ScanLoopChannel_Enable), (48 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ScanLoopChannel_Enable), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ChangeMUXTiming_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ChangeMUXTiming_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetLimitFunction), (28 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetLimitFunction), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetSum0Channel), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum0Channel), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetSum1Channel), (28 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum1Channel), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetSum2Channel), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum2Channel), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SumChannelMode_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SumChannelMode_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SumOverrunMode_Select), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SumOverrunMode_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetSum0Flags), (12 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum0Flags), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetSum1Flags), (12 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum1Flags), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetSum2Flags), (12 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum2Flags), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ClearSum0Flags), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearSum0Flags), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ClearSum1Flags), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearSum1Flags), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ClearSum2Flags), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ClearSum2Flags), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetSum0Data), (14 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum0Data), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetSum1Data), (14 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum1Data), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetSum2Data), (14 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetSum2Data), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetSum0Data), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum0Data), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetSum1Data), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum1Data), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetSum2Data), (18 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetSum2Data), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Flags), (14 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetDAT0Flags), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetDAT0Channel), (16 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetDAT0Channel), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_SetDigitalOffset), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_SetDigitalOffset), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_TSO_Cmd), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TSO_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_TSOVref_Select), (32 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TSOVref_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_IVR24_Cmd), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_IVR24_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_TopRefernce_Select), (34 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_TopRefernce_Select), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_IT_Config), (46 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_IT_Config), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_ITEA_Cmd), (30 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.text.ADC_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_ADC_DRV.o(.ARM.exidx.text.ADC_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_ADC_DRV.o(.rodata..L__const.ADC_PGAOffsetCalibration_Cmd.PGA_Gain_V), (512 bytes).
    Removing MG32x02z_APB_DRV.o(.text), (0 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_TimerX_Cmd), (24 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_TimerX_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_ITR6_Select), (36 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ITR6_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_ITR7_Select), (32 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ITR7_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_BreakSourceChannel0_Select), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_BreakSourceChannel0_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_BreakSourceChannel1_Select), (28 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_BreakSourceChannel1_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_BreakSourceChannel2_Select), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_BreakSourceChannel2_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseBKS0_Cmd), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseBKS0_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseBKS1_Cmd), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseBKS1_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseBKS2_Cmd), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseBKS2_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_OBMxOpMode_Select), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OBMxOpMode_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_GetOBMxOutputState), (104 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetOBMxOutputState), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseOBMxOutput_Cmd), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseOBMxOutput_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_OutputFilter_Select), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OutputFilter_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_GetOBMxSwitchState), (104 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetOBMxSwitchState), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_SetOBMxInitState), (62 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_SetOBMxInitState), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_GetOBMxInitState), (42 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetOBMxInitState), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_OutputChannel0Source_Select), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OutputChannel0Source_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_OutputChannel1Source_Select), (28 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_OutputChannel1Source_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseOutputChannel0_Cmd), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseOutputChannel0_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseOutputChannel1_Cmd), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseOutputChannel1_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_IRCLK_Select), (36 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_IRCLK_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_IRDAT_Select), (32 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_IRDAT_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseIRCLK_Cmd), (32 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseIRCLK_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_InverseIRDAT_Cmd), (32 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_InverseIRDAT_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCOClockSource_Select), (32 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOClockSource_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCOOutputMode_Select), (32 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOOutputMode_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCOInverseOutput_Cmd), (32 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOInverseOutput_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCO_Cmd), (36 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCO_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCOPFMWidth_Select), (36 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOPFMWidth_Select), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCOSetINC), (40 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOSetINC), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCOSetACC), (40 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOSetACC), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_NCOGetOutputState), (44 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_NCOGetOutputState), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_IT_Config), (46 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_IT_Config), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_ITEA_Cmd), (30 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_APB_DRV.o(.text.APB_ClearFlag), (16 bytes).
    Removing MG32x02z_APB_DRV.o(.ARM.exidx.text.APB_ClearFlag), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text), (0 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_CCLTruthTable_Select), (20 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLTruthTable_Select), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_CCLTruthTable_Cmd), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLTruthTable_Cmd), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_GetCCLxOutputState), (88 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_GetCCLxOutputState), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_SetCCLSnState), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SetCCLSnState), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_InverseCCLOutput_Cmd), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_InverseCCLOutput_Cmd), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_SetCCLIntClockDivider), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SetCCLIntClockDivider), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_SQSEL_Select), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SQSEL_Select), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_EDSEL_Select), (28 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_EDSEL_Select), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_SetFilterFunction), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_SetFilterFunction), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_CCL_Cmd), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCL_Cmd), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_CCLMUX2_Select), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLMUX2_Select), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_CCLMUX1_Select), (28 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLMUX1_Select), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_CCLMUX0_Select), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_CCLMUX0_Select), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_IT_Config), (46 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_IT_Config), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_ITEA_Cmd), (30 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_APX_DRV.o(.text.APX_ClearFlag), (16 bytes).
    Removing MG32x02z_APX_DRV.o(.ARM.exidx.text.APX_ClearFlag), (8 bytes).
    Removing MG32x02z_CFG_DRV.o(.text), (0 bytes).
    Removing MG32x02z_CM0_DRV.o(.text), (0 bytes).
    Removing MG32x02z_CM0_DRV.o(.text.CM0_SysTick_Cmd), (48 bytes).
    Removing MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_SysTick_Cmd), (8 bytes).
    Removing MG32x02z_CM0_DRV.o(.text.CM0_SysTickIT_Cmd), (48 bytes).
    Removing MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_SysTickIT_Cmd), (8 bytes).
    Removing MG32x02z_CM0_DRV.o(.text.CM0_SysTickClockSource_Select), (48 bytes).
    Removing MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_SysTickClockSource_Select), (8 bytes).
    Removing MG32x02z_CM0_DRV.o(.text.CM0_GetSysTickCurrentValue), (12 bytes).
    Removing MG32x02z_CM0_DRV.o(.ARM.exidx.text.CM0_GetSysTickCurrentValue), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text), (0 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_DeInit), (44 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_DeInit), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_Cmd), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_Cmd), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_Power_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_Power_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_FilterClock_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_FilterClock_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_FilterClockDivider_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_FilterClockDivider_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_InverseOutputPin), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_InverseOutputPin), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_OutputPolarity_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_OutputPolarity_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_IVREF_Cmd), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF_Cmd), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_IVREF2_Cmd), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF2_Cmd), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_IVREF_Select), (56 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_IVREF2_Select), (56 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF2_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_IVREFTopSource_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREFTopSource_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_IVREF2TopSource_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IVREF2TopSource_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_AC0IVREFOuput_Cmd), (44 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_AC0IVREFOuput_Cmd), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_AC1IVREFOuput_Cmd), (44 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_AC1IVREFOuput_Cmd), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_PositivePin_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_PositivePin_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_NegativePin_Select), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_NegativePin_Select), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_SetHysteresisWindow), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_SetHysteresisWindow), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_IT_Config), (46 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_IT_Config), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_ITEA_Cmd), (30 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_ClearFlag), (16 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_ClearFlag), (8 bytes).
    Removing MG32x02z_CMP_DRV.o(.text.CMP_GetOutput), (116 bytes).
    Removing MG32x02z_CMP_DRV.o(.ARM.exidx.text.CMP_GetOutput), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text), (0 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_IHRCO_Cmd), (64 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_IHRCO_Cmd), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_IHRCO_Select), (64 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_IHRCO_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_XOSC_Cmd), (68 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_XOSC_Cmd), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_XOSCGain_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_XOSCGain_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_EXTCK_Cmd), (48 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_EXTCK_Cmd), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_ST_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_ST_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_MAIN_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_MAIN_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_HS_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_HS_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_LS_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_LS_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_HS2_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_HS2_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_PLL_Config), (344 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PLL_Config), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_PLL_Cmd), (48 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PLL_Cmd), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_APB_Divider_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_APB_Divider_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_UT_Divider_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_UT_Divider_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_AHB_Divider_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_AHB_Divider_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_ICKO_ClockSource_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ICKO_ClockSource_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_ICKO_Divider_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ICKO_Divider_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_ICKO_Cmd), (48 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ICKO_Cmd), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_MissingClockDetectionDuration_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_MissingClockDetectionDuration_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_MissingClockDetection_Cmd), (64 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_MissingClockDetection_Cmd), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_PeriphProcessClockSource_Config), (252 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphProcessClockSource_Config), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_PeriphONModeClock_Config), (284 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphONModeClock_Config), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_PeriphSLEEPModeClock_Config), (224 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphSLEEPModeClock_Config), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_PeriphSTOPModeClock_Config), (64 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_PeriphSTOPModeClock_Config), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetClockSourceState), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetClockSourceState), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetMainSwitchState), (52 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetMainSwitchState), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetHsSwitchState), (52 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetHsSwitchState), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetLsSwitchState), (52 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetLsSwitchState), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetHS2SwitchState), (52 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetHS2SwitchState), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetPLLISwitchState), (52 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetPLLISwitchState), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_GetSingleFlagStatus), (52 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_ClearFlag), (20 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ClearFlag), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_IT_Config), (56 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_IT_Config), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_ITEA_Cmd), (48 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_USB_Divider_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_USB_Divider_Select), (8 bytes).
    Removing MG32x02z_CSC_DRV.o(.text.CSC_CK_USB_ClockSource_Select), (44 bytes).
    Removing MG32x02z_CSC_DRV.o(.ARM.exidx.text.CSC_CK_USB_ClockSource_Select), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text), (0 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_DeInit), (28 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_Cmd), (30 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_GetDACState), (40 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetDACState), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_OutputBuffer_Cmd), (30 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_OutputBuffer_Cmd), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_GetDAT0), (12 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetDAT0), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_SetDAT0), (18 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_SetDAT0), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_GetOutput), (12 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetOutput), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_TriggerSource_Select), (30 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_TriggerSource_Select), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_TriggerEdge_Select), (30 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_TriggerEdge_Select), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_DataAlignment_Select), (30 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DataAlignment_Select), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_DataResolution_Select), (28 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DataResolution_Select), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_IT_Config), (46 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_IT_Config), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_ITEA_Cmd), (30 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_ClearFlag), (16 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_ClearFlag), (8 bytes).
    Removing MG32x02z_DAC_DRV.o(.text.DAC_DMA_Cmd), (28 bytes).
    Removing MG32x02z_DAC_DRV.o(.ARM.exidx.text.DAC_DMA_Cmd), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text), (0 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_DeInit), (148 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_BaseInitStructure_Init), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Base_Init), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetExtTriggerPin), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetExtTriggerMode), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_LoopMode_Cmd), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_AutoIncreaseSourceAddress), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_AutoIncreaseDestinationAddress), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Source_Select), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Destination_Select), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetBurstSize), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetTransferDataNumber), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetSourceAddress), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetDestinationAddress), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_SetExtraGPLChannel), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetExtraGPLChannel), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_GetCHxUseGPL), (16 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetCHxUseGPL), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_PriorityMode_Select), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_PriorityMode_Select), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_FlashMode_Select), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_FlashMode_Select), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_StartRequest), (18 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_StartRequest), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Channel_Cmd), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_LastCycle_Cmd), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_LastCycle_Cmd), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_Hold_Cmd), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_Hold_Cmd), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_GetCurrentSourceAddress), (12 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetCurrentSourceAddress), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_GetCurrentDestinationAddress), (12 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetCurrentDestinationAddress), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_GetRemainDataCount), (12 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetRemainDataCount), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_SetPriority), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetPriority), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_SetChxSKIP3Mode), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_SetChxSKIP3Mode), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_IT_Config), (46 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_IT_Config), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_ITEA_Cmd), (30 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_ClearFlag), (16 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_GetChannelFlag), (48 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_GetChannelFlag), (8 bytes).
    Removing MG32x02z_DMA_DRV.o(.text.DMA_ClearChannelFlag), (18 bytes).
    Removing MG32x02z_DMA_DRV.o(.ARM.exidx.text.DMA_ClearChannelFlag), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text), (0 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_Cmd), (36 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_Cmd), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_AddressDataBusMode_Config), (92 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_AddressDataBusMode_Config), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_WriteMode_Select), (40 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_WriteMode_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_AccessTime_Config), (92 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_AccessTime_Config), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_IT_Cmd), (48 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_IT_Cmd), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_ITEA_Cmd), (36 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_GetSingleFlagStatus), (48 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_ClearFlag), (20 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_ClearFlag), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_SignalSWAP_Cmd), (84 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SignalSWAP_Cmd), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_SignalInverse_Cmd), (84 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SignalInverse_Cmd), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_SignalSW_Cmd), (84 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SignalSW_Cmd), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_SendSignalStatus_SW), (84 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_SendSignalStatus_SW), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_MWESignal_Select), (32 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MWESignal_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_MOESignal_Select), (32 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MOESignal_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_MCLKPreescaler_Select), (32 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MCLKPreescaler_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_WESignalMode_Select), (32 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_WESignalMode_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_OESignalMode_Select), (32 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_OESignalMode_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_CEMode_Select), (36 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_CEMode_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_MA1SignalOutputPin_Select), (32 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_MA1SignalOutputPin_Select), (8 bytes).
    Removing MG32x02z_EMB_DRV.o(.text.EMB_DMA_Cmd), (32 bytes).
    Removing MG32x02z_EMB_DRV.o(.ARM.exidx.text.EMB_DMA_Cmd), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text), (0 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerMode_Select), (144 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerMode_Select), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerAndMask_Select), (18 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerAndMask_Select), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerOrMask_Select), (18 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerOrMask_Select), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerAndUnmatch_Cmd), (48 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerAndUnmatch_Cmd), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_PxTriggerITEA_Cmd), (48 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_PxTriggerITEA_Cmd), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxAllTriggerEventFlagStatus), (12 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxAllTriggerEventFlagStatus), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxAllTriggerITFlagStatus), (40 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxAllTriggerITFlagStatus), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_GetPinxTriggerEventSingleFlagStatus), (48 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPinxTriggerEventSingleFlagStatus), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxTriggerAndITFlagStatus), (64 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxTriggerAndITFlagStatus), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_GetPxTriggerOrITFlagStatus), (64 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetPxTriggerOrITFlagStatus), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_ClearPxTriggerEventFlag), (18 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_ClearPxTriggerEventFlag), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_ClearPxTriggerITFlag), (34 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_ClearPxTriggerITFlag), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_GetITSourceID), (32 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_GetITSourceID), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_RXEV_Cmd), (32 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_RXEV_Cmd), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_NMI_Cmd), (36 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_NMI_Cmd), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_NMITrigger_SW), (16 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_NMITrigger_SW), (8 bytes).
    Removing MG32x02z_EXIC_DRV.o(.text.EXIC_NMI_Select), (36 bytes).
    Removing MG32x02z_EXIC_DRV.o(.ARM.exidx.text.EXIC_NMI_Select), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text), (0 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinMode_Config), (74 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinMode_Config), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PortMode_Config), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinMode_Select), (40 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinMode_Select), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinHighSpeedMode_Cmd), (30 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinHighSpeedMode_Cmd), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinPUResister_Cmd), (30 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinPUResister_Cmd), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinInverse_Cmd), (28 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinInverse_Cmd), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinOutputDrive_Select), (44 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinOutputDrive_Select), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinInFilterDivider_Select), (44 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinInFilterDivider_Select), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PinFunction_Select), (52 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PinFunction_Select), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_PortFilterClockSource_Select), (34 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_PortFilterClockSource_Select), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_WritePort), (18 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_WritePort), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_ReadPort), (12 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_ReadPort), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_SetPortBit), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_ClearPortBit), (8 bytes).
    Removing MG32x02z_GPIO_DRV.o(.text.GPIO_SetClearPortBit), (34 bytes).
    Removing MG32x02z_GPIO_DRV.o(.ARM.exidx.text.GPIO_SetClearPortBit), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text), (0 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_ParityCheck_Select), (28 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_ParityCheck_Select), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckWord), (52 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckWord), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckHalfWord), (112 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckHalfWord_Low), (52 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_Low), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckHalfWord_High), (52 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_High), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_0), (52 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_0), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_1), (52 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_1), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_2), (52 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_2), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte_3), (52 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte_3), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetParityCheckByte), (188 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetParityCheckByte), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_Inverse_Cmd), (48 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_Inverse_Cmd), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_ByteOrderChange_Cmd), (48 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_ByteOrderChange_Cmd), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_16BitsByteOrderChange_Cmd), (48 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_16BitsByteOrderChange_Cmd), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_BeforeBitOrderChange_Select), (28 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_BeforeBitOrderChange_Select), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_AfterBitOrderChange_Select), (28 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_AfterBitOrderChange_Select), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_CRC_Mode_Select), (28 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_Mode_Select), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_CRC_Data_Size_Select), (28 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_Data_Size_Select), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_CRC_SetInitValue), (20 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_SetInitValue), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_CRC_Cmd), (48 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_CRC_Cmd), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_DMA_Cmd), (48 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_DMA_Cmd), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_DataInput), (20 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_DataInput), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetOutputData), (16 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetOutputData), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_GPL_DRV.o(.text.GPL_GetFlagStatus), (44 bytes).
    Removing MG32x02z_GPL_DRV.o(.ARM.exidx.text.GPL_GetFlagStatus), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text), (0 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetClockSource), (28 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetClockSource), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetClockPrescaler), (28 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetClockPrescaler), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetClockDivider), (38 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetClockDivider), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetSCLHighTime), (18 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSCLHighTime), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetSCLLowTime), (18 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSCLLowTime), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetPreDriveTime), (30 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetPreDriveTime), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GeneralCallAddress_Cmd), (44 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GeneralCallAddress_Cmd), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SlaveAddressDetect_Cmd), (48 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SlaveAddressDetect_Cmd), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetSlaveAddress), (50 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSlaveAddress), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SetSlaveAddress1Mask), (20 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SetSlaveAddress1Mask), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GetSlaveAddress), (88 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetSlaveAddress), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_Cmd), (44 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_TXDMA_Cmd), (44 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_TXDMA_Cmd), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_RXDMA_Cmd), (44 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_RXDMA_Cmd), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_IT_Config), (46 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_IT_Config), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_ITEA_Cmd), (44 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GetITSource), (20 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetITSource), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GetFlagStatus), (44 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_ClearFlag), (16 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GetEventCode), (18 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetEventCode), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GetEventFlag), (42 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetEventFlag), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_ClearEventFlag), (16 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ClearEventFlag), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_GetSlaveMatchAddress), (12 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_GetSlaveMatchAddress), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_SendSBUF), (20 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_SendSBUF), (8 bytes).
    Removing MG32x02z_I2C_DRV.o(.text.I2C_ReceiveSBUF), (14 bytes).
    Removing MG32x02z_I2C_DRV.o(.ARM.exidx.text.I2C_ReceiveSBUF), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text), (0 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_Divider_Select), (32 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_Divider_Select), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_GetCounter), (12 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_GetCounter), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_RefreshCounter), (16 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_RefreshCounter), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_StopModeWakeUpEvent_Config), (56 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_StopModeWakeUpEvent_Config), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_Cmd), (48 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_Cmd), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_ClearFlag), (16 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_ClearFlag), (8 bytes).
    Removing MG32x02z_IWDT_DRV.o(.text.IWDT_IT_Config), (56 bytes).
    Removing MG32x02z_IWDT_DRV.o(.ARM.exidx.text.IWDT_IT_Config), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text), (0 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_GetFlagStatus), (44 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetFlagStatus), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ClearFlag), (16 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ClearFlag), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_Cmd), (68 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_HSP_Cmd), (72 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_HSP_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetFlashWaitState), (48 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetFlashWaitState), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_IT_Cmd), (72 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_IT_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ITEA_Cmd), (68 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ErrorReset_Cmd), (72 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ErrorReset_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ErrorHardFault_Cmd), (68 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ErrorHardFault_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_WriteFlashHold_Cmd), (68 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_WriteFlashHold_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_GetAllAccessState), (20 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetAllAccessState), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_GetAccessState), (48 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetAccessState), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_Access_Cmd), (72 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_Access_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetWriteMode), (52 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetWriteMode), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetWriteUnProtect), (148 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetWriteUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetSinglePageEraseUnProtect), (56 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetSinglePageEraseUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetMultiplePageEraseUnProtect), (56 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetMultiplePageEraseUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetSingleProgramUnProtect), (56 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetSingleProgramUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetMultipleProgramUnProtect), (56 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetMultipleProgramUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetMultipleWriteProtect), (48 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetMultipleWriteProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_APWrite_Cmd), (124 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_APWrite_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_GetIAPSize), (12 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetIAPSize), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSize), (176 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetIAPSize), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetIAPSizeLock), (76 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetIAPSizeLock), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_IAPExecuteCode_Cmd), (124 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_IAPExecuteCode_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_IAPWrite_Cmd), (124 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_IAPWrite_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ISPDRead_Cmd), (124 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPDRead_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ISPDWrite_Cmd), (124 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPDWrite_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_GetISPSize), (12 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_GetISPSize), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ISPRead_Cmd), (128 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPRead_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_ISPWrite_Cmd), (128 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_ISPWrite_Cmd), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetISPSinglePageEraseUnProtect), (96 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPSinglePageEraseUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetISPMultiplePageEraseUnProtect), (96 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPMultiplePageEraseUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetISPSingleProgramUnProtect), (96 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPSingleProgramUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetISPMultipleProgramUnProtect), (96 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPMultipleProgramUnProtect), (8 bytes).
    Removing MG32x02z_MEM_DRV.o(.text.MEM_SetISPMultipleWriteProtect), (48 bytes).
    Removing MG32x02z_MEM_DRV.o(.ARM.exidx.text.MEM_SetISPMultipleWriteProtect), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text), (0 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_STOPModeLDO_Select), (32 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_STOPModeLDO_Select), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_ONModeLDO_Select), (32 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_ONModeLDO_Select), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_BOD2Trigger_Select), (32 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD2Trigger_Select), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_BOD2_Cmd), (48 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD2_Cmd), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_GetBod2Status), (52 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetBod2Status), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_BOD1Threshold_Select), (32 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD1Threshold_Select), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_BOD1Trigger_Select), (36 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD1Trigger_Select), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_BOD1_Cmd), (48 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD1_Cmd), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_VoltageBuffer), (48 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_VoltageBuffer), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_BOD0_Cmd), (48 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_BOD0_Cmd), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_GetBod1Status), (52 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetBod1Status), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_PeriphSLEEPModeContinuous_Config), (48 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_PeriphSLEEPModeContinuous_Config), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_PeriphSTOPModeContinuous_Config), (48 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_PeriphSTOPModeContinuous_Config), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_PeriphSTOPModeWakeUp_Config), (128 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_PeriphSTOPModeWakeUp_Config), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_WakeUpDelay_Select), (32 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_WakeUpDelay_Select), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_GetWakeUpMode), (88 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetWakeUpMode), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_WakeUpMode_Select), (32 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_WakeUpMode_Select), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_GetSingleFlagStatus), (52 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_ClearFlag), (20 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_ClearFlag), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_IT_Config), (56 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_IT_Config), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_GetITStatus), (12 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_GetITStatus), (8 bytes).
    Removing MG32x02z_PW_DRV.o(.text.PW_ITEA_Cmd), (48 bytes).
    Removing MG32x02z_PW_DRV.o(.ARM.exidx.text.PW_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text), (0 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_GetSingleFlagStatus), (48 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_ClearFlag), (16 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_ClearFlag), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_CRstSource_Config), (56 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_CRstSource_Config), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_WRstSource_Config), (56 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_WRstSource_Config), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_WRstGPIOLock_Config), (56 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_WRstGPIOLock_Config), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_ForceRstPeriph_SW), (288 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_ForceRstPeriph_SW), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_TriggerSystemRst_SW), (48 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_TriggerSystemRst_SW), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_WWDTWRstMask_Cmd), (48 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_WWDTWRstMask_Cmd), (8 bytes).
    Removing MG32x02z_RST_DRV.o(.text.RST_USBRstMode_Select), (32 bytes).
    Removing MG32x02z_RST_DRV.o(.ARM.exidx.text.RST_USBRstMode_Select), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text), (0 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_CLK_Select), (32 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_CLK_Select), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_PreDivider_Select), (32 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_PreDivider_Select), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_Divider_Select), (32 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_Divider_Select), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_GetAlarmCompareValue), (12 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetAlarmCompareValue), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_SetAlarmCompareValue), (20 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_SetAlarmCompareValue), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_GetAlarmState), (44 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetAlarmState), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_Alarm_Cmd), (64 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_Alarm_Cmd), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_GetReloadReg), (12 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetReloadReg), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_GetCaptureReg), (12 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetCaptureReg), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_SetReloadReg), (20 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_SetReloadReg), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_Cmd), (64 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_Cmd), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_RCR_Mode_Select), (32 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_RCR_Mode_Select), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_StopModeWakeUpEvent_Config), (56 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_StopModeWakeUpEvent_Config), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_OutputSignal_Select), (36 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_OutputSignal_Select), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_InitOutputSignalState_Cmd), (72 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_InitOutputSignalState_Cmd), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_TriggerStamp_Select), (32 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_TriggerStamp_Select), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_TriggerStamp_SW), (12 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_TriggerStamp_SW), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_GetSingleFlagStatus), (44 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_ClearFlag), (20 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_IT_Config), (60 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_IT_Config), (8 bytes).
    Removing MG32x02z_RTC_DRV.o(.text.RTC_ITEA_Cmd), (48 bytes).
    Removing MG32x02z_RTC_DRV.o(.ARM.exidx.text.RTC_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text), (0 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_Clock_Select), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Clock_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_PreDivider_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Prescaler_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Divider_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_TriggerClockToggle), (18 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_TriggerClockToggle), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_DualTransferRate_Select), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DualTransferRate_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SlaveHighSpeed_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveHighSpeed_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ModeAndNss_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_ModfHappenedAction_Select), (28 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ModfHappenedAction_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NSSInputSignal_Select), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NSSInputSignal_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SingleMasterModeNssPulse_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SingleMasterModeNssPulse_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NssInputInverse_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssInputInverse_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NssOutputInverse_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssOutputInverse_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssInputOutputSoftwareControl_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NssInputSoftwareControl_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssInputSoftwareControl_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NssOutputSoftwareControl_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssOutputSoftwareControl_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetNSSInputStatust), (40 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetNSSInputStatust), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NSSInputStatusControl_SW), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NSSInputStatusControl_SW), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NSSOutputStatusControl_SW), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NSSOutputStatusControl_SW), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_NssIdleTime_Select), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_NssIdleTime_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClockPhase_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClockPolarity_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_FirstBit_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetRxShadowBufferLevel), (16 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetRxShadowBufferLevel), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClearRxData), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetDataBufferReceivedBytes), (16 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetDataBufferReceivedBytes), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SetDataBufferReceivedBytes), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SetDataBufferReceivedBytes), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClearTxData), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetTxShadowBufferLevel), (16 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetTxShadowBufferLevel), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetRxData), (12 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetRxData), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SetTxData), (82 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SetTxData), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetTxData), (12 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetTxData), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveModeReceivedThreshold_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DataSize_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DataLine_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_DataLineOutput_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SendCopyMode_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SendCopyMode_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_BidirectionalOutput_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_BidirectionalOutput_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_TransferBidirection_Select), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_TransferBidirection_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_MosiMisoSignalSwap_Cmd), (28 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_MosiMisoSignalSwap_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_D03D47SignalSwap_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_D03D47SignalSwap_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_LoopBackMode_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_ClockOutputSignal_Select), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClockOutputSignal_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_IdleStateDataMode_Select), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SlaveAutoFullDuplex_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveAutoFullDuplex_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SlaveSendDataDirectUpdate_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveSendDataDirectUpdate_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_TXDMA_Cmd), (28 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_TXDMA_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_RXDMA_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_RXDMA_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_RXDMAPreCatch_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_RXDMAPreCatch_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetAllFlagStatus), (14 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_GetSingleFlagStatus), (40 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ClearFlag), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_IT_Config), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd), (30 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_SlaveAsynchronous_Cmd), (8 bytes).
    Removing MG32x02z_SPI_DRV.o(.ARM.exidx.text.SPI_MasterDataOutIdleState_Select), (8 bytes).
    Removing MG32x02z_SYS_DRV.o(.text), (0 bytes).
    Removing MG32x02z_SYS_DRV.o(.text.SYS_ITEA_Cmd), (40 bytes).
    Removing MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_SYS_DRV.o(.text.SYS_GetChipMID), (12 bytes).
    Removing MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_GetChipMID), (8 bytes).
    Removing MG32x02z_SYS_DRV.o(.text.SYS_ReadGeneralReg), (12 bytes).
    Removing MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_ReadGeneralReg), (8 bytes).
    Removing MG32x02z_SYS_DRV.o(.text.SYS_WriteGeneralReg), (20 bytes).
    Removing MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_WriteGeneralReg), (8 bytes).
    Removing MG32x02z_SYS_DRV.o(.text.SYS_ReadBackupReg), (12 bytes).
    Removing MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_ReadBackupReg), (8 bytes).
    Removing MG32x02z_SYS_DRV.o(.text.SYS_WriteBackupReg), (20 bytes).
    Removing MG32x02z_SYS_DRV.o(.ARM.exidx.text.SYS_WriteBackupReg), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text), (0 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_DeInit), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TimeBaseStruct_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TimeBase_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Prescaler_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Counter_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TimerMode_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CounterClock_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PrescalerClock_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetInternalClockDivider), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCounterDirection), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetPrescalerDirection), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InternalClockSource_Select), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InternalClockSource_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ExternalClock_Select), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExternalClock_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ITRx_Select), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ITRx_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCounter), (12 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCounter), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_Counter_Cmd), (44 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Counter_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_Counter_SW), (48 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Counter_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetPrescaler), (12 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetPrescaler), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_Prescaler_Cmd), (44 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Prescaler_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_Prescaler_SW), (48 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Prescaler_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_Timer_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GatePrescaler_SW), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GatePrescaler_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GateCounter_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GateCounter_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ResetPrescaler_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ResetPrescaler_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ResetCounter_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ResetCounter_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TriggerSource_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGICounter_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGIPrescaler_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_UEV_Config), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_UEV_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_TRGOOut_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGOOut_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_TRGO_Select), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_TRGO_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseTRGO_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseTRGO_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN0Source_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN0Source_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN0TriggerEvent_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN0TriggerEvent_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN1Source_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN1Source_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN1TriggerEvent_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN1TriggerEvent_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN2Source_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN2Source_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN2TriggerEvent_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN2TriggerEvent_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN3Source_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN3Source_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IN3TriggerEvent_Select), (32 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IN3TriggerEvent_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ClockOutSource_Select), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ClockOutSource_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ClockOut_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ClockOut_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_CKOOutputState_Init), (66 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CKOOutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC0z_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC0z_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC0zOutputState_Init), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0zOutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC0zBreakStopState_Init), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0zBreakStopState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC0zOutput_Cmd), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0zOutput_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC00Output_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC00Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC01Output_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC01Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC02Output_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC02Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC0N_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC0N_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC0NOutput_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0NOutput_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC0NBreakStopState_Init), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0NBreakStopState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC0H_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC0H_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC0HOutputState_Init), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0HOutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC1z_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC1z_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1zOutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC1zBreakStopState_Init), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1zBreakStopState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC1zOutput_Cmd), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1zOutput_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC10Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC11Output_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC11Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC12Output_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC12Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC1N_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC1N_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC1NOutput_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1NOutput_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC1NBreakStopState_Init), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1NBreakStopState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC1H_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC1H_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC1HOutputState_Init), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1HOutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC2_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC2_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2OutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC2BreakStopState_Init), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2BreakStopState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC2Output_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC2N_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2NOutput_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC2NBreakStopState_Init), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2NBreakStopState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC2H_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC2H_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC2HOutputState_Init), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2HOutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC3_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC3_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC3OutputState_Init), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3OutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC3BreakStopState_Init), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3BreakStopState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC3Output_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3Output_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseOC3H_Cmd), (32 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseOC3H_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC3HOutputState_Init), (70 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3HOutputState_Init), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ExternalBreakEvent_Config), (52 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExternalBreakEvent_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InternalBreakEvent_Config), (52 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InternalBreakEvent_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_BreakTrigger_SW), (32 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakTrigger_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_BreakCH3_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakCH3_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_BreakCH012_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakCH012_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_BreakMode_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_BreakMode_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC0BreakControl_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC0BreakControl_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC1BreakControl_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC1BreakControl_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC2BreakControl_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC2BreakControl_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OC3BreakControl_Select), (32 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OC3BreakControl_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_PreloadEventSource_Config), (52 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadEventSource_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_PreloadActive_SW), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadActive_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_PreloadOC0z_Config), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadOC0z_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_PreloadOC1z_Config), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_PreloadOC1z_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_CH0Function_Config), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH0Function_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH1Function_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH2Function_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_CH3Function_Config), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_CH3Function_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_OutputDelayMode_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_OutputDelayMode_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetIC0Value), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC0Value), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetIC1Value), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC1Value), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetIC2Value), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC2Value), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetIC3Value), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetIC3Value), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IC0OverWritten_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC0OverWritten_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IC1OverWritten_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC1OverWritten_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IC2OverWritten_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC2OverWritten_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_IC3OverWritten_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IC3OverWritten_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC0_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC0_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC1_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC1_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC2_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC2_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_RisingCaptureIC3_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RisingCaptureIC3_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC0_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC0_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC1_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC1_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC2_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC2_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_FallingCaptureIC3_SW), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_FallingCaptureIC3_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC0A), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC0A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC1A), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC1A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC2A), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC2A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC3A), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC3A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC0B), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC0B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC1B), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC1B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC2B), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC2B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetCC3B), (14 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetCC3B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetCC0A), (20 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC0A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetCC1A), (20 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC1A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetCC2A), (20 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC2A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetCC3A), (20 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC3A), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetCC0B), (20 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC0B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC1B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC2B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetCC3B), (20 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetCC3B), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF0A_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF0A_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF1A_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF1A_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF2A_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF2A_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF3A_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF3A_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF0B_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF0B_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF1B_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF1B_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF2B_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF2B_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GenerateCF3B_SW), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GenerateCF3B_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ReloadFromCCxB_Cmd), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ReloadFromCCxB_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_AlignmentMode_Select), (34 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_AlignmentMode_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_QEI_Select), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_QEI_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_QEIReset_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_QEIReset_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_QEIResetIDX_Select), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_QEIResetIDX_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseQEIDirection), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseQEIDirection), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_AutoStop_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_AutoStop_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_RepeatAutoStopMode_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepeatAutoStopMode_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepetitionCounter_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ControlPWM_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepetitionCounter_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_RepetitionCounterClock_Select), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetDeadZoneClockDivider), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetDeadZoneClockDivider), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_SetDeadTime), (22 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_SetDeadTime), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_IT_Config), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetSingleFlagStatus), (42 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ClearFlag), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ExtTRGI_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExtTRGI_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_InverseExtTRGI_Cmd), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_InverseExtTRGI_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ExtTRGI2UEV_Cmd), (28 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ExtTRGI2UEV_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_ForceUpdate_SW), (30 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_ForceUpdate_SW), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_UEV_Cmd), (44 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_UEV_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_DMAChannel_Cmd), (46 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_DMAChannel_Cmd), (8 bytes).
    Removing MG32x02z_TM_DRV.o(.text.TM_DMAUpdateMode_Select), (32 bytes).
    Removing MG32x02z_TM_DRV.o(.ARM.exidx.text.TM_DMAUpdateMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text), (0 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IT_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetITStatus), (12 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetITStatus), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetITAllFlagStatus), (24 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetITAllFlagStatus), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetITSingleFlagStatus), (64 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetITSingleFlagStatus), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_ClearITFlag), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearITFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRxDifferentFlag), (40 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxDifferentFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRxHoldFlag), (40 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxHoldFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_ClearRxHoldFlag), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearRxHoldFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetIrDaBusyFlag), (40 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetIrDaBusyFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetBreakBusyFlag), (40 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBreakBusyFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRxBusyFlag), (40 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxBusyFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRxNoiseFlag), (40 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRxNoiseFlag), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DataCharacter_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_Mode_Select), (74 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Mode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_DataLine_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DataLine_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_HalfDuplexMode_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_HalfDuplexMode_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_LoopBackMode_Cmd), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_LoopBackMode_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TX_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RX_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RXInverse_Cmd), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXInverse_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXInverse_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_NoiseDataSkip_Cmd), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NoiseDataSkip_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGenerator_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_BaudRateGeneratorMode_Select), (28 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGeneratorMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_BaudRateGeneratorClock_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGeneratorClock_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_BaudRateCounterClockSource_Select), (28 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateCounterClockSource_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorPreReload), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPreReload), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorCountReload), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCountReload), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorPre), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPre), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetBaudRateGeneratorCount), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCount), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BaudRateGenerator_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CLKSignalSource_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CLKSignalSource_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CLKSignal_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CLKSignal_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CtrlBROSignalStatus_SW), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlBROSignalStatus_SW), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CtrlCLKSignalStatus_SW), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlCLKSignalStatus_SW), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXClockSource_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXClockSource_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXOverSamplingSampleNumber_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXOverSamplingSampleNumber_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXOverSamplingMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TimeroutTimer_Cmd), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TimeroutTimer_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TriggerTimeoutTimerRst_SW), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TriggerTimeoutTimerRst_SW), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TimeoutMode_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TimeoutMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TimeoutTimerClockSource_Select), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TimeoutTimerClockSource_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_IdleDetect_Select), (18 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IdleDetect_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_IdleTimeoutDetect_Config), (60 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IdleTimeoutDetect_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RXTimeoutDetect_Config), (60 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXTimeoutDetect_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_BreakTimeoutDetect_Config), (100 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BreakTimeoutDetect_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CalibrationTimeoutDetect_Config), (100 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CalibrationTimeoutDetect_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CtrlTMOSignalStatus_SW), (44 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlTMOSignalStatus_SW), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetTimeoutTimerCounter), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTimeoutTimerCounter), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SetTimeoutTimerCounter), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetTimeoutTimerCounter), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetTimeoutTimerReload), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTimeoutTimerReload), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SetTimeoutTimerCompare), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetTimeoutTimerCompare), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetTXShadowBufferLevel), (16 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTXShadowBufferLevel), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRXShadowBufferLevel), (16 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXShadowBufferLevel), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_ClearTXData), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearTXData), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_ClearRXData), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ClearRXData), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetTXDataRegLevel), (18 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTXDataRegLevel), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RXShadowBufferThreshold_Select), (28 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXShadowBufferThreshold_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRXDataRegLevel), (18 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXDataRegLevel), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRXData), (12 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXData), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetCaptureData), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCaptureData), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetCaptureStatusBit), (50 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCaptureStatusBit), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRXShiftBufferStatusBit), (50 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXShiftBufferStatusBit), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetTXShiftBufferData), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetTXShiftBufferData), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetRXShiftBufferData), (14 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetRXShiftBufferData), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RTS_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RTS_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RTSInverse_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RTSInverse_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CtrlRTS_SW), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlRTS_SW), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CTS_Cmd), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CTS_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetCTSLineStatus), (46 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCTSLineStatus), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CTSInverse_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CTSInverse_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_DE_Cmd), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DE_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_DEInverse_Cmd), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DEInverse_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_DEGuardTime_Select), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_DEGuardTime_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_IdlehandleMode_Select), (28 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IdlehandleMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TXHalt_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXHalt_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TXGuardTime_Select), (18 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXGuardTime_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SetTXData), (106 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetTXData), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CPHAMode_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CPHAMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CPOLMode_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CPOLMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_NssInverse_Cmd), (32 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NssInverse_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_NssSW_Cmd), (32 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NssSW_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CtrlNSS_SW), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CtrlNSS_SW), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_NssInput_Cmd), (32 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_NssInput_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SPIMasterDataOutputIdleStatus_Select), (28 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SPIMasterDataOutputIdleStatus_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SYNCMode_Select), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SYNCMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SetSlaveAddressMask), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetSlaveAddressMask), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SetSlaveAddress), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SetSlaveAddress), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GlobalAddress_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GlobalAddress_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SendAddress), (32 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SendAddress), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CalibrationMode_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CalibrationMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_AutoCalibration_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_AutoCalibration_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_Calibration_SW), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Calibration_SW), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_CalibrationCompleteDataHold_Cmd), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_CalibrationCompleteDataHold_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_ExtraBreakBit_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ExtraBreakBit_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_SendBreak), (28 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_SendBreak), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_GetCalibrationResult), (84 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_GetCalibrationResult), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TXDMA_Cmd), (136 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXDMA_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RXDMA_Cmd), (136 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXDMA_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_BreakDisableDMA_Cmd), (32 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_BreakDisableDMA_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_IrDA_Config), (32 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IrDA_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_IrDA_Cmd), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_IrDA_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_AutoExitMuteMode_Select), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_AutoExitMuteMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_AutoEnterMuteMode_Select), (20 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_AutoEnterMuteMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_Mute_Cmd), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_Mute_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RXParityError_Config), (40 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RXParityError_Config), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TXErrorDetectMode_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXErrorDetectMode_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_TXErrorResendTime_Select), (36 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_TXErrorResendTime_Select), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_RxTxSwap_Cmd), (38 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_RxTxSwap_Cmd), (8 bytes).
    Removing MG32x02z_URT_DRV.o(.text.URT_ExternalClockMux_Select), (34 bytes).
    Removing MG32x02z_URT_DRV.o(.ARM.exidx.text.URT_ExternalClockMux_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text), (0 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_Transceiver_Cmd), (32 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Transceiver_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_V33_Cmd), (32 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_V33_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_V33toVDD_Cmd), (32 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_V33toVDD_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_Function_Cmd), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Function_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_Cmd), (32 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_DriveStrength_Select), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_DriveStrength_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_PDResistorMode_Select), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_PDResistorMode_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_PUResistorMode_Select), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_PUResistorMode_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_LVRModeInSTOP_Select), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_LVRModeInSTOP_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetBusStatus), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetBusStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetBusEventStatus2), (52 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetBusEventStatus2), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetDPDMStatus), (16 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetDPDMStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_Connect_Cmd), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_Connect_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetAddress), (20 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetAddress), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetRemoteWakeupTime), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetRemoteWakeupTime), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_TriggerRemoteWakeup), (20 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_TriggerRemoteWakeup), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SoftwareControlRemoteWakeup_Cmd), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SoftwareControlRemoteWakeup_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetRemoteWakeup_SW), (32 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetRemoteWakeup_SW), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SuspendSignalMode_Select), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SuspendSignalMode_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_NoResponse_Cmd), (32 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_NoResponse_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetFrameNumber), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetFrameNumber), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointStatus), (18 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointStatus), (20 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetDoubleBufferEndpointStatus), (18 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetDoubleBufferEndpointStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointOUTSequenceBit), (24 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointOUTSequenceBit), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointINSequenceBit), (24 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointINSequenceBit), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointOUTSequenceBit), (14 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointOUTSequenceBit), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointINSequenceBit), (14 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointINSequenceBit), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointAddress), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointAddress), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointFlagStatus), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointFlagStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointITFlagStatus), (18 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointITFlagStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_ClearEndpointFlag), (18 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ClearEndpointFlag), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetSETUPStatus), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetSETUPStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_ClearSETUPStatus), (20 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ClearSETUPStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_EndpintIT_Config), (40 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_EndpintIT_Config), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointRXSize), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointRXSize), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointTXSize), (18 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointTXSize), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer1TXSize), (18 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1TXSize), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer0TXSize), (18 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0TXSize), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointRXData), (96 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointRXData), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointDoubleBufferRXData), (200 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointDoubleBufferRXData), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointTXData), (76 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointTXData), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBufferTXData), (216 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBufferTXData), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointRXBlock), (42 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointRXBlock), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointBlockOf32Byte), (56 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointBlockOf32Byte), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointBlockOf2Byte), (56 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointBlockOf2Byte), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointTXDataAddress), (22 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointTXDataAddress), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointRXDataAddress), (22 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointRXDataAddress), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer0Address), (22 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0Address), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_SetEndpointDoubleBuffer1Address), (22 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1Address), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointTXDataAddress), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointTXDataAddress), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointRXDataAddress), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointRXDataAddress), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointDoubleBuffer0Address), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer0Address), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetEndpointDoubleBuffer1Address), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer1Address), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_EndpointMode_Select), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_EndpointMode_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_EndpointDoubleBufferMode_Cmd), (30 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_EndpointDoubleBufferMode_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_TriggerEndpointRst), (24 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_TriggerEndpointRst), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_ITEA_Cmd), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ITEA_Cmd), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_IT_Config), (44 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_IT_Config), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetITAllFlagStatus), (16 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetITAllFlagStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetITIEAllStatus), (20 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetITIEAllStatus), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_ClearITFlag), (24 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_ClearITFlag), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_LPMhandshakeMode_Select), (28 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_LPMhandshakeMode_Select), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetLPMBESL), (12 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetLPMBESL), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_GetLPMbRemoteWake), (16 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_GetLPMbRemoteWake), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_DMARXSEL_Config), (44 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_DMARXSEL_Config), (8 bytes).
    Removing MG32x02z_USB_DRV.o(.text.USB_DMATXSEL_Config), (44 bytes).
    Removing MG32x02z_USB_DRV.o(.ARM.exidx.text.USB_DMATXSEL_Config), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text), (0 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_CLK_Select), (32 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_CLK_Select), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_DIV_Select), (32 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_DIV_Select), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_PDIV_Select), (36 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_PDIV_Select), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_Cmd), (48 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_Cmd), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_GetCounter), (12 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetCounter), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_RefreshCounter), (16 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_RefreshCounter), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_GetReloadReg), (12 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetReloadReg), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_SetReloadReg), (20 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_SetReloadReg), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_GetWindowThreshold), (12 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetWindowThreshold), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_SetWindowThreshold), (20 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_SetWindowThreshold), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_GetWarningThreshold), (12 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetWarningThreshold), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_SetWarningThreshold), (20 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_SetWarningThreshold), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_RstEvent_Config), (64 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_RstEvent_Config), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_GetAllFlagStatus), (12 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetAllFlagStatus), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_GetSingleFlagStatus), (44 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_GetSingleFlagStatus), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_ClearFlag), (20 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_ClearFlag), (8 bytes).
    Removing MG32x02z_WWDT_DRV.o(.text.WWDT_IT_Config), (56 bytes).
    Removing MG32x02z_WWDT_DRV.o(.ARM.exidx.text.WWDT_IT_Config), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text), (0 bytes).
    Removing MG32x02z__Common_DRV.o(.text.InitTick), (40 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.InitTick), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.SysTick_Config), (80 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.__NVIC_SetPriority), (132 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.IncTick), (16 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.IncTick), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.GetTick), (12 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.GetTick), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.Delay), (58 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.SuspendTick), (16 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.SuspendTick), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.ResumeTick), (16 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.ResumeTick), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.ProtectModuleReg), (44 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.ProtectModuleReg), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.UnProtectModuleReg), (48 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.UnProtectModuleReg), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.text.LockModuleReg), (48 bytes).
    Removing MG32x02z__Common_DRV.o(.ARM.exidx.text.LockModuleReg), (8 bytes).
    Removing MG32x02z__Common_DRV.o(.bss.uwTick), (4 bytes).
    Removing MG32x02z_CSC_Init.o(.text), (0 bytes).
    Removing MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_IHRCO_Enable), (8 bytes).
    Removing MG32x02z_CSC_Init.o(.text.CSC_XOSC_Enable), (84 bytes).
    Removing MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_XOSC_Enable), (8 bytes).
    Removing MG32x02z_CSC_Init.o(.text.CSC_EXTCK_Enable), (36 bytes).
    Removing MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_EXTCK_Enable), (8 bytes).
    Removing MG32x02z_CSC_Init.o(.ARM.exidx.text.CSC_Init), (8 bytes).
    Removing MG32x02z_ChipInit.o(.text), (0 bytes).
    Removing MG32x02z_ChipInit.o(.ARM.exidx.text.ChipInit), (8 bytes).
    Removing MG32x02z_GPIO_Init.o(.text), (0 bytes).
    Removing MG32x02z_GPIO_Init.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing system_MG32x02z.o(.text), (0 bytes).
    Removing system_MG32x02z.o(.text.SystemCoreClockUpdate), (16 bytes).
    Removing system_MG32x02z.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_MG32x02z.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_MG32x02z.o(.ARM.exidx.text.HardFault_Handler_C), (8 bytes).
    Removing system_MG32x02z.o(.text.div), (100 bytes).
    Removing system_MG32x02z.o(.ARM.exidx.text.div), (8 bytes).
    Removing system_MG32x02z.o(.text.ldiv), (100 bytes).
    Removing system_MG32x02z.o(.ARM.exidx.text.ldiv), (8 bytes).
    Removing system_MG32x02z.o(.text.__rt_sdiv32by16), (104 bytes).
    Removing system_MG32x02z.o(.ARM.exidx.text.__rt_sdiv32by16), (8 bytes).
    Removing system_MG32x02z.o(.text.__rt_udiv32by16), (104 bytes).
    Removing system_MG32x02z.o(.ARM.exidx.text.__rt_udiv32by16), (8 bytes).
    Removing MG32x02z_RGBTable_API.o(.text), (0 bytes).
    Removing MG32x02z_RGBTable_API.o(.data.API_RGB_PWPIN_TABLE), (22 bytes).
    Removing MG32x02z_RGBTable_API.o(.rodata.API_KB_ATable), (144 bytes).
    Removing MG32x02z_RGBTable_API.o(.rodata.API_RGB_PWMData_Table), (276 bytes).
    Removing MG32x02z_RGB_API.o(.text), (0 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_AllRGB_OFF), (8 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Data_DeInit), (8 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_ControlParameter_Init), (8 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Init), (8 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Mode_Config), (8 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.TM10_IRQHandler), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_KBMain), (2 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_KBMain), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_Main), (372 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_Main), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_StaticDrama), (124 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_StaticDrama), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_BreathDrama), (144 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_BreathDrama), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_RainDrama0), (672 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_RainDrama0), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_RainDrama1), (676 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_RainDrama1), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_RainDrama2), (712 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_RainDrama2), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_MarphingDrama), (456 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_MarphingDrama), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama1), (1636 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_KBIterlockDrama1), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_KBIterlockDrama0), (524 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_KBIterlockDrama0), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_StaticUserDrama), (132 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_StaticUserDrama), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_SetNextDrama), (64 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_SetNextDrama), (8 bytes).
    Removing MG32x02z_RGB_API.o(.text.API_RGB_BreathDramaAct), (272 bytes).
    Removing MG32x02z_RGB_API.o(.ARM.exidx.text.API_RGB_BreathDramaAct), (8 bytes).
    Removing MG32x02z_RGB_API.o(.bss.API_RGB_Numerator), (1 bytes).
    Removing MG32x02z_RGB_API.o(.bss.API_RGB_Denominator), (1 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.text), (0 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGBLedDriverData_DeInit), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGBLedControlParameter_Init), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGBLed_Init), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_MBIA045_EnableWriteConfiguration_Trigger), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_MBIA045_WriteConfiguration_Trigger), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGB_UpdateDataTrigger), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.SPI0_IRQHandler), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.URT123_IRQHandler), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_MBIA045_GlobalLatch_Trigger), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateNextLineData), (168 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGB_UpdateNextLineData), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDateDramaTmp), (220 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.ARM.exidx.text.API_RGB_UpdateDateDramaTmp), (8 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.bss.API_RGB_SceneryTmp), (1056 bytes).
    Removing MG32x02z_RGB_MBIA045_API.o(.bss.API_RGB_Scenery), (1056 bytes).
    Removing MG32x02z_RGB_TLC5948_API.o(.text), (0 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing dcmplt.o(.text), (44 bytes).
    Removing dcmpge.o(.text), (44 bytes).
    Removing dcmpeq.o(.text), (46 bytes).
    Removing dflti.o(.text), (40 bytes).
    Removing dfltui.o(.text), (28 bytes).

1825 unused section(s) (total 50730 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmplt.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpge.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpeq.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    D:/STM32/Test/Examples/MG32F02A128/MG32F02U128/SPI_LED_Driver_Project/RTE/Device/MG32F02U128/startup_MG32x02z.s 0x00000000   Number         0  startup_MG32x02z.o ABSOLUTE
    MG32x02z_ADC_DRV.c                       0x00000000   Number         0  MG32x02z_ADC_DRV.o ABSOLUTE
    MG32x02z_APB_DRV.c                       0x00000000   Number         0  MG32x02z_APB_DRV.o ABSOLUTE
    MG32x02z_APX_DRV.c                       0x00000000   Number         0  MG32x02z_APX_DRV.o ABSOLUTE
    MG32x02z_CFG_DRV.c                       0x00000000   Number         0  MG32x02z_CFG_DRV.o ABSOLUTE
    MG32x02z_CM0_DRV.c                       0x00000000   Number         0  MG32x02z_CM0_DRV.o ABSOLUTE
    MG32x02z_CMP_DRV.c                       0x00000000   Number         0  MG32x02z_CMP_DRV.o ABSOLUTE
    MG32x02z_CSC_DRV.c                       0x00000000   Number         0  MG32x02z_CSC_DRV.o ABSOLUTE
    MG32x02z_CSC_Init.c                      0x00000000   Number         0  MG32x02z_CSC_Init.o ABSOLUTE
    MG32x02z_ChipInit.c                      0x00000000   Number         0  MG32x02z_ChipInit.o ABSOLUTE
    MG32x02z_DAC_DRV.c                       0x00000000   Number         0  MG32x02z_DAC_DRV.o ABSOLUTE
    MG32x02z_DMA_DRV.c                       0x00000000   Number         0  MG32x02z_DMA_DRV.o ABSOLUTE
    MG32x02z_EMB_DRV.c                       0x00000000   Number         0  MG32x02z_EMB_DRV.o ABSOLUTE
    MG32x02z_EXIC_DRV.c                      0x00000000   Number         0  MG32x02z_EXIC_DRV.o ABSOLUTE
    MG32x02z_GPIO_DRV.c                      0x00000000   Number         0  MG32x02z_GPIO_DRV.o ABSOLUTE
    MG32x02z_GPIO_Init.c                     0x00000000   Number         0  MG32x02z_GPIO_Init.o ABSOLUTE
    MG32x02z_GPL_DRV.c                       0x00000000   Number         0  MG32x02z_GPL_DRV.o ABSOLUTE
    MG32x02z_I2C_DRV.c                       0x00000000   Number         0  MG32x02z_I2C_DRV.o ABSOLUTE
    MG32x02z_IWDT_DRV.c                      0x00000000   Number         0  MG32x02z_IWDT_DRV.o ABSOLUTE
    MG32x02z_MEM_DRV.c                       0x00000000   Number         0  MG32x02z_MEM_DRV.o ABSOLUTE
    MG32x02z_PW_DRV.c                        0x00000000   Number         0  MG32x02z_PW_DRV.o ABSOLUTE
    MG32x02z_RGBTable_API.c                  0x00000000   Number         0  MG32x02z_RGBTable_API.o ABSOLUTE
    MG32x02z_RGB_API.c                       0x00000000   Number         0  MG32x02z_RGB_API.o ABSOLUTE
    MG32x02z_RGB_MBIA045_API.c               0x00000000   Number         0  MG32x02z_RGB_MBIA045_API.o ABSOLUTE
    MG32x02z_RGB_TLC5948_API.c               0x00000000   Number         0  MG32x02z_RGB_TLC5948_API.o ABSOLUTE
    MG32x02z_RST_DRV.c                       0x00000000   Number         0  MG32x02z_RST_DRV.o ABSOLUTE
    MG32x02z_RTC_DRV.c                       0x00000000   Number         0  MG32x02z_RTC_DRV.o ABSOLUTE
    MG32x02z_SPI_DRV.c                       0x00000000   Number         0  MG32x02z_SPI_DRV.o ABSOLUTE
    MG32x02z_SYS_DRV.c                       0x00000000   Number         0  MG32x02z_SYS_DRV.o ABSOLUTE
    MG32x02z_TM_DRV.c                        0x00000000   Number         0  MG32x02z_TM_DRV.o ABSOLUTE
    MG32x02z_URT_DRV.c                       0x00000000   Number         0  MG32x02z_URT_DRV.o ABSOLUTE
    MG32x02z_USB_DRV.c                       0x00000000   Number         0  MG32x02z_USB_DRV.o ABSOLUTE
    MG32x02z_WWDT_DRV.c                      0x00000000   Number         0  MG32x02z_WWDT_DRV.o ABSOLUTE
    MG32x02z__Common_DRV.c                   0x00000000   Number         0  MG32x02z__Common_DRV.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    system_MG32x02z.c                        0x00000000   Number         0  system_MG32x02z.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_MG32x02z.o(RESET)
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       60  startup_MG32x02z.o(.text)
    .text                                    0x00000110   Section        0  memseta.o(.text)
    .text                                    0x00000134   Section        0  dadd.o(.text)
    .text                                    0x00000298   Section        0  dmul.o(.text)
    .text                                    0x00000368   Section        0  uidiv_div0.o(.text)
    .text                                    0x000003a6   Section        0  uldiv.o(.text)
    .text                                    0x00000406   Section        0  llshl.o(.text)
    .text                                    0x00000426   Section        0  llsshr.o(.text)
    .text                                    0x0000044c   Section        0  iusefp.o(.text)
    .text                                    0x0000044c   Section        0  depilogue.o(.text)
    .text                                    0x0000050c   Section        0  ddiv.o(.text)
    .text                                    0x000005fc   Section        0  dfixul.o(.text)
    .text                                    0x0000063c   Section       40  cdrcmple.o(.text)
    .text                                    0x00000664   Section       48  init.o(.text)
    .text                                    0x00000694   Section        0  semi.o(.text)
    .text                                    0x00000694   Section        0  llushr.o(.text)
    .text                                    0x000006b6   Section        0  iusesemip.o(.text)
    [Anonymous Symbol]                       0x000006b8   Section        0  MG32x02z_RGB_API.o(.text.API_AllRGB_OFF)
    __arm_cp.0_0                             0x000006d0   Number         4  MG32x02z_RGB_API.o(.text.API_AllRGB_OFF)
    __arm_cp.0_1                             0x000006d4   Number         4  MG32x02z_RGB_API.o(.text.API_AllRGB_OFF)
    __arm_cp.0_2                             0x000006d8   Number         4  MG32x02z_RGB_API.o(.text.API_AllRGB_OFF)
    API_MBIA045_EnableWriteConfiguration_Trigger 0x000006dd   Thumb Code    44  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_EnableWriteConfiguration_Trigger)
    [Anonymous Symbol]                       0x000006dc   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_EnableWriteConfiguration_Trigger)
    __arm_cp.4_1                             0x00000708   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_EnableWriteConfiguration_Trigger)
    API_MBIA045_GlobalLatch_Trigger          0x0000070d   Thumb Code   112  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger)
    [Anonymous Symbol]                       0x0000070c   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger)
    __arm_cp.9_3                             0x0000077c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger)
    __arm_cp.9_4                             0x00000780   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger)
    __arm_cp.9_5                             0x00000784   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger)
    __arm_cp.9_6                             0x00000788   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_GlobalLatch_Trigger)
    API_MBIA045_WriteConfiguration_Trigger   0x0000078d   Thumb Code   136  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_WriteConfiguration_Trigger)
    [Anonymous Symbol]                       0x0000078c   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_WriteConfiguration_Trigger)
    __arm_cp.5_0                             0x00000814   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_WriteConfiguration_Trigger)
    __arm_cp.5_1                             0x00000818   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_WriteConfiguration_Trigger)
    __arm_cp.5_2                             0x0000081c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_MBIA045_WriteConfiguration_Trigger)
    [Anonymous Symbol]                       0x00000820   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init)
    __arm_cp.1_0                             0x00000830   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init)
    __arm_cp.1_1                             0x00000834   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init)
    __arm_cp.1_2                             0x00000838   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init)
    [Anonymous Symbol]                       0x0000083c   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedDriverData_DeInit)
    __arm_cp.0_0                             0x00000864   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedDriverData_DeInit)
    [Anonymous Symbol]                       0x00000868   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init)
    __arm_cp.2_0                             0x00000978   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init)
    __arm_cp.2_1                             0x0000097c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init)
    __arm_cp.2_2                             0x00000980   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init)
    __arm_cp.2_3                             0x00000984   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init)
    __arm_cp.2_4                             0x00000988   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init)
    [Anonymous Symbol]                       0x0000098c   Section        0  MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init)
    __arm_cp.2_0                             0x00000a34   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init)
    __arm_cp.2_1                             0x00000a38   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init)
    [Anonymous Symbol]                       0x00000a3c   Section        0  MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit)
    __arm_cp.1_1                             0x00000ab4   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit)
    __arm_cp.1_2                             0x00000ab8   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit)
    __arm_cp.1_3                             0x00000abc   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit)
    [Anonymous Symbol]                       0x00000ac0   Section        0  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_0                             0x00000da4   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_1                             0x00000da8   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_2                             0x00000dac   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_3                             0x00000db0   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_4                             0x00000db4   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_5                             0x00000db8   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_6                             0x00000dbc   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    __arm_cp.3_7                             0x00000dc0   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    [Anonymous Symbol]                       0x00000dc4   Section        0  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_0                             0x00001068   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_1                             0x0000106c   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_2                             0x00001070   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_3                             0x00001074   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_4                             0x00001078   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_5                             0x0000107c   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_6                             0x00001080   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_7                             0x00001084   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_8                             0x00001088   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_9                             0x0000108c   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_10                            0x00001090   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_11                            0x00001094   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_12                            0x00001098   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_13                            0x0000109c   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_14                            0x000010a0   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    __arm_cp.5_15                            0x000010a4   Number         4  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    [Anonymous Symbol]                       0x000010a8   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_0                             0x000011f8   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_1                             0x000011fc   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_2                             0x00001200   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_3                             0x00001204   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_4                             0x00001208   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_5                             0x0000120c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_6                             0x00001210   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_7                             0x00001214   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_8                             0x00001218   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_9                             0x0000121c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_10                            0x00001220   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_11                            0x00001224   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_12                            0x00001228   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_13                            0x0000122c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    __arm_cp.6_14                            0x00001230   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    [Anonymous Symbol]                       0x00001234   Section        0  MG32x02z_CSC_Init.o(.text.CSC_IHRCO_Enable)
    [Anonymous Symbol]                       0x00001274   Section        0  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_0                             0x000014b4   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_1                             0x000014b8   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_2                             0x000014bc   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_3                             0x000014c0   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_4                             0x000014c4   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_5                             0x000014c8   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_6                             0x000014cc   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_7                             0x000014d0   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_8                             0x000014d4   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_9                             0x000014d8   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_10                            0x000014dc   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_11                            0x000014e0   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_12                            0x000014e4   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_13                            0x000014e8   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_14                            0x000014ec   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_15                            0x000014f0   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_16                            0x000014f4   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_17                            0x000014f8   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_18                            0x000014fc   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_19                            0x00001500   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_20                            0x00001504   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_21                            0x00001508   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_22                            0x0000150c   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_23                            0x00001510   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_24                            0x00001514   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_25                            0x00001518   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_26                            0x0000151c   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    __arm_cp.3_27                            0x00001520   Number         4  MG32x02z_CSC_Init.o(.text.CSC_Init)
    [Anonymous Symbol]                       0x00001524   Section        0  MG32x02z_ChipInit.o(.text.ChipInit)
    __arm_cp.0_0                             0x00001538   Number         4  MG32x02z_ChipInit.o(.text.ChipInit)
    [Anonymous Symbol]                       0x0000153c   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseDestinationAddress)
    [Anonymous Symbol]                       0x0000155a   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseSourceAddress)
    [Anonymous Symbol]                       0x00001578   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_BaseInitStructure_Init)
    [Anonymous Symbol]                       0x000015d4   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_Base_Init)
    [Anonymous Symbol]                       0x00001766   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_Channel_Cmd)
    [Anonymous Symbol]                       0x00001784   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_Cmd)
    __arm_cp.14_0                            0x000017a4   Number         4  MG32x02z_DMA_DRV.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x000017a8   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_Destination_Select)
    [Anonymous Symbol]                       0x000017c6   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_LoopMode_Cmd)
    [Anonymous Symbol]                       0x000017e4   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_SetBurstSize)
    [Anonymous Symbol]                       0x00001802   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_SetDestinationAddress)
    [Anonymous Symbol]                       0x00001812   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerMode)
    [Anonymous Symbol]                       0x00001830   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerPin)
    [Anonymous Symbol]                       0x0000184e   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_SetSourceAddress)
    [Anonymous Symbol]                       0x0000185e   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_SetTransferDataNumber)
    [Anonymous Symbol]                       0x0000186e   Section        0  MG32x02z_DMA_DRV.o(.text.DMA_Source_Select)
    [Anonymous Symbol]                       0x0000188c   Section        0  MG32x02z_GPIO_DRV.o(.text.GPIO_ClearPortBit)
    [Anonymous Symbol]                       0x000018a0   Section        0  MG32x02z_GPIO_Init.o(.text.GPIO_Init)
    __arm_cp.0_0                             0x000018d0   Number         4  MG32x02z_GPIO_Init.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x000018d4   Section        0  MG32x02z_GPIO_DRV.o(.text.GPIO_PortMode_Config)
    [Anonymous Symbol]                       0x00001986   Section        0  MG32x02z_GPIO_DRV.o(.text.GPIO_SetPortBit)
    [Anonymous Symbol]                       0x00001998   Section        0  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_0                             0x00001a50   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_1                             0x00001a54   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_2                             0x00001a58   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_3                             0x00001a5c   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_4                             0x00001a60   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_5                             0x00001a64   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_6                             0x00001a68   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_7                             0x00001a6c   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_8                             0x00001a70   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_9                             0x00001a74   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_10                            0x00001a78   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_11                            0x00001a7c   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_12                            0x00001a80   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_13                            0x00001a84   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_14                            0x00001a88   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_15                            0x00001a8c   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_16                            0x00001a90   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_17                            0x00001a94   Number         4  system_MG32x02z.o(.text.HardFault_Handler_C)
    [Anonymous Symbol]                       0x00001a98   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_0                             0x00001b70   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_1                             0x00001b74   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_2                             0x00001b78   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_3                             0x00001b7c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_4                             0x00001b80   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_5                             0x00001b84   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_6                             0x00001b88   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_7                             0x00001b8c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_8                             0x00001b90   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_9                             0x00001b94   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_10                            0x00001b98   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_11                            0x00001b9c   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    __arm_cp.7_12                            0x00001ba0   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    [Anonymous Symbol]                       0x00001ba4   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_ClearFlag)
    [Anonymous Symbol]                       0x00001bb4   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_ClearRxData)
    [Anonymous Symbol]                       0x00001bc6   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_ClearTxData)
    [Anonymous Symbol]                       0x00001bd8   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_ClockPhase_Select)
    [Anonymous Symbol]                       0x00001bf6   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_ClockPolarity_Select)
    [Anonymous Symbol]                       0x00001c14   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_Cmd)
    [Anonymous Symbol]                       0x00001c32   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_DataLineOutput_Cmd)
    [Anonymous Symbol]                       0x00001c5e   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_DataLine_Select)
    [Anonymous Symbol]                       0x00001c7c   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_DataSize_Select)
    [Anonymous Symbol]                       0x00001c9c   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_DeInit)
    __arm_cp.0_0                             0x00001cc4   Number         4  MG32x02z_SPI_DRV.o(.text.SPI_DeInit)
    __arm_cp.0_1                             0x00001cc8   Number         4  MG32x02z_SPI_DRV.o(.text.SPI_DeInit)
    [Anonymous Symbol]                       0x00001ccc   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_Divider_Select)
    [Anonymous Symbol]                       0x00001cea   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_FirstBit_Select)
    [Anonymous Symbol]                       0x00001d08   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_ITEA_Cmd)
    [Anonymous Symbol]                       0x00001d26   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_IT_Config)
    [Anonymous Symbol]                       0x00001d54   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_IdleStateDataMode_Select)
    [Anonymous Symbol]                       0x00001d72   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_LoopBackMode_Cmd)
    [Anonymous Symbol]                       0x00001d90   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_MasterDataOutIdleState_Select)
    [Anonymous Symbol]                       0x00001dac   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_ModeAndNss_Select)
    [Anonymous Symbol]                       0x00001dce   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_NssInputOutputSoftwareControl_Cmd)
    [Anonymous Symbol]                       0x00001dfe   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_PreDivider_Select)
    [Anonymous Symbol]                       0x00001e1c   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_Prescaler_Select)
    [Anonymous Symbol]                       0x00001e3a   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_SlaveAsynchronous_Cmd)
    [Anonymous Symbol]                       0x00001e58   Section        0  MG32x02z_SPI_DRV.o(.text.SPI_SlaveModeReceivedThreshold_Select)
    [Anonymous Symbol]                       0x00001e78   Section        0  system_MG32x02z.o(.text.SystemInit)
    __arm_cp.1_0                             0x00001e80   Number         4  system_MG32x02z.o(.text.SystemInit)
    __arm_cp.1_1                             0x00001e84   Number         4  system_MG32x02z.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00001e88   Section        0  MG32x02z_RGB_API.o(.text.TM10_IRQHandler)
    __arm_cp.6_0                             0x00001f08   Number         4  MG32x02z_RGB_API.o(.text.TM10_IRQHandler)
    [Anonymous Symbol]                       0x00001f0c   Section        0  MG32x02z_TM_DRV.o(.text.TM_CH1Function_Config)
    [Anonymous Symbol]                       0x00001f2e   Section        0  MG32x02z_TM_DRV.o(.text.TM_CH2Function_Config)
    [Anonymous Symbol]                       0x00001f50   Section        0  MG32x02z_TM_DRV.o(.text.TM_ClearFlag)
    [Anonymous Symbol]                       0x00001f60   Section        0  MG32x02z_TM_DRV.o(.text.TM_ControlPWM_Cmd)
    [Anonymous Symbol]                       0x00001f7e   Section        0  MG32x02z_TM_DRV.o(.text.TM_CounterClock_Select)
    [Anonymous Symbol]                       0x00001f9c   Section        0  MG32x02z_TM_DRV.o(.text.TM_Counter_Config)
    [Anonymous Symbol]                       0x00001fb8   Section        0  MG32x02z_TM_DRV.o(.text.TM_DeInit)
    __arm_cp.0_0                             0x00002030   Number         4  MG32x02z_TM_DRV.o(.text.TM_DeInit)
    [Anonymous Symbol]                       0x00002034   Section        0  MG32x02z_TM_DRV.o(.text.TM_ITEA_Cmd)
    [Anonymous Symbol]                       0x00002052   Section        0  MG32x02z_TM_DRV.o(.text.TM_IT_Config)
    [Anonymous Symbol]                       0x00002080   Section        0  MG32x02z_TM_DRV.o(.text.TM_InverseOC2N_Cmd)
    [Anonymous Symbol]                       0x000020a2   Section        0  MG32x02z_TM_DRV.o(.text.TM_OC10Output_Cmd)
    [Anonymous Symbol]                       0x000020c4   Section        0  MG32x02z_TM_DRV.o(.text.TM_OC1zOutputState_Init)
    [Anonymous Symbol]                       0x0000210a   Section        0  MG32x02z_TM_DRV.o(.text.TM_OC2NOutput_Cmd)
    [Anonymous Symbol]                       0x0000212c   Section        0  MG32x02z_TM_DRV.o(.text.TM_OC2OutputState_Init)
    [Anonymous Symbol]                       0x00002172   Section        0  MG32x02z_TM_DRV.o(.text.TM_PrescalerClock_Select)
    [Anonymous Symbol]                       0x0000218e   Section        0  MG32x02z_TM_DRV.o(.text.TM_Prescaler_Config)
    [Anonymous Symbol]                       0x000021aa   Section        0  MG32x02z_TM_DRV.o(.text.TM_RepetitionCounterClock_Select)
    [Anonymous Symbol]                       0x000021c8   Section        0  MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Cmd)
    [Anonymous Symbol]                       0x000021e6   Section        0  MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Config)
    [Anonymous Symbol]                       0x00002206   Section        0  MG32x02z_TM_DRV.o(.text.TM_SetCC1B)
    [Anonymous Symbol]                       0x0000221a   Section        0  MG32x02z_TM_DRV.o(.text.TM_SetCC2B)
    [Anonymous Symbol]                       0x0000222e   Section        0  MG32x02z_TM_DRV.o(.text.TM_SetCounterDirection)
    [Anonymous Symbol]                       0x0000224c   Section        0  MG32x02z_TM_DRV.o(.text.TM_SetInternalClockDivider)
    [Anonymous Symbol]                       0x0000226a   Section        0  MG32x02z_TM_DRV.o(.text.TM_SetPrescalerDirection)
    [Anonymous Symbol]                       0x00002286   Section        0  MG32x02z_TM_DRV.o(.text.TM_TRGICounter_Select)
    [Anonymous Symbol]                       0x000022a4   Section        0  MG32x02z_TM_DRV.o(.text.TM_TRGIPrescaler_Select)
    [Anonymous Symbol]                       0x000022c2   Section        0  MG32x02z_TM_DRV.o(.text.TM_TimeBaseStruct_Init)
    [Anonymous Symbol]                       0x000022ee   Section        0  MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init)
    [Anonymous Symbol]                       0x00002382   Section        0  MG32x02z_TM_DRV.o(.text.TM_TimerMode_Select)
    [Anonymous Symbol]                       0x000023a0   Section        0  MG32x02z_TM_DRV.o(.text.TM_Timer_Cmd)
    [Anonymous Symbol]                       0x000023cc   Section        0  MG32x02z_TM_DRV.o(.text.TM_TriggerSource_Select)
    [Anonymous Symbol]                       0x000023e8   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_0                             0x000024a4   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_1                             0x000024a8   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_2                             0x000024ac   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_3                             0x000024b0   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_4                             0x000024b4   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_5                             0x000024b8   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_6                             0x000024bc   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_7                             0x000024c0   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_8                             0x000024c4   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_9                             0x000024c8   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_10                            0x000024cc   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_11                            0x000024d0   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_12                            0x000024d4   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_13                            0x000024d8   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_14                            0x000024dc   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_15                            0x000024e0   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    __arm_cp.8_16                            0x000024e4   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    [Anonymous Symbol]                       0x000024e8   Section        0  MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Cmd)
    [Anonymous Symbol]                       0x00002508   Section        0  MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Config)
    __arm_cp.24_0                            0x00002550   Number         4  MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Config)
    [Anonymous Symbol]                       0x00002554   Section        0  MG32x02z_URT_DRV.o(.text.URT_Cmd)
    [Anonymous Symbol]                       0x00002576   Section        0  MG32x02z_URT_DRV.o(.text.URT_DataCharacter_Config)
    [Anonymous Symbol]                       0x000025d0   Section        0  MG32x02z_URT_DRV.o(.text.URT_ITEA_Cmd)
    [Anonymous Symbol]                       0x000025f2   Section        0  MG32x02z_URT_DRV.o(.text.URT_IT_Config)
    [Anonymous Symbol]                       0x00002612   Section        0  MG32x02z_URT_DRV.o(.text.URT_RXClockSource_Select)
    [Anonymous Symbol]                       0x0000262e   Section        0  MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingMode_Select)
    [Anonymous Symbol]                       0x00002650   Section        0  MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingSampleNumber_Select)
    [Anonymous Symbol]                       0x0000267e   Section        0  MG32x02z_URT_DRV.o(.text.URT_RX_Cmd)
    [Anonymous Symbol]                       0x000026a2   Section        0  MG32x02z_URT_DRV.o(.text.URT_TXClockSource_Select)
    [Anonymous Symbol]                       0x000026be   Section        0  MG32x02z_URT_DRV.o(.text.URT_TXInverse_Cmd)
    [Anonymous Symbol]                       0x000026e4   Section        0  MG32x02z_URT_DRV.o(.text.URT_TXOverSamplingSampleNumber_Select)
    [Anonymous Symbol]                       0x00002712   Section        0  MG32x02z_URT_DRV.o(.text.URT_TX_Cmd)
    __NVIC_EnableIRQ                         0x00002739   Thumb Code    40  MG32x02z_RGB_API.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002738   Section        0  MG32x02z_RGB_API.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002761   Thumb Code    40  MG32x02z_RGB_MBIA045_API.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002760   Section        0  MG32x02z_RGB_MBIA045_API.o(.text.__NVIC_EnableIRQ)
    __arm_cp.3_0                             0x00002788   Number         4  MG32x02z_RGB_MBIA045_API.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x0000278c   Section        0  main.o(.text.main)
    i.__0printf                              0x000027a4   Section        0  printfa.o(i.__0printf)
    i.__ARM_clz                              0x000027c4   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x000027f2   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00002800   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00002802   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x00002811   Thumb Code   344  printfa.o(i._fp_digits)
    i._fp_digits                             0x00002810   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x00002985   Thumb Code  1754  printfa.o(i._printf_core)
    i._printf_core                           0x00002984   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x00003071   Thumb Code    32  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x00003070   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x00003091   Thumb Code    44  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00003090   Section        0  printfa.o(i._printf_pre_padding)
    i.fputc                                  0x000030bc   Section        0  fputc.o(i.fputc)
    CSC_InitConfig                           0x0000341c   Data          80  MG32x02z_CSC_Init.o(.rodata.CSC_InitConfig)
    [Anonymous Symbol]                       0x0000341c   Section        0  MG32x02z_CSC_Init.o(.rodata.CSC_InitConfig)
    GPIO_CFG                                 0x0000346c   Data           4  MG32x02z_GPIO_Init.o(.rodata.GPIO_CFG)
    [Anonymous Symbol]                       0x0000346c   Section        0  MG32x02z_GPIO_Init.o(.rodata.GPIO_CFG)
    [Anonymous Symbol]                       0x00003470   Section        0  system_MG32x02z.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    LED_RainTable                            0x20000031   Data          17  MG32x02z_RGB_MBIA045_API.o(.data.LED_RainTable)
    [Anonymous Symbol]                       0x20000031   Section        0  MG32x02z_RGB_MBIA045_API.o(.data.LED_RainTable)
    API_KBRGB_BColorSceneryTable             0x200000d2   Data         138  MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable)
    [Anonymous Symbol]                       0x200000d2   Section        0  MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorSceneryTable)
    API_KBRGB_GColorSceneryTable             0x200001e6   Data         138  MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable)
    [Anonymous Symbol]                       0x200001e6   Section        0  MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorSceneryTable)
    API_KBRGB_RColorSceneryTable             0x200002fa   Data         138  MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable)
    [Anonymous Symbol]                       0x200002fa   Section        0  MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorSceneryTable)
    API_LED_UpdateDataBuf                    0x200005ac   Data          96  MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_UpdateDataBuf)
    [Anonymous Symbol]                       0x200005ac   Section        0  MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_UpdateDataBuf)
    API_LED_pUpdateDataBuf                   0x2000060c   Data           1  MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_pUpdateDataBuf)
    [Anonymous Symbol]                       0x2000060c   Section        0  MG32x02z_RGB_MBIA045_API.o(.bss.API_LED_pUpdateDataBuf)
    HardFault_Handler_C.stacked_lr           0x20000664   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_lr)
    [Anonymous Symbol]                       0x20000664   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_lr)
    HardFault_Handler_C.stacked_pc           0x20000668   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_pc)
    [Anonymous Symbol]                       0x20000668   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_pc)
    HardFault_Handler_C.stacked_psr          0x2000066c   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_psr)
    [Anonymous Symbol]                       0x2000066c   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_psr)
    HardFault_Handler_C.stacked_r0           0x20000670   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r0)
    [Anonymous Symbol]                       0x20000670   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r0)
    HardFault_Handler_C.stacked_r1           0x20000674   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r1)
    [Anonymous Symbol]                       0x20000674   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r1)
    HardFault_Handler_C.stacked_r12          0x20000678   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r12)
    [Anonymous Symbol]                       0x20000678   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r12)
    HardFault_Handler_C.stacked_r2           0x2000067c   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r2)
    [Anonymous Symbol]                       0x2000067c   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r2)
    HardFault_Handler_C.stacked_r3           0x20000680   Data           4  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r3)
    [Anonymous Symbol]                       0x20000680   Section        0  system_MG32x02z.o(.bss.HardFault_Handler_C.stacked_r3)
    LED_DataLatch_LastBit                    0x20000684   Data           1  MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_LastBit)
    [Anonymous Symbol]                       0x20000684   Section        0  MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_LastBit)
    LED_DataLatch_Tmp                        0x20000685   Data           1  MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_Tmp)
    [Anonymous Symbol]                       0x20000685   Section        0  MG32x02z_RGB_MBIA045_API.o(.bss.LED_DataLatch_Tmp)
    LED_RainCNT                              0x20000686   Data           1  MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainCNT)
    [Anonymous Symbol]                       0x20000686   Section        0  MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainCNT)
    LED_RainDelay                            0x20000687   Data           1  MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainDelay)
    [Anonymous Symbol]                       0x20000687   Section        0  MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainDelay)
    LED_RainUpdateEvent                      0x20000688   Data           1  MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainUpdateEvent)
    [Anonymous Symbol]                       0x20000688   Section        0  MG32x02z_RGB_MBIA045_API.o(.bss.LED_RainUpdateEvent)
    STACK                                    0x20000690   Section     1024  startup_MG32x02z.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_MG32x02z.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_MG32x02z.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_MG32x02z.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    MG32x02z_IEC60730_MANAGER                0x000000d5   Thumb Code     0  startup_MG32x02z.o(.text)
    ReInitial_Stack                          0x000000d5   Thumb Code     6  startup_MG32x02z.o(.text)
    Reset_Handler                            0x000000db   Thumb Code     8  startup_MG32x02z.o(.text)
    NMI_Handler                              0x000000e3   Thumb Code     2  startup_MG32x02z.o(.text)
    HardFault_Handler                        0x000000e5   Thumb Code    24  startup_MG32x02z.o(.text)
    SVC_Handler                              0x000000fd   Thumb Code     2  startup_MG32x02z.o(.text)
    PendSV_Handler                           0x000000ff   Thumb Code     2  startup_MG32x02z.o(.text)
    SysTick_Handler                          0x00000101   Thumb Code     2  startup_MG32x02z.o(.text)
    ADC_IRQHandler                           0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    APX_IRQHandler                           0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    COMP_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    DAC_IRQHandler                           0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    DMA_IRQHandler                           0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    EXINT0_IRQHandler                        0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    EXINT1_IRQHandler                        0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    EXINT2_IRQHandler                        0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    EXINT3_IRQHandler                        0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    I2C0_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    I2Cx_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    SPIx_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    SYS_IRQHandler                           0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    TM0x_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    TM1x_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    TM20_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    TM2x_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    TM3x_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    URT0_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    URT4x_IRQHandler                         0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    USB_IRQHandler                           0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    WWDT_IRQHandler                          0x00000103   Thumb Code     0  startup_MG32x02z.o(.text)
    __aeabi_memset                           0x00000111   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000111   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000111   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0000011f   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0000011f   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0000011f   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000123   Thumb Code    18  memseta.o(.text)
    __aeabi_dadd                             0x00000135   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x0000027d   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x00000289   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x00000299   Thumb Code   202  dmul.o(.text)
    __aeabi_uidiv                            0x00000369   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x00000369   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_uldivmod                         0x000003a7   Thumb Code    96  uldiv.o(.text)
    __aeabi_llsl                             0x00000407   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x00000407   Thumb Code     0  llshl.o(.text)
    __aeabi_lasr                             0x00000427   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x00000427   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x0000044d   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x0000044d   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x00000467   Thumb Code   164  depilogue.o(.text)
    __aeabi_ddiv                             0x0000050d   Thumb Code   234  ddiv.o(.text)
    __aeabi_d2ulz                            0x000005fd   Thumb Code    54  dfixul.o(.text)
    __aeabi_cdrcmple                         0x0000063d   Thumb Code    38  cdrcmple.o(.text)
    __scatterload                            0x00000665   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000665   Thumb Code     0  init.o(.text)
    __aeabi_llsr                             0x00000695   Thumb Code    34  llushr.o(.text)
    __semihosting_library_function           0x00000695   Thumb Code     0  semi.o(.text)
    _ll_ushift_r                             0x00000695   Thumb Code     0  llushr.o(.text)
    __I$use$semihosting$fputc                0x000006b7   Thumb Code     0  iusesemip.o(.text)
    API_AllRGB_OFF                           0x000006b9   Thumb Code    24  MG32x02z_RGB_API.o(.text.API_AllRGB_OFF)
    API_RGBLedControlParameter_Init          0x00000821   Thumb Code    16  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedControlParameter_Init)
    API_RGBLedDriverData_DeInit              0x0000083d   Thumb Code    40  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLedDriverData_DeInit)
    API_RGBLed_Init                          0x00000869   Thumb Code   272  MG32x02z_RGB_MBIA045_API.o(.text.API_RGBLed_Init)
    API_RGB_ControlParameter_Init            0x0000098d   Thumb Code   168  MG32x02z_RGB_API.o(.text.API_RGB_ControlParameter_Init)
    API_RGB_Data_DeInit                      0x00000a3d   Thumb Code   120  MG32x02z_RGB_API.o(.text.API_RGB_Data_DeInit)
    API_RGB_Init                             0x00000ac1   Thumb Code   740  MG32x02z_RGB_API.o(.text.API_RGB_Init)
    API_RGB_Mode_Config                      0x00000dc5   Thumb Code   676  MG32x02z_RGB_API.o(.text.API_RGB_Mode_Config)
    API_RGB_UpdateDataTrigger                0x000010a9   Thumb Code   336  MG32x02z_RGB_MBIA045_API.o(.text.API_RGB_UpdateDataTrigger)
    CSC_IHRCO_Enable                         0x00001235   Thumb Code    64  MG32x02z_CSC_Init.o(.text.CSC_IHRCO_Enable)
    CSC_Init                                 0x00001275   Thumb Code   576  MG32x02z_CSC_Init.o(.text.CSC_Init)
    ChipInit                                 0x00001525   Thumb Code    20  MG32x02z_ChipInit.o(.text.ChipInit)
    DMA_AutoIncreaseDestinationAddress       0x0000153d   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseDestinationAddress)
    DMA_AutoIncreaseSourceAddress            0x0000155b   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_AutoIncreaseSourceAddress)
    DMA_BaseInitStructure_Init               0x00001579   Thumb Code    92  MG32x02z_DMA_DRV.o(.text.DMA_BaseInitStructure_Init)
    DMA_Base_Init                            0x000015d5   Thumb Code   402  MG32x02z_DMA_DRV.o(.text.DMA_Base_Init)
    DMA_Channel_Cmd                          0x00001767   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_Channel_Cmd)
    DMA_Cmd                                  0x00001785   Thumb Code    32  MG32x02z_DMA_DRV.o(.text.DMA_Cmd)
    DMA_Destination_Select                   0x000017a9   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_Destination_Select)
    DMA_LoopMode_Cmd                         0x000017c7   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_LoopMode_Cmd)
    DMA_SetBurstSize                         0x000017e5   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_SetBurstSize)
    DMA_SetDestinationAddress                0x00001803   Thumb Code    16  MG32x02z_DMA_DRV.o(.text.DMA_SetDestinationAddress)
    DMA_SetExtTriggerMode                    0x00001813   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerMode)
    DMA_SetExtTriggerPin                     0x00001831   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_SetExtTriggerPin)
    DMA_SetSourceAddress                     0x0000184f   Thumb Code    16  MG32x02z_DMA_DRV.o(.text.DMA_SetSourceAddress)
    DMA_SetTransferDataNumber                0x0000185f   Thumb Code    16  MG32x02z_DMA_DRV.o(.text.DMA_SetTransferDataNumber)
    DMA_Source_Select                        0x0000186f   Thumb Code    30  MG32x02z_DMA_DRV.o(.text.DMA_Source_Select)
    GPIO_ClearPortBit                        0x0000188d   Thumb Code    18  MG32x02z_GPIO_DRV.o(.text.GPIO_ClearPortBit)
    GPIO_Init                                0x000018a1   Thumb Code    48  MG32x02z_GPIO_Init.o(.text.GPIO_Init)
    GPIO_PortMode_Config                     0x000018d5   Thumb Code   178  MG32x02z_GPIO_DRV.o(.text.GPIO_PortMode_Config)
    GPIO_SetPortBit                          0x00001987   Thumb Code    18  MG32x02z_GPIO_DRV.o(.text.GPIO_SetPortBit)
    HardFault_Handler_C                      0x00001999   Thumb Code   184  system_MG32x02z.o(.text.HardFault_Handler_C)
    SPI0_IRQHandler                          0x00001a99   Thumb Code   216  MG32x02z_RGB_MBIA045_API.o(.text.SPI0_IRQHandler)
    SPI_ClearFlag                            0x00001ba5   Thumb Code    16  MG32x02z_SPI_DRV.o(.text.SPI_ClearFlag)
    SPI_ClearRxData                          0x00001bb5   Thumb Code    18  MG32x02z_SPI_DRV.o(.text.SPI_ClearRxData)
    SPI_ClearTxData                          0x00001bc7   Thumb Code    18  MG32x02z_SPI_DRV.o(.text.SPI_ClearTxData)
    SPI_ClockPhase_Select                    0x00001bd9   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_ClockPhase_Select)
    SPI_ClockPolarity_Select                 0x00001bf7   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_ClockPolarity_Select)
    SPI_Cmd                                  0x00001c15   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_Cmd)
    SPI_DataLineOutput_Cmd                   0x00001c33   Thumb Code    44  MG32x02z_SPI_DRV.o(.text.SPI_DataLineOutput_Cmd)
    SPI_DataLine_Select                      0x00001c5f   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_DataLine_Select)
    SPI_DataSize_Select                      0x00001c7d   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_DataSize_Select)
    SPI_DeInit                               0x00001c9d   Thumb Code    40  MG32x02z_SPI_DRV.o(.text.SPI_DeInit)
    SPI_Divider_Select                       0x00001ccd   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_Divider_Select)
    SPI_FirstBit_Select                      0x00001ceb   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_FirstBit_Select)
    SPI_ITEA_Cmd                             0x00001d09   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_ITEA_Cmd)
    SPI_IT_Config                            0x00001d27   Thumb Code    46  MG32x02z_SPI_DRV.o(.text.SPI_IT_Config)
    SPI_IdleStateDataMode_Select             0x00001d55   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_IdleStateDataMode_Select)
    SPI_LoopBackMode_Cmd                     0x00001d73   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_LoopBackMode_Cmd)
    SPI_MasterDataOutIdleState_Select        0x00001d91   Thumb Code    28  MG32x02z_SPI_DRV.o(.text.SPI_MasterDataOutIdleState_Select)
    SPI_ModeAndNss_Select                    0x00001dad   Thumb Code    34  MG32x02z_SPI_DRV.o(.text.SPI_ModeAndNss_Select)
    SPI_NssInputOutputSoftwareControl_Cmd    0x00001dcf   Thumb Code    48  MG32x02z_SPI_DRV.o(.text.SPI_NssInputOutputSoftwareControl_Cmd)
    SPI_PreDivider_Select                    0x00001dff   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_PreDivider_Select)
    SPI_Prescaler_Select                     0x00001e1d   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_Prescaler_Select)
    SPI_SlaveAsynchronous_Cmd                0x00001e3b   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_SlaveAsynchronous_Cmd)
    SPI_SlaveModeReceivedThreshold_Select    0x00001e59   Thumb Code    30  MG32x02z_SPI_DRV.o(.text.SPI_SlaveModeReceivedThreshold_Select)
    SystemInit                               0x00001e79   Thumb Code     8  system_MG32x02z.o(.text.SystemInit)
    TM10_IRQHandler                          0x00001e89   Thumb Code   128  MG32x02z_RGB_API.o(.text.TM10_IRQHandler)
    TM_CH1Function_Config                    0x00001f0d   Thumb Code    34  MG32x02z_TM_DRV.o(.text.TM_CH1Function_Config)
    TM_CH2Function_Config                    0x00001f2f   Thumb Code    34  MG32x02z_TM_DRV.o(.text.TM_CH2Function_Config)
    TM_ClearFlag                             0x00001f51   Thumb Code    16  MG32x02z_TM_DRV.o(.text.TM_ClearFlag)
    TM_ControlPWM_Cmd                        0x00001f61   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_ControlPWM_Cmd)
    TM_CounterClock_Select                   0x00001f7f   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_CounterClock_Select)
    TM_Counter_Config                        0x00001f9d   Thumb Code    28  MG32x02z_TM_DRV.o(.text.TM_Counter_Config)
    TM_DeInit                                0x00001fb9   Thumb Code   120  MG32x02z_TM_DRV.o(.text.TM_DeInit)
    TM_ITEA_Cmd                              0x00002035   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_ITEA_Cmd)
    TM_IT_Config                             0x00002053   Thumb Code    46  MG32x02z_TM_DRV.o(.text.TM_IT_Config)
    TM_InverseOC2N_Cmd                       0x00002081   Thumb Code    34  MG32x02z_TM_DRV.o(.text.TM_InverseOC2N_Cmd)
    TM_OC10Output_Cmd                        0x000020a3   Thumb Code    34  MG32x02z_TM_DRV.o(.text.TM_OC10Output_Cmd)
    TM_OC1zOutputState_Init                  0x000020c5   Thumb Code    70  MG32x02z_TM_DRV.o(.text.TM_OC1zOutputState_Init)
    TM_OC2NOutput_Cmd                        0x0000210b   Thumb Code    34  MG32x02z_TM_DRV.o(.text.TM_OC2NOutput_Cmd)
    TM_OC2OutputState_Init                   0x0000212d   Thumb Code    70  MG32x02z_TM_DRV.o(.text.TM_OC2OutputState_Init)
    TM_PrescalerClock_Select                 0x00002173   Thumb Code    28  MG32x02z_TM_DRV.o(.text.TM_PrescalerClock_Select)
    TM_Prescaler_Config                      0x0000218f   Thumb Code    28  MG32x02z_TM_DRV.o(.text.TM_Prescaler_Config)
    TM_RepetitionCounterClock_Select         0x000021ab   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_RepetitionCounterClock_Select)
    TM_RepetitionCounter_Cmd                 0x000021c9   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Cmd)
    TM_RepetitionCounter_Config              0x000021e7   Thumb Code    32  MG32x02z_TM_DRV.o(.text.TM_RepetitionCounter_Config)
    TM_SetCC1B                               0x00002207   Thumb Code    20  MG32x02z_TM_DRV.o(.text.TM_SetCC1B)
    TM_SetCC2B                               0x0000221b   Thumb Code    20  MG32x02z_TM_DRV.o(.text.TM_SetCC2B)
    TM_SetCounterDirection                   0x0000222f   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_SetCounterDirection)
    TM_SetInternalClockDivider               0x0000224d   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_SetInternalClockDivider)
    TM_SetPrescalerDirection                 0x0000226b   Thumb Code    28  MG32x02z_TM_DRV.o(.text.TM_SetPrescalerDirection)
    TM_TRGICounter_Select                    0x00002287   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_TRGICounter_Select)
    TM_TRGIPrescaler_Select                  0x000022a5   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_TRGIPrescaler_Select)
    TM_TimeBaseStruct_Init                   0x000022c3   Thumb Code    44  MG32x02z_TM_DRV.o(.text.TM_TimeBaseStruct_Init)
    TM_TimeBase_Init                         0x000022ef   Thumb Code   148  MG32x02z_TM_DRV.o(.text.TM_TimeBase_Init)
    TM_TimerMode_Select                      0x00002383   Thumb Code    30  MG32x02z_TM_DRV.o(.text.TM_TimerMode_Select)
    TM_Timer_Cmd                             0x000023a1   Thumb Code    44  MG32x02z_TM_DRV.o(.text.TM_Timer_Cmd)
    TM_TriggerSource_Select                  0x000023cd   Thumb Code    28  MG32x02z_TM_DRV.o(.text.TM_TriggerSource_Select)
    URT123_IRQHandler                        0x000023e9   Thumb Code   188  MG32x02z_RGB_MBIA045_API.o(.text.URT123_IRQHandler)
    URT_BaudRateGenerator_Cmd                0x000024e9   Thumb Code    32  MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Cmd)
    URT_BaudRateGenerator_Config             0x00002509   Thumb Code    72  MG32x02z_URT_DRV.o(.text.URT_BaudRateGenerator_Config)
    URT_Cmd                                  0x00002555   Thumb Code    34  MG32x02z_URT_DRV.o(.text.URT_Cmd)
    URT_DataCharacter_Config                 0x00002577   Thumb Code    90  MG32x02z_URT_DRV.o(.text.URT_DataCharacter_Config)
    URT_ITEA_Cmd                             0x000025d1   Thumb Code    34  MG32x02z_URT_DRV.o(.text.URT_ITEA_Cmd)
    URT_IT_Config                            0x000025f3   Thumb Code    32  MG32x02z_URT_DRV.o(.text.URT_IT_Config)
    URT_RXClockSource_Select                 0x00002613   Thumb Code    28  MG32x02z_URT_DRV.o(.text.URT_RXClockSource_Select)
    URT_RXOverSamplingMode_Select            0x0000262f   Thumb Code    34  MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingMode_Select)
    URT_RXOverSamplingSampleNumber_Select    0x00002651   Thumb Code    46  MG32x02z_URT_DRV.o(.text.URT_RXOverSamplingSampleNumber_Select)
    URT_RX_Cmd                               0x0000267f   Thumb Code    36  MG32x02z_URT_DRV.o(.text.URT_RX_Cmd)
    URT_TXClockSource_Select                 0x000026a3   Thumb Code    28  MG32x02z_URT_DRV.o(.text.URT_TXClockSource_Select)
    URT_TXInverse_Cmd                        0x000026bf   Thumb Code    38  MG32x02z_URT_DRV.o(.text.URT_TXInverse_Cmd)
    URT_TXOverSamplingSampleNumber_Select    0x000026e5   Thumb Code    46  MG32x02z_URT_DRV.o(.text.URT_TXOverSamplingSampleNumber_Select)
    URT_TX_Cmd                               0x00002713   Thumb Code    36  MG32x02z_URT_DRV.o(.text.URT_TX_Cmd)
    main                                     0x0000278d   Thumb Code    24  main.o(.text.main)
    __0printf                                0x000027a5   Thumb Code    24  printfa.o(i.__0printf)
    __1printf                                0x000027a5   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x000027a5   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x000027a5   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x000027a5   Thumb Code     0  printfa.o(i.__0printf)
    __ARM_clz                                0x000027c5   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x000027f3   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00002801   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00002803   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x000030bd   Thumb Code    18  fputc.o(i.fputc)
    API_KBRGBDefault_BColorTable             0x000030ce   Data         276  MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDefault_BColorTable)
    API_KBRGBDefault_GColorTable             0x000031e2   Data         276  MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDefault_GColorTable)
    API_KBRGBDefault_RColorTable             0x000032f6   Data         276  MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDefault_RColorTable)
    API_KBRGBDemo_BColorTable                0x0000340a   Data           6  MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDemo_BColorTable)
    API_KBRGBDemo_GColorTable                0x00003410   Data           6  MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDemo_GColorTable)
    API_KBRGBDemo_RColorTable                0x00003416   Data           6  MG32x02z_RGBTable_API.o(.rodata.API_KBRGBDemo_RColorTable)
    Region$$Table$$Base                      0x00003528   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003548   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    API_RGB_DOT_TABLE                        0x20000004   Data          45  MG32x02z_RGBTable_API.o(.data.API_RGB_DOT_TABLE)
    SystemCoreClock                          0x20000044   Data           4  system_MG32x02z.o(.data.SystemCoreClock)
    API_KBRGB_BColorScenery                  0x20000048   Data         138  MG32x02z_RGB_API.o(.bss.API_KBRGB_BColorScenery)
    API_KBRGB_GColorScenery                  0x2000015c   Data         138  MG32x02z_RGB_API.o(.bss.API_KBRGB_GColorScenery)
    API_KBRGB_RColorScenery                  0x20000270   Data         138  MG32x02z_RGB_API.o(.bss.API_KBRGB_RColorScenery)
    API_KB_ActDrama                          0x20000384   Data         552  MG32x02z_RGB_API.o(.bss.API_KB_ActDrama)
    API_RGB_CTR                              0x20000610   Data          84  MG32x02z_RGB_API.o(.bss.API_RGB_CTR)
    __initial_sp                             0x20000a90   Data           0  startup_MG32x02z.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003590, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003548, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO            3    RESET               startup_MG32x02z.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         2168  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         2223    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         2226    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2228    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2230    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         2231    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2233    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2235    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         2224    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x0000003c   Code   RO            4    .text               startup_MG32x02z.o
    0x00000110   0x00000110   0x00000024   Code   RO         2177    .text               mc_p.l(memseta.o)
    0x00000134   0x00000134   0x00000164   Code   RO         2209    .text               mf_p.l(dadd.o)
    0x00000298   0x00000298   0x000000d0   Code   RO         2211    .text               mf_p.l(dmul.o)
    0x00000368   0x00000368   0x0000003e   Code   RO         2244    .text               mc_p.l(uidiv_div0.o)
    0x000003a6   0x000003a6   0x00000060   Code   RO         2250    .text               mc_p.l(uldiv.o)
    0x00000406   0x00000406   0x00000020   Code   RO         2252    .text               mc_p.l(llshl.o)
    0x00000426   0x00000426   0x00000026   Code   RO         2254    .text               mc_p.l(llsshr.o)
    0x0000044c   0x0000044c   0x00000000   Code   RO         2256    .text               mc_p.l(iusefp.o)
    0x0000044c   0x0000044c   0x000000be   Code   RO         2257    .text               mf_p.l(depilogue.o)
    0x0000050a   0x0000050a   0x00000002   PAD
    0x0000050c   0x0000050c   0x000000f0   Code   RO         2261    .text               mf_p.l(ddiv.o)
    0x000005fc   0x000005fc   0x00000040   Code   RO         2263    .text               mf_p.l(dfixul.o)
    0x0000063c   0x0000063c   0x00000028   Code   RO         2265    .text               mf_p.l(cdrcmple.o)
    0x00000664   0x00000664   0x00000030   Code   RO         2267    .text               mc_p.l(init.o)
    0x00000694   0x00000694   0x00000000   Code   RO         2269    .text               mc_p.l(semi.o)
    0x00000694   0x00000694   0x00000022   Code   RO         2270    .text               mc_p.l(llushr.o)
    0x000006b6   0x000006b6   0x00000000   Code   RO         2272    .text               mc_p.l(iusesemip.o)
    0x000006b6   0x000006b6   0x00000002   PAD
    0x000006b8   0x000006b8   0x00000024   Code   RO         2061    .text.API_AllRGB_OFF  MG32x02z_RGB_API.o
    0x000006dc   0x000006dc   0x00000030   Code   RO         2126    .text.API_MBIA045_EnableWriteConfiguration_Trigger  MG32x02z_RGB_MBIA045_API.o
    0x0000070c   0x0000070c   0x00000080   Code   RO         2136    .text.API_MBIA045_GlobalLatch_Trigger  MG32x02z_RGB_MBIA045_API.o
    0x0000078c   0x0000078c   0x00000094   Code   RO         2128    .text.API_MBIA045_WriteConfiguration_Trigger  MG32x02z_RGB_MBIA045_API.o
    0x00000820   0x00000820   0x0000001c   Code   RO         2120    .text.API_RGBLedControlParameter_Init  MG32x02z_RGB_MBIA045_API.o
    0x0000083c   0x0000083c   0x0000002c   Code   RO         2118    .text.API_RGBLedDriverData_DeInit  MG32x02z_RGB_MBIA045_API.o
    0x00000868   0x00000868   0x00000124   Code   RO         2122    .text.API_RGBLed_Init  MG32x02z_RGB_MBIA045_API.o
    0x0000098c   0x0000098c   0x000000b0   Code   RO         2065    .text.API_RGB_ControlParameter_Init  MG32x02z_RGB_API.o
    0x00000a3c   0x00000a3c   0x00000084   Code   RO         2063    .text.API_RGB_Data_DeInit  MG32x02z_RGB_API.o
    0x00000ac0   0x00000ac0   0x00000304   Code   RO         2067    .text.API_RGB_Init  MG32x02z_RGB_API.o
    0x00000dc4   0x00000dc4   0x000002e4   Code   RO         2071    .text.API_RGB_Mode_Config  MG32x02z_RGB_API.o
    0x000010a8   0x000010a8   0x0000018c   Code   RO         2130    .text.API_RGB_UpdateDataTrigger  MG32x02z_RGB_MBIA045_API.o
    0x00001234   0x00001234   0x00000040   Code   RO         1981    .text.CSC_IHRCO_Enable  MG32x02z_CSC_Init.o
    0x00001274   0x00001274   0x000002b0   Code   RO         1987    .text.CSC_Init      MG32x02z_CSC_Init.o
    0x00001524   0x00001524   0x00000018   Code   RO         1997    .text.ChipInit      MG32x02z_ChipInit.o
    0x0000153c   0x0000153c   0x0000001e   Code   RO          506    .text.DMA_AutoIncreaseDestinationAddress  MG32x02z_DMA_DRV.o
    0x0000155a   0x0000155a   0x0000001e   Code   RO          504    .text.DMA_AutoIncreaseSourceAddress  MG32x02z_DMA_DRV.o
    0x00001578   0x00001578   0x0000005c   Code   RO          494    .text.DMA_BaseInitStructure_Init  MG32x02z_DMA_DRV.o
    0x000015d4   0x000015d4   0x00000192   Code   RO          496    .text.DMA_Base_Init  MG32x02z_DMA_DRV.o
    0x00001766   0x00001766   0x0000001e   Code   RO          532    .text.DMA_Channel_Cmd  MG32x02z_DMA_DRV.o
    0x00001784   0x00001784   0x00000024   Code   RO          520    .text.DMA_Cmd       MG32x02z_DMA_DRV.o
    0x000017a8   0x000017a8   0x0000001e   Code   RO          510    .text.DMA_Destination_Select  MG32x02z_DMA_DRV.o
    0x000017c6   0x000017c6   0x0000001e   Code   RO          502    .text.DMA_LoopMode_Cmd  MG32x02z_DMA_DRV.o
    0x000017e4   0x000017e4   0x0000001e   Code   RO          512    .text.DMA_SetBurstSize  MG32x02z_DMA_DRV.o
    0x00001802   0x00001802   0x00000010   Code   RO          518    .text.DMA_SetDestinationAddress  MG32x02z_DMA_DRV.o
    0x00001812   0x00001812   0x0000001e   Code   RO          500    .text.DMA_SetExtTriggerMode  MG32x02z_DMA_DRV.o
    0x00001830   0x00001830   0x0000001e   Code   RO          498    .text.DMA_SetExtTriggerPin  MG32x02z_DMA_DRV.o
    0x0000184e   0x0000184e   0x00000010   Code   RO          516    .text.DMA_SetSourceAddress  MG32x02z_DMA_DRV.o
    0x0000185e   0x0000185e   0x00000010   Code   RO          514    .text.DMA_SetTransferDataNumber  MG32x02z_DMA_DRV.o
    0x0000186e   0x0000186e   0x0000001e   Code   RO          508    .text.DMA_Source_Select  MG32x02z_DMA_DRV.o
    0x0000188c   0x0000188c   0x00000012   Code   RO          685    .text.GPIO_ClearPortBit  MG32x02z_GPIO_DRV.o
    0x0000189e   0x0000189e   0x00000002   PAD
    0x000018a0   0x000018a0   0x00000034   Code   RO         2005    .text.GPIO_Init     MG32x02z_GPIO_Init.o
    0x000018d4   0x000018d4   0x000000b2   Code   RO          661    .text.GPIO_PortMode_Config  MG32x02z_GPIO_DRV.o
    0x00001986   0x00001986   0x00000012   Code   RO          683    .text.GPIO_SetPortBit  MG32x02z_GPIO_DRV.o
    0x00001998   0x00001998   0x00000100   Code   RO         2018    .text.HardFault_Handler_C  system_MG32x02z.o
    0x00001a98   0x00001a98   0x0000010c   Code   RO         2132    .text.SPI0_IRQHandler  MG32x02z_RGB_MBIA045_API.o
    0x00001ba4   0x00001ba4   0x00000010   Code   RO         1155    .text.SPI_ClearFlag  MG32x02z_SPI_DRV.o
    0x00001bb4   0x00001bb4   0x00000012   Code   RO         1099    .text.SPI_ClearRxData  MG32x02z_SPI_DRV.o
    0x00001bc6   0x00001bc6   0x00000012   Code   RO         1105    .text.SPI_ClearTxData  MG32x02z_SPI_DRV.o
    0x00001bd8   0x00001bd8   0x0000001e   Code   RO         1091    .text.SPI_ClockPhase_Select  MG32x02z_SPI_DRV.o
    0x00001bf6   0x00001bf6   0x0000001e   Code   RO         1093    .text.SPI_ClockPolarity_Select  MG32x02z_SPI_DRV.o
    0x00001c14   0x00001c14   0x0000001e   Code   RO         1087    .text.SPI_Cmd       MG32x02z_SPI_DRV.o
    0x00001c32   0x00001c32   0x0000002c   Code   RO         1121    .text.SPI_DataLineOutput_Cmd  MG32x02z_SPI_DRV.o
    0x00001c5e   0x00001c5e   0x0000001e   Code   RO         1119    .text.SPI_DataLine_Select  MG32x02z_SPI_DRV.o
    0x00001c7c   0x00001c7c   0x0000001e   Code   RO         1117    .text.SPI_DataSize_Select  MG32x02z_SPI_DRV.o
    0x00001c9a   0x00001c9a   0x00000002   PAD
    0x00001c9c   0x00001c9c   0x00000030   Code   RO         1047    .text.SPI_DeInit    MG32x02z_SPI_DRV.o
    0x00001ccc   0x00001ccc   0x0000001e   Code   RO         1055    .text.SPI_Divider_Select  MG32x02z_SPI_DRV.o
    0x00001cea   0x00001cea   0x0000001e   Code   RO         1095    .text.SPI_FirstBit_Select  MG32x02z_SPI_DRV.o
    0x00001d08   0x00001d08   0x0000001e   Code   RO         1159    .text.SPI_ITEA_Cmd  MG32x02z_SPI_DRV.o
    0x00001d26   0x00001d26   0x0000002e   Code   RO         1157    .text.SPI_IT_Config  MG32x02z_SPI_DRV.o
    0x00001d54   0x00001d54   0x0000001e   Code   RO         1137    .text.SPI_IdleStateDataMode_Select  MG32x02z_SPI_DRV.o
    0x00001d72   0x00001d72   0x0000001e   Code   RO         1133    .text.SPI_LoopBackMode_Cmd  MG32x02z_SPI_DRV.o
    0x00001d90   0x00001d90   0x0000001c   Code   RO         1165    .text.SPI_MasterDataOutIdleState_Select  MG32x02z_SPI_DRV.o
    0x00001dac   0x00001dac   0x00000022   Code   RO         1063    .text.SPI_ModeAndNss_Select  MG32x02z_SPI_DRV.o
    0x00001dce   0x00001dce   0x00000030   Code   RO         1075    .text.SPI_NssInputOutputSoftwareControl_Cmd  MG32x02z_SPI_DRV.o
    0x00001dfe   0x00001dfe   0x0000001e   Code   RO         1051    .text.SPI_PreDivider_Select  MG32x02z_SPI_DRV.o
    0x00001e1c   0x00001e1c   0x0000001e   Code   RO         1053    .text.SPI_Prescaler_Select  MG32x02z_SPI_DRV.o
    0x00001e3a   0x00001e3a   0x0000001e   Code   RO         1163    .text.SPI_SlaveAsynchronous_Cmd  MG32x02z_SPI_DRV.o
    0x00001e58   0x00001e58   0x0000001e   Code   RO         1115    .text.SPI_SlaveModeReceivedThreshold_Select  MG32x02z_SPI_DRV.o
    0x00001e76   0x00001e76   0x00000002   PAD
    0x00001e78   0x00001e78   0x00000010   Code   RO         2016    .text.SystemInit    system_MG32x02z.o
    0x00001e88   0x00001e88   0x00000084   Code   RO         2073    .text.TM10_IRQHandler  MG32x02z_RGB_API.o
    0x00001f0c   0x00001f0c   0x00000022   Code   RO         1387    .text.TM_CH1Function_Config  MG32x02z_TM_DRV.o
    0x00001f2e   0x00001f2e   0x00000022   Code   RO         1389    .text.TM_CH2Function_Config  MG32x02z_TM_DRV.o
    0x00001f50   0x00001f50   0x00000010   Code   RO         1511    .text.TM_ClearFlag  MG32x02z_TM_DRV.o
    0x00001f60   0x00001f60   0x0000001e   Code   RO         1493    .text.TM_ControlPWM_Cmd  MG32x02z_TM_DRV.o
    0x00001f7e   0x00001f7e   0x0000001e   Code   RO         1205    .text.TM_CounterClock_Select  MG32x02z_TM_DRV.o
    0x00001f9c   0x00001f9c   0x0000001c   Code   RO         1201    .text.TM_Counter_Config  MG32x02z_TM_DRV.o
    0x00001fb8   0x00001fb8   0x0000007c   Code   RO         1193    .text.TM_DeInit     MG32x02z_TM_DRV.o
    0x00002034   0x00002034   0x0000001e   Code   RO         1505    .text.TM_ITEA_Cmd   MG32x02z_TM_DRV.o
    0x00002052   0x00002052   0x0000002e   Code   RO         1503    .text.TM_IT_Config  MG32x02z_TM_DRV.o
    0x00002080   0x00002080   0x00000022   Code   RO         1335    .text.TM_InverseOC2N_Cmd  MG32x02z_TM_DRV.o
    0x000020a2   0x000020a2   0x00000022   Code   RO         1311    .text.TM_OC10Output_Cmd  MG32x02z_TM_DRV.o
    0x000020c4   0x000020c4   0x00000046   Code   RO         1305    .text.TM_OC1zOutputState_Init  MG32x02z_TM_DRV.o
    0x0000210a   0x0000210a   0x00000022   Code   RO         1337    .text.TM_OC2NOutput_Cmd  MG32x02z_TM_DRV.o
    0x0000212c   0x0000212c   0x00000046   Code   RO         1329    .text.TM_OC2OutputState_Init  MG32x02z_TM_DRV.o
    0x00002172   0x00002172   0x0000001c   Code   RO         1207    .text.TM_PrescalerClock_Select  MG32x02z_TM_DRV.o
    0x0000218e   0x0000218e   0x0000001c   Code   RO         1199    .text.TM_Prescaler_Config  MG32x02z_TM_DRV.o
    0x000021aa   0x000021aa   0x0000001e   Code   RO         1497    .text.TM_RepetitionCounterClock_Select  MG32x02z_TM_DRV.o
    0x000021c8   0x000021c8   0x0000001e   Code   RO         1491    .text.TM_RepetitionCounter_Cmd  MG32x02z_TM_DRV.o
    0x000021e6   0x000021e6   0x00000020   Code   RO         1495    .text.TM_RepetitionCounter_Config  MG32x02z_TM_DRV.o
    0x00002206   0x00002206   0x00000014   Code   RO         1453    .text.TM_SetCC1B    MG32x02z_TM_DRV.o
    0x0000221a   0x0000221a   0x00000014   Code   RO         1455    .text.TM_SetCC2B    MG32x02z_TM_DRV.o
    0x0000222e   0x0000222e   0x0000001e   Code   RO         1211    .text.TM_SetCounterDirection  MG32x02z_TM_DRV.o
    0x0000224c   0x0000224c   0x0000001e   Code   RO         1209    .text.TM_SetInternalClockDivider  MG32x02z_TM_DRV.o
    0x0000226a   0x0000226a   0x0000001c   Code   RO         1213    .text.TM_SetPrescalerDirection  MG32x02z_TM_DRV.o
    0x00002286   0x00002286   0x0000001e   Code   RO         1245    .text.TM_TRGICounter_Select  MG32x02z_TM_DRV.o
    0x000022a4   0x000022a4   0x0000001e   Code   RO         1247    .text.TM_TRGIPrescaler_Select  MG32x02z_TM_DRV.o
    0x000022c2   0x000022c2   0x0000002c   Code   RO         1195    .text.TM_TimeBaseStruct_Init  MG32x02z_TM_DRV.o
    0x000022ee   0x000022ee   0x00000094   Code   RO         1197    .text.TM_TimeBase_Init  MG32x02z_TM_DRV.o
    0x00002382   0x00002382   0x0000001e   Code   RO         1203    .text.TM_TimerMode_Select  MG32x02z_TM_DRV.o
    0x000023a0   0x000023a0   0x0000002c   Code   RO         1233    .text.TM_Timer_Cmd  MG32x02z_TM_DRV.o
    0x000023cc   0x000023cc   0x0000001c   Code   RO         1243    .text.TM_TriggerSource_Select  MG32x02z_TM_DRV.o
    0x000023e8   0x000023e8   0x00000100   Code   RO         2134    .text.URT123_IRQHandler  MG32x02z_RGB_MBIA045_API.o
    0x000024e8   0x000024e8   0x00000020   Code   RO         1598    .text.URT_BaudRateGenerator_Cmd  MG32x02z_URT_DRV.o
    0x00002508   0x00002508   0x0000004c   Code   RO         1582    .text.URT_BaudRateGenerator_Config  MG32x02z_URT_DRV.o
    0x00002554   0x00002554   0x00000022   Code   RO         1580    .text.URT_Cmd       MG32x02z_URT_DRV.o
    0x00002576   0x00002576   0x0000005a   Code   RO         1560    .text.URT_DataCharacter_Config  MG32x02z_URT_DRV.o
    0x000025d0   0x000025d0   0x00000022   Code   RO         1538    .text.URT_ITEA_Cmd  MG32x02z_URT_DRV.o
    0x000025f2   0x000025f2   0x00000020   Code   RO         1534    .text.URT_IT_Config  MG32x02z_URT_DRV.o
    0x00002612   0x00002612   0x0000001c   Code   RO         1610    .text.URT_RXClockSource_Select  MG32x02z_URT_DRV.o
    0x0000262e   0x0000262e   0x00000022   Code   RO         1616    .text.URT_RXOverSamplingMode_Select  MG32x02z_URT_DRV.o
    0x00002650   0x00002650   0x0000002e   Code   RO         1614    .text.URT_RXOverSamplingSampleNumber_Select  MG32x02z_URT_DRV.o
    0x0000267e   0x0000267e   0x00000024   Code   RO         1572    .text.URT_RX_Cmd    MG32x02z_URT_DRV.o
    0x000026a2   0x000026a2   0x0000001c   Code   RO         1608    .text.URT_TXClockSource_Select  MG32x02z_URT_DRV.o
    0x000026be   0x000026be   0x00000026   Code   RO         1576    .text.URT_TXInverse_Cmd  MG32x02z_URT_DRV.o
    0x000026e4   0x000026e4   0x0000002e   Code   RO         1612    .text.URT_TXOverSamplingSampleNumber_Select  MG32x02z_URT_DRV.o
    0x00002712   0x00002712   0x00000024   Code   RO         1570    .text.URT_TX_Cmd    MG32x02z_URT_DRV.o
    0x00002736   0x00002736   0x00000002   PAD
    0x00002738   0x00002738   0x00000028   Code   RO         2069    .text.__NVIC_EnableIRQ  MG32x02z_RGB_API.o
    0x00002760   0x00002760   0x0000002c   Code   RO         2124    .text.__NVIC_EnableIRQ  MG32x02z_RGB_MBIA045_API.o
    0x0000278c   0x0000278c   0x00000018   Code   RO         2160    .text.main          main.o
    0x000027a4   0x000027a4   0x00000020   Code   RO         2182    i.__0printf         mc_p.l(printfa.o)
    0x000027c4   0x000027c4   0x0000002e   Code   RO         2259    i.__ARM_clz         mf_p.l(depilogue.o)
    0x000027f2   0x000027f2   0x0000000e   Code   RO         2275    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00002800   0x00002800   0x00000002   Code   RO         2276    i.__scatterload_null  mc_p.l(handlers.o)
    0x00002802   0x00002802   0x0000000e   Code   RO         2277    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00002810   0x00002810   0x00000174   Code   RO         2189    i._fp_digits        mc_p.l(printfa.o)
    0x00002984   0x00002984   0x000006ec   Code   RO         2190    i._printf_core      mc_p.l(printfa.o)
    0x00003070   0x00003070   0x00000020   Code   RO         2191    i._printf_post_padding  mc_p.l(printfa.o)
    0x00003090   0x00003090   0x0000002c   Code   RO         2192    i._printf_pre_padding  mc_p.l(printfa.o)
    0x000030bc   0x000030bc   0x00000012   Code   RO         2237    i.fputc             mc_p.l(fputc.o)
    0x000030ce   0x000030ce   0x00000114   Data   RO         2051    .rodata.API_KBRGBDefault_BColorTable  MG32x02z_RGBTable_API.o
    0x000031e2   0x000031e2   0x00000114   Data   RO         2050    .rodata.API_KBRGBDefault_GColorTable  MG32x02z_RGBTable_API.o
    0x000032f6   0x000032f6   0x00000114   Data   RO         2049    .rodata.API_KBRGBDefault_RColorTable  MG32x02z_RGBTable_API.o
    0x0000340a   0x0000340a   0x00000006   Data   RO         2054    .rodata.API_KBRGBDemo_BColorTable  MG32x02z_RGBTable_API.o
    0x00003410   0x00003410   0x00000006   Data   RO         2053    .rodata.API_KBRGBDemo_GColorTable  MG32x02z_RGBTable_API.o
    0x00003416   0x00003416   0x00000006   Data   RO         2052    .rodata.API_KBRGBDemo_RColorTable  MG32x02z_RGBTable_API.o
    0x0000341c   0x0000341c   0x00000050   Data   RO         1989    .rodata.CSC_InitConfig  MG32x02z_CSC_Init.o
    0x0000346c   0x0000346c   0x00000004   Data   RO         2007    .rodata.GPIO_CFG    MG32x02z_GPIO_Init.o
    0x00003470   0x00003470   0x000000b7   Data   RO         2037    .rodata.str1.1      system_MG32x02z.o
    0x00003527   0x00003527   0x00000001   PAD
    0x00003528   0x00003528   0x00000020   Data   RO         2274    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00003548, Size: 0x00000a90, Max: 0x00003800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003548   0x00000004   Data   RW         2241    .data               mc_p.l(stdout.o)
    0x20000004   0x0000354c   0x0000002d   Data   RW         2047    .data.API_RGB_DOT_TABLE  MG32x02z_RGBTable_API.o
    0x20000031   0x00003579   0x00000011   Data   RW         2149    .data.LED_RainTable  MG32x02z_RGB_MBIA045_API.o
    0x20000042   0x0000358a   0x00000002   PAD
    0x20000044   0x0000358c   0x00000004   Data   RW         2028    .data.SystemCoreClock  system_MG32x02z.o
    0x20000048        -       0x0000008a   Zero   RW         2104    .bss.API_KBRGB_BColorScenery  MG32x02z_RGB_API.o
    0x200000d2        -       0x0000008a   Zero   RW         2108    .bss.API_KBRGB_BColorSceneryTable  MG32x02z_RGB_API.o
    0x2000015c        -       0x0000008a   Zero   RW         2103    .bss.API_KBRGB_GColorScenery  MG32x02z_RGB_API.o
    0x200001e6        -       0x0000008a   Zero   RW         2107    .bss.API_KBRGB_GColorSceneryTable  MG32x02z_RGB_API.o
    0x20000270        -       0x0000008a   Zero   RW         2102    .bss.API_KBRGB_RColorScenery  MG32x02z_RGB_API.o
    0x200002fa        -       0x0000008a   Zero   RW         2106    .bss.API_KBRGB_RColorSceneryTable  MG32x02z_RGB_API.o
    0x20000384        -       0x00000228   Zero   RW         2101    .bss.API_KB_ActDrama  MG32x02z_RGB_API.o
    0x200005ac        -       0x00000060   Zero   RW         2142    .bss.API_LED_UpdateDataBuf  MG32x02z_RGB_MBIA045_API.o
    0x2000060c        -       0x00000001   Zero   RW         2143    .bss.API_LED_pUpdateDataBuf  MG32x02z_RGB_MBIA045_API.o
    0x2000060d   0x00003590   0x00000003   PAD
    0x20000610        -       0x00000054   Zero   RW         2105    .bss.API_RGB_CTR    MG32x02z_RGB_API.o
    0x20000664        -       0x00000004   Zero   RW         2034    .bss.HardFault_Handler_C.stacked_lr  system_MG32x02z.o
    0x20000668        -       0x00000004   Zero   RW         2035    .bss.HardFault_Handler_C.stacked_pc  system_MG32x02z.o
    0x2000066c        -       0x00000004   Zero   RW         2036    .bss.HardFault_Handler_C.stacked_psr  system_MG32x02z.o
    0x20000670        -       0x00000004   Zero   RW         2029    .bss.HardFault_Handler_C.stacked_r0  system_MG32x02z.o
    0x20000674        -       0x00000004   Zero   RW         2030    .bss.HardFault_Handler_C.stacked_r1  system_MG32x02z.o
    0x20000678        -       0x00000004   Zero   RW         2033    .bss.HardFault_Handler_C.stacked_r12  system_MG32x02z.o
    0x2000067c        -       0x00000004   Zero   RW         2031    .bss.HardFault_Handler_C.stacked_r2  system_MG32x02z.o
    0x20000680        -       0x00000004   Zero   RW         2032    .bss.HardFault_Handler_C.stacked_r3  system_MG32x02z.o
    0x20000684        -       0x00000001   Zero   RW         2145    .bss.LED_DataLatch_LastBit  MG32x02z_RGB_MBIA045_API.o
    0x20000685        -       0x00000001   Zero   RW         2144    .bss.LED_DataLatch_Tmp  MG32x02z_RGB_MBIA045_API.o
    0x20000686        -       0x00000001   Zero   RW         2148    .bss.LED_RainCNT    MG32x02z_RGB_MBIA045_API.o
    0x20000687        -       0x00000001   Zero   RW         2146    .bss.LED_RainDelay  MG32x02z_RGB_MBIA045_API.o
    0x20000688        -       0x00000001   Zero   RW         2147    .bss.LED_RainUpdateEvent  MG32x02z_RGB_MBIA045_API.o
    0x20000689   0x00003590   0x00000007   PAD
    0x20000690        -       0x00000400   Zero   RW            1    STACK               startup_MG32x02z.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       752        112         80          0          0       9314   MG32x02z_CSC_Init.o
        24          4          0          0          0       1902   MG32x02z_ChipInit.o
       848          4          0          0          0      17898   MG32x02z_DMA_DRV.o
       214          0          0          0          0       8611   MG32x02z_GPIO_DRV.o
        52          4          4          0          0       1061   MG32x02z_GPIO_Init.o
         0          0        846         45          0       1225   MG32x02z_RGBTable_API.o
      2028        132          0          0       1464      30059   MG32x02z_RGB_API.o
      1652        252          0         17        102      28533   MG32x02z_RGB_MBIA045_API.o
       720          8          0          0          0      15223   MG32x02z_SPI_DRV.o
      1244          4          0          0          0      35883   MG32x02z_TM_DRV.o
       590          4          0          0          0      31207   MG32x02z_URT_DRV.o
        24          0          0          0          0        584   main.o
        60         12        192          0       1024        908   startup_MG32x02z.o
       272         80        183          4         32       4757   system_MG32x02z.o

    ----------------------------------------------------------------------
      8488        616       1338         68       2632     187165   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          1          2         10          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        18          0          0          0          0         72   fputc.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
         0          0          0          0          0          0   iusesemip.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0        100   memseta.o
      2252         98          0          0          0        412   printfa.o
         0          0          0          0          0          0   semi.o
         0          0          0          4          0          0   stdout.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdrcmple.o
       356          4          0          0          0        140   dadd.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        64         10          0          0          0         68   dfixul.o
       208          6          0          0          0         88   dmul.o

    ----------------------------------------------------------------------
      3814        144          0          4          0       1676   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2666        116          0          4          0       1012   mc_p.l
      1144         28          0          0          0        664   mf_p.l

    ----------------------------------------------------------------------
      3814        144          0          4          0       1676   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12302        760       1338         72       2632     187973   Grand Totals
     12302        760       1338         72       2632     187973   ELF Image Totals
     12302        760       1338         72          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13640 (  13.32kB)
    Total RW  Size (RW Data + ZI Data)              2704 (   2.64kB)
    Total ROM Size (Code + RO Data + RW Data)      13712 (  13.39kB)

==============================================================================

